<?php
namespace Aws\AppFabric;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **AppFabric** service.
 * @method Result batchGetUserAccessTasks(array $args = [])
 * @method Promise batchGetUserAccessTasksAsync(array $args = [])
 * @method Result connectAppAuthorization(array $args = [])
 * @method Promise connectAppAuthorizationAsync(array $args = [])
 * @method Result createAppAuthorization(array $args = [])
 * @method Promise createAppAuthorizationAsync(array $args = [])
 * @method Result createAppBundle(array $args = [])
 * @method Promise createAppBundleAsync(array $args = [])
 * @method Result createIngestion(array $args = [])
 * @method Promise createIngestionAsync(array $args = [])
 * @method Result createIngestionDestination(array $args = [])
 * @method Promise createIngestionDestinationAsync(array $args = [])
 * @method Result deleteAppAuthorization(array $args = [])
 * @method Promise deleteAppAuthorizationAsync(array $args = [])
 * @method Result deleteAppBundle(array $args = [])
 * @method Promise deleteAppBundleAsync(array $args = [])
 * @method Result deleteIngestion(array $args = [])
 * @method Promise deleteIngestionAsync(array $args = [])
 * @method Result deleteIngestionDestination(array $args = [])
 * @method Promise deleteIngestionDestinationAsync(array $args = [])
 * @method Result getAppAuthorization(array $args = [])
 * @method Promise getAppAuthorizationAsync(array $args = [])
 * @method Result getAppBundle(array $args = [])
 * @method Promise getAppBundleAsync(array $args = [])
 * @method Result getIngestion(array $args = [])
 * @method Promise getIngestionAsync(array $args = [])
 * @method Result getIngestionDestination(array $args = [])
 * @method Promise getIngestionDestinationAsync(array $args = [])
 * @method Result listAppAuthorizations(array $args = [])
 * @method Promise listAppAuthorizationsAsync(array $args = [])
 * @method Result listAppBundles(array $args = [])
 * @method Promise listAppBundlesAsync(array $args = [])
 * @method Result listIngestionDestinations(array $args = [])
 * @method Promise listIngestionDestinationsAsync(array $args = [])
 * @method Result listIngestions(array $args = [])
 * @method Promise listIngestionsAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result startIngestion(array $args = [])
 * @method Promise startIngestionAsync(array $args = [])
 * @method Result startUserAccessTasks(array $args = [])
 * @method Promise startUserAccessTasksAsync(array $args = [])
 * @method Result stopIngestion(array $args = [])
 * @method Promise stopIngestionAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateAppAuthorization(array $args = [])
 * @method Promise updateAppAuthorizationAsync(array $args = [])
 * @method Result updateIngestionDestination(array $args = [])
 * @method Promise updateIngestionDestinationAsync(array $args = [])
 */
class AppFabricClient extends AwsClient {}
