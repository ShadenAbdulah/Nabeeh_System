<?php
namespace Aws\CloudDirectory;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon CloudDirectory** service.
 * @method Result addFacetToObject(array $args = [])
 * @method Promise addFacetToObjectAsync(array $args = [])
 * @method Result applySchema(array $args = [])
 * @method Promise applySchemaAsync(array $args = [])
 * @method Result attachObject(array $args = [])
 * @method Promise attachObjectAsync(array $args = [])
 * @method Result attachPolicy(array $args = [])
 * @method Promise attachPolicyAsync(array $args = [])
 * @method Result attachToIndex(array $args = [])
 * @method Promise attachToIndexAsync(array $args = [])
 * @method Result attachTypedLink(array $args = [])
 * @method Promise attachTypedLinkAsync(array $args = [])
 * @method Result batchRead(array $args = [])
 * @method Promise batchReadAsync(array $args = [])
 * @method Result batchWrite(array $args = [])
 * @method Promise batchWriteAsync(array $args = [])
 * @method Result createDirectory(array $args = [])
 * @method Promise createDirectoryAsync(array $args = [])
 * @method Result createFacet(array $args = [])
 * @method Promise createFacetAsync(array $args = [])
 * @method Result createIndex(array $args = [])
 * @method Promise createIndexAsync(array $args = [])
 * @method Result createObject(array $args = [])
 * @method Promise createObjectAsync(array $args = [])
 * @method Result createSchema(array $args = [])
 * @method Promise createSchemaAsync(array $args = [])
 * @method Result createTypedLinkFacet(array $args = [])
 * @method Promise createTypedLinkFacetAsync(array $args = [])
 * @method Result deleteDirectory(array $args = [])
 * @method Promise deleteDirectoryAsync(array $args = [])
 * @method Result deleteFacet(array $args = [])
 * @method Promise deleteFacetAsync(array $args = [])
 * @method Result deleteObject(array $args = [])
 * @method Promise deleteObjectAsync(array $args = [])
 * @method Result deleteSchema(array $args = [])
 * @method Promise deleteSchemaAsync(array $args = [])
 * @method Result deleteTypedLinkFacet(array $args = [])
 * @method Promise deleteTypedLinkFacetAsync(array $args = [])
 * @method Result detachFromIndex(array $args = [])
 * @method Promise detachFromIndexAsync(array $args = [])
 * @method Result detachObject(array $args = [])
 * @method Promise detachObjectAsync(array $args = [])
 * @method Result detachPolicy(array $args = [])
 * @method Promise detachPolicyAsync(array $args = [])
 * @method Result detachTypedLink(array $args = [])
 * @method Promise detachTypedLinkAsync(array $args = [])
 * @method Result disableDirectory(array $args = [])
 * @method Promise disableDirectoryAsync(array $args = [])
 * @method Result enableDirectory(array $args = [])
 * @method Promise enableDirectoryAsync(array $args = [])
 * @method Result getAppliedSchemaVersion(array $args = [])
 * @method Promise getAppliedSchemaVersionAsync(array $args = [])
 * @method Result getDirectory(array $args = [])
 * @method Promise getDirectoryAsync(array $args = [])
 * @method Result getFacet(array $args = [])
 * @method Promise getFacetAsync(array $args = [])
 * @method Result getLinkAttributes(array $args = [])
 * @method Promise getLinkAttributesAsync(array $args = [])
 * @method Result getObjectAttributes(array $args = [])
 * @method Promise getObjectAttributesAsync(array $args = [])
 * @method Result getObjectInformation(array $args = [])
 * @method Promise getObjectInformationAsync(array $args = [])
 * @method Result getSchemaAsJson(array $args = [])
 * @method Promise getSchemaAsJsonAsync(array $args = [])
 * @method Result getTypedLinkFacetInformation(array $args = [])
 * @method Promise getTypedLinkFacetInformationAsync(array $args = [])
 * @method Result listAppliedSchemaArns(array $args = [])
 * @method Promise listAppliedSchemaArnsAsync(array $args = [])
 * @method Result listAttachedIndices(array $args = [])
 * @method Promise listAttachedIndicesAsync(array $args = [])
 * @method Result listDevelopmentSchemaArns(array $args = [])
 * @method Promise listDevelopmentSchemaArnsAsync(array $args = [])
 * @method Result listDirectories(array $args = [])
 * @method Promise listDirectoriesAsync(array $args = [])
 * @method Result listFacetAttributes(array $args = [])
 * @method Promise listFacetAttributesAsync(array $args = [])
 * @method Result listFacetNames(array $args = [])
 * @method Promise listFacetNamesAsync(array $args = [])
 * @method Result listIncomingTypedLinks(array $args = [])
 * @method Promise listIncomingTypedLinksAsync(array $args = [])
 * @method Result listIndex(array $args = [])
 * @method Promise listIndexAsync(array $args = [])
 * @method Result listObjectAttributes(array $args = [])
 * @method Promise listObjectAttributesAsync(array $args = [])
 * @method Result listObjectChildren(array $args = [])
 * @method Promise listObjectChildrenAsync(array $args = [])
 * @method Result listObjectParentPaths(array $args = [])
 * @method Promise listObjectParentPathsAsync(array $args = [])
 * @method Result listObjectParents(array $args = [])
 * @method Promise listObjectParentsAsync(array $args = [])
 * @method Result listObjectPolicies(array $args = [])
 * @method Promise listObjectPoliciesAsync(array $args = [])
 * @method Result listOutgoingTypedLinks(array $args = [])
 * @method Promise listOutgoingTypedLinksAsync(array $args = [])
 * @method Result listPolicyAttachments(array $args = [])
 * @method Promise listPolicyAttachmentsAsync(array $args = [])
 * @method Result listPublishedSchemaArns(array $args = [])
 * @method Promise listPublishedSchemaArnsAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result listTypedLinkFacetAttributes(array $args = [])
 * @method Promise listTypedLinkFacetAttributesAsync(array $args = [])
 * @method Result listTypedLinkFacetNames(array $args = [])
 * @method Promise listTypedLinkFacetNamesAsync(array $args = [])
 * @method Result lookupPolicy(array $args = [])
 * @method Promise lookupPolicyAsync(array $args = [])
 * @method Result publishSchema(array $args = [])
 * @method Promise publishSchemaAsync(array $args = [])
 * @method Result putSchemaFromJson(array $args = [])
 * @method Promise putSchemaFromJsonAsync(array $args = [])
 * @method Result removeFacetFromObject(array $args = [])
 * @method Promise removeFacetFromObjectAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateFacet(array $args = [])
 * @method Promise updateFacetAsync(array $args = [])
 * @method Result updateLinkAttributes(array $args = [])
 * @method Promise updateLinkAttributesAsync(array $args = [])
 * @method Result updateObjectAttributes(array $args = [])
 * @method Promise updateObjectAttributesAsync(array $args = [])
 * @method Result updateSchema(array $args = [])
 * @method Promise updateSchemaAsync(array $args = [])
 * @method Result updateTypedLinkFacet(array $args = [])
 * @method Promise updateTypedLinkFacetAsync(array $args = [])
 * @method Result upgradeAppliedSchema(array $args = [])
 * @method Promise upgradeAppliedSchemaAsync(array $args = [])
 * @method Result upgradePublishedSchema(array $args = [])
 * @method Promise upgradePublishedSchemaAsync(array $args = [])
 * @method Result listManagedSchemaArns(array $args = []) (supported in versions 2017-01-11)
 * @method Promise listManagedSchemaArnsAsync(array $args = []) (supported in versions 2017-01-11)
 */
class CloudDirectoryClient extends AwsClient {}
