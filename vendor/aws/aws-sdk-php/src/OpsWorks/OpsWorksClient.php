<?php
namespace Aws\OpsWorks;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **AWS OpsWorks** service.
 *
 * @method Result assignInstance(array $args = [])
 * @method Promise assignInstanceAsync(array $args = [])
 * @method Result assignVolume(array $args = [])
 * @method Promise assignVolumeAsync(array $args = [])
 * @method Result associateElasticIp(array $args = [])
 * @method Promise associateElasticIpAsync(array $args = [])
 * @method Result attachElasticLoadBalancer(array $args = [])
 * @method Promise attachElasticLoadBalancerAsync(array $args = [])
 * @method Result cloneStack(array $args = [])
 * @method Promise cloneStackAsync(array $args = [])
 * @method Result createApp(array $args = [])
 * @method Promise createAppAsync(array $args = [])
 * @method Result createDeployment(array $args = [])
 * @method Promise createDeploymentAsync(array $args = [])
 * @method Result createInstance(array $args = [])
 * @method Promise createInstanceAsync(array $args = [])
 * @method Result createLayer(array $args = [])
 * @method Promise createLayerAsync(array $args = [])
 * @method Result createStack(array $args = [])
 * @method Promise createStackAsync(array $args = [])
 * @method Result createUserProfile(array $args = [])
 * @method Promise createUserProfileAsync(array $args = [])
 * @method Result deleteApp(array $args = [])
 * @method Promise deleteAppAsync(array $args = [])
 * @method Result deleteInstance(array $args = [])
 * @method Promise deleteInstanceAsync(array $args = [])
 * @method Result deleteLayer(array $args = [])
 * @method Promise deleteLayerAsync(array $args = [])
 * @method Result deleteStack(array $args = [])
 * @method Promise deleteStackAsync(array $args = [])
 * @method Result deleteUserProfile(array $args = [])
 * @method Promise deleteUserProfileAsync(array $args = [])
 * @method Result deregisterEcsCluster(array $args = [])
 * @method Promise deregisterEcsClusterAsync(array $args = [])
 * @method Result deregisterElasticIp(array $args = [])
 * @method Promise deregisterElasticIpAsync(array $args = [])
 * @method Result deregisterInstance(array $args = [])
 * @method Promise deregisterInstanceAsync(array $args = [])
 * @method Result deregisterRdsDbInstance(array $args = [])
 * @method Promise deregisterRdsDbInstanceAsync(array $args = [])
 * @method Result deregisterVolume(array $args = [])
 * @method Promise deregisterVolumeAsync(array $args = [])
 * @method Result describeAgentVersions(array $args = [])
 * @method Promise describeAgentVersionsAsync(array $args = [])
 * @method Result describeApps(array $args = [])
 * @method Promise describeAppsAsync(array $args = [])
 * @method Result describeCommands(array $args = [])
 * @method Promise describeCommandsAsync(array $args = [])
 * @method Result describeDeployments(array $args = [])
 * @method Promise describeDeploymentsAsync(array $args = [])
 * @method Result describeEcsClusters(array $args = [])
 * @method Promise describeEcsClustersAsync(array $args = [])
 * @method Result describeElasticIps(array $args = [])
 * @method Promise describeElasticIpsAsync(array $args = [])
 * @method Result describeElasticLoadBalancers(array $args = [])
 * @method Promise describeElasticLoadBalancersAsync(array $args = [])
 * @method Result describeInstances(array $args = [])
 * @method Promise describeInstancesAsync(array $args = [])
 * @method Result describeLayers(array $args = [])
 * @method Promise describeLayersAsync(array $args = [])
 * @method Result describeLoadBasedAutoScaling(array $args = [])
 * @method Promise describeLoadBasedAutoScalingAsync(array $args = [])
 * @method Result describeMyUserProfile(array $args = [])
 * @method Promise describeMyUserProfileAsync(array $args = [])
 * @method Result describeOperatingSystems(array $args = [])
 * @method Promise describeOperatingSystemsAsync(array $args = [])
 * @method Result describePermissions(array $args = [])
 * @method Promise describePermissionsAsync(array $args = [])
 * @method Result describeRaidArrays(array $args = [])
 * @method Promise describeRaidArraysAsync(array $args = [])
 * @method Result describeRdsDbInstances(array $args = [])
 * @method Promise describeRdsDbInstancesAsync(array $args = [])
 * @method Result describeServiceErrors(array $args = [])
 * @method Promise describeServiceErrorsAsync(array $args = [])
 * @method Result describeStackProvisioningParameters(array $args = [])
 * @method Promise describeStackProvisioningParametersAsync(array $args = [])
 * @method Result describeStackSummary(array $args = [])
 * @method Promise describeStackSummaryAsync(array $args = [])
 * @method Result describeStacks(array $args = [])
 * @method Promise describeStacksAsync(array $args = [])
 * @method Result describeTimeBasedAutoScaling(array $args = [])
 * @method Promise describeTimeBasedAutoScalingAsync(array $args = [])
 * @method Result describeUserProfiles(array $args = [])
 * @method Promise describeUserProfilesAsync(array $args = [])
 * @method Result describeVolumes(array $args = [])
 * @method Promise describeVolumesAsync(array $args = [])
 * @method Result detachElasticLoadBalancer(array $args = [])
 * @method Promise detachElasticLoadBalancerAsync(array $args = [])
 * @method Result disassociateElasticIp(array $args = [])
 * @method Promise disassociateElasticIpAsync(array $args = [])
 * @method Result getHostnameSuggestion(array $args = [])
 * @method Promise getHostnameSuggestionAsync(array $args = [])
 * @method Result grantAccess(array $args = [])
 * @method Promise grantAccessAsync(array $args = [])
 * @method Result listTags(array $args = [])
 * @method Promise listTagsAsync(array $args = [])
 * @method Result rebootInstance(array $args = [])
 * @method Promise rebootInstanceAsync(array $args = [])
 * @method Result registerEcsCluster(array $args = [])
 * @method Promise registerEcsClusterAsync(array $args = [])
 * @method Result registerElasticIp(array $args = [])
 * @method Promise registerElasticIpAsync(array $args = [])
 * @method Result registerInstance(array $args = [])
 * @method Promise registerInstanceAsync(array $args = [])
 * @method Result registerRdsDbInstance(array $args = [])
 * @method Promise registerRdsDbInstanceAsync(array $args = [])
 * @method Result registerVolume(array $args = [])
 * @method Promise registerVolumeAsync(array $args = [])
 * @method Result setLoadBasedAutoScaling(array $args = [])
 * @method Promise setLoadBasedAutoScalingAsync(array $args = [])
 * @method Result setPermission(array $args = [])
 * @method Promise setPermissionAsync(array $args = [])
 * @method Result setTimeBasedAutoScaling(array $args = [])
 * @method Promise setTimeBasedAutoScalingAsync(array $args = [])
 * @method Result startInstance(array $args = [])
 * @method Promise startInstanceAsync(array $args = [])
 * @method Result startStack(array $args = [])
 * @method Promise startStackAsync(array $args = [])
 * @method Result stopInstance(array $args = [])
 * @method Promise stopInstanceAsync(array $args = [])
 * @method Result stopStack(array $args = [])
 * @method Promise stopStackAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result unassignInstance(array $args = [])
 * @method Promise unassignInstanceAsync(array $args = [])
 * @method Result unassignVolume(array $args = [])
 * @method Promise unassignVolumeAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateApp(array $args = [])
 * @method Promise updateAppAsync(array $args = [])
 * @method Result updateElasticIp(array $args = [])
 * @method Promise updateElasticIpAsync(array $args = [])
 * @method Result updateInstance(array $args = [])
 * @method Promise updateInstanceAsync(array $args = [])
 * @method Result updateLayer(array $args = [])
 * @method Promise updateLayerAsync(array $args = [])
 * @method Result updateMyUserProfile(array $args = [])
 * @method Promise updateMyUserProfileAsync(array $args = [])
 * @method Result updateRdsDbInstance(array $args = [])
 * @method Promise updateRdsDbInstanceAsync(array $args = [])
 * @method Result updateStack(array $args = [])
 * @method Promise updateStackAsync(array $args = [])
 * @method Result updateUserProfile(array $args = [])
 * @method Promise updateUserProfileAsync(array $args = [])
 * @method Result updateVolume(array $args = [])
 * @method Promise updateVolumeAsync(array $args = [])
 */
class OpsWorksClient extends AwsClient {}
