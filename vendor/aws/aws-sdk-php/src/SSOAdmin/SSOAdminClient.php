<?php
namespace Aws\SSOAdmin;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **AWS Single Sign-On Admin** service.
 * @method Result attachCustomerManagedPolicyReferenceToPermissionSet(array $args = [])
 * @method Promise attachCustomerManagedPolicyReferenceToPermissionSetAsync(array $args = [])
 * @method Result attachManagedPolicyToPermissionSet(array $args = [])
 * @method Promise attachManagedPolicyToPermissionSetAsync(array $args = [])
 * @method Result createAccountAssignment(array $args = [])
 * @method Promise createAccountAssignmentAsync(array $args = [])
 * @method Result createApplication(array $args = [])
 * @method Promise createApplicationAsync(array $args = [])
 * @method Result createApplicationAssignment(array $args = [])
 * @method Promise createApplicationAssignmentAsync(array $args = [])
 * @method Result createInstance(array $args = [])
 * @method Promise createInstanceAsync(array $args = [])
 * @method Result createInstanceAccessControlAttributeConfiguration(array $args = [])
 * @method Promise createInstanceAccessControlAttributeConfigurationAsync(array $args = [])
 * @method Result createPermissionSet(array $args = [])
 * @method Promise createPermissionSetAsync(array $args = [])
 * @method Result createTrustedTokenIssuer(array $args = [])
 * @method Promise createTrustedTokenIssuerAsync(array $args = [])
 * @method Result deleteAccountAssignment(array $args = [])
 * @method Promise deleteAccountAssignmentAsync(array $args = [])
 * @method Result deleteApplication(array $args = [])
 * @method Promise deleteApplicationAsync(array $args = [])
 * @method Result deleteApplicationAccessScope(array $args = [])
 * @method Promise deleteApplicationAccessScopeAsync(array $args = [])
 * @method Result deleteApplicationAssignment(array $args = [])
 * @method Promise deleteApplicationAssignmentAsync(array $args = [])
 * @method Result deleteApplicationAuthenticationMethod(array $args = [])
 * @method Promise deleteApplicationAuthenticationMethodAsync(array $args = [])
 * @method Result deleteApplicationGrant(array $args = [])
 * @method Promise deleteApplicationGrantAsync(array $args = [])
 * @method Result deleteInlinePolicyFromPermissionSet(array $args = [])
 * @method Promise deleteInlinePolicyFromPermissionSetAsync(array $args = [])
 * @method Result deleteInstance(array $args = [])
 * @method Promise deleteInstanceAsync(array $args = [])
 * @method Result deleteInstanceAccessControlAttributeConfiguration(array $args = [])
 * @method Promise deleteInstanceAccessControlAttributeConfigurationAsync(array $args = [])
 * @method Result deletePermissionSet(array $args = [])
 * @method Promise deletePermissionSetAsync(array $args = [])
 * @method Result deletePermissionsBoundaryFromPermissionSet(array $args = [])
 * @method Promise deletePermissionsBoundaryFromPermissionSetAsync(array $args = [])
 * @method Result deleteTrustedTokenIssuer(array $args = [])
 * @method Promise deleteTrustedTokenIssuerAsync(array $args = [])
 * @method Result describeAccountAssignmentCreationStatus(array $args = [])
 * @method Promise describeAccountAssignmentCreationStatusAsync(array $args = [])
 * @method Result describeAccountAssignmentDeletionStatus(array $args = [])
 * @method Promise describeAccountAssignmentDeletionStatusAsync(array $args = [])
 * @method Result describeApplication(array $args = [])
 * @method Promise describeApplicationAsync(array $args = [])
 * @method Result describeApplicationAssignment(array $args = [])
 * @method Promise describeApplicationAssignmentAsync(array $args = [])
 * @method Result describeApplicationProvider(array $args = [])
 * @method Promise describeApplicationProviderAsync(array $args = [])
 * @method Result describeInstance(array $args = [])
 * @method Promise describeInstanceAsync(array $args = [])
 * @method Result describeInstanceAccessControlAttributeConfiguration(array $args = [])
 * @method Promise describeInstanceAccessControlAttributeConfigurationAsync(array $args = [])
 * @method Result describePermissionSet(array $args = [])
 * @method Promise describePermissionSetAsync(array $args = [])
 * @method Result describePermissionSetProvisioningStatus(array $args = [])
 * @method Promise describePermissionSetProvisioningStatusAsync(array $args = [])
 * @method Result describeTrustedTokenIssuer(array $args = [])
 * @method Promise describeTrustedTokenIssuerAsync(array $args = [])
 * @method Result detachCustomerManagedPolicyReferenceFromPermissionSet(array $args = [])
 * @method Promise detachCustomerManagedPolicyReferenceFromPermissionSetAsync(array $args = [])
 * @method Result detachManagedPolicyFromPermissionSet(array $args = [])
 * @method Promise detachManagedPolicyFromPermissionSetAsync(array $args = [])
 * @method Result getApplicationAccessScope(array $args = [])
 * @method Promise getApplicationAccessScopeAsync(array $args = [])
 * @method Result getApplicationAssignmentConfiguration(array $args = [])
 * @method Promise getApplicationAssignmentConfigurationAsync(array $args = [])
 * @method Result getApplicationAuthenticationMethod(array $args = [])
 * @method Promise getApplicationAuthenticationMethodAsync(array $args = [])
 * @method Result getApplicationGrant(array $args = [])
 * @method Promise getApplicationGrantAsync(array $args = [])
 * @method Result getInlinePolicyForPermissionSet(array $args = [])
 * @method Promise getInlinePolicyForPermissionSetAsync(array $args = [])
 * @method Result getPermissionsBoundaryForPermissionSet(array $args = [])
 * @method Promise getPermissionsBoundaryForPermissionSetAsync(array $args = [])
 * @method Result listAccountAssignmentCreationStatus(array $args = [])
 * @method Promise listAccountAssignmentCreationStatusAsync(array $args = [])
 * @method Result listAccountAssignmentDeletionStatus(array $args = [])
 * @method Promise listAccountAssignmentDeletionStatusAsync(array $args = [])
 * @method Result listAccountAssignments(array $args = [])
 * @method Promise listAccountAssignmentsAsync(array $args = [])
 * @method Result listAccountAssignmentsForPrincipal(array $args = [])
 * @method Promise listAccountAssignmentsForPrincipalAsync(array $args = [])
 * @method Result listAccountsForProvisionedPermissionSet(array $args = [])
 * @method Promise listAccountsForProvisionedPermissionSetAsync(array $args = [])
 * @method Result listApplicationAccessScopes(array $args = [])
 * @method Promise listApplicationAccessScopesAsync(array $args = [])
 * @method Result listApplicationAssignments(array $args = [])
 * @method Promise listApplicationAssignmentsAsync(array $args = [])
 * @method Result listApplicationAssignmentsForPrincipal(array $args = [])
 * @method Promise listApplicationAssignmentsForPrincipalAsync(array $args = [])
 * @method Result listApplicationAuthenticationMethods(array $args = [])
 * @method Promise listApplicationAuthenticationMethodsAsync(array $args = [])
 * @method Result listApplicationGrants(array $args = [])
 * @method Promise listApplicationGrantsAsync(array $args = [])
 * @method Result listApplicationProviders(array $args = [])
 * @method Promise listApplicationProvidersAsync(array $args = [])
 * @method Result listApplications(array $args = [])
 * @method Promise listApplicationsAsync(array $args = [])
 * @method Result listCustomerManagedPolicyReferencesInPermissionSet(array $args = [])
 * @method Promise listCustomerManagedPolicyReferencesInPermissionSetAsync(array $args = [])
 * @method Result listInstances(array $args = [])
 * @method Promise listInstancesAsync(array $args = [])
 * @method Result listManagedPoliciesInPermissionSet(array $args = [])
 * @method Promise listManagedPoliciesInPermissionSetAsync(array $args = [])
 * @method Result listPermissionSetProvisioningStatus(array $args = [])
 * @method Promise listPermissionSetProvisioningStatusAsync(array $args = [])
 * @method Result listPermissionSets(array $args = [])
 * @method Promise listPermissionSetsAsync(array $args = [])
 * @method Result listPermissionSetsProvisionedToAccount(array $args = [])
 * @method Promise listPermissionSetsProvisionedToAccountAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result listTrustedTokenIssuers(array $args = [])
 * @method Promise listTrustedTokenIssuersAsync(array $args = [])
 * @method Result provisionPermissionSet(array $args = [])
 * @method Promise provisionPermissionSetAsync(array $args = [])
 * @method Result putApplicationAccessScope(array $args = [])
 * @method Promise putApplicationAccessScopeAsync(array $args = [])
 * @method Result putApplicationAssignmentConfiguration(array $args = [])
 * @method Promise putApplicationAssignmentConfigurationAsync(array $args = [])
 * @method Result putApplicationAuthenticationMethod(array $args = [])
 * @method Promise putApplicationAuthenticationMethodAsync(array $args = [])
 * @method Result putApplicationGrant(array $args = [])
 * @method Promise putApplicationGrantAsync(array $args = [])
 * @method Result putInlinePolicyToPermissionSet(array $args = [])
 * @method Promise putInlinePolicyToPermissionSetAsync(array $args = [])
 * @method Result putPermissionsBoundaryToPermissionSet(array $args = [])
 * @method Promise putPermissionsBoundaryToPermissionSetAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateApplication(array $args = [])
 * @method Promise updateApplicationAsync(array $args = [])
 * @method Result updateInstance(array $args = [])
 * @method Promise updateInstanceAsync(array $args = [])
 * @method Result updateInstanceAccessControlAttributeConfiguration(array $args = [])
 * @method Promise updateInstanceAccessControlAttributeConfigurationAsync(array $args = [])
 * @method Result updatePermissionSet(array $args = [])
 * @method Promise updatePermissionSetAsync(array $args = [])
 * @method Result updateTrustedTokenIssuer(array $args = [])
 * @method Promise updateTrustedTokenIssuerAsync(array $args = [])
 */
class SSOAdminClient extends AwsClient {}
