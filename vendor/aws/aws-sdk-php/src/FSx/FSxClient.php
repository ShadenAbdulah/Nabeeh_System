<?php
namespace Aws\FSx;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon FSx** service.
 * @method Result associateFileSystemAliases(array $args = [])
 * @method Promise associateFileSystemAliasesAsync(array $args = [])
 * @method Result cancelDataRepositoryTask(array $args = [])
 * @method Promise cancelDataRepositoryTaskAsync(array $args = [])
 * @method Result copyBackup(array $args = [])
 * @method Promise copyBackupAsync(array $args = [])
 * @method Result copySnapshotAndUpdateVolume(array $args = [])
 * @method Promise copySnapshotAndUpdateVolumeAsync(array $args = [])
 * @method Result createBackup(array $args = [])
 * @method Promise createBackupAsync(array $args = [])
 * @method Result createDataRepositoryAssociation(array $args = [])
 * @method Promise createDataRepositoryAssociationAsync(array $args = [])
 * @method Result createDataRepositoryTask(array $args = [])
 * @method Promise createDataRepositoryTaskAsync(array $args = [])
 * @method Result createFileCache(array $args = [])
 * @method Promise createFileCacheAsync(array $args = [])
 * @method Result createFileSystem(array $args = [])
 * @method Promise createFileSystemAsync(array $args = [])
 * @method Result createFileSystemFromBackup(array $args = [])
 * @method Promise createFileSystemFromBackupAsync(array $args = [])
 * @method Result createSnapshot(array $args = [])
 * @method Promise createSnapshotAsync(array $args = [])
 * @method Result createStorageVirtualMachine(array $args = [])
 * @method Promise createStorageVirtualMachineAsync(array $args = [])
 * @method Result createVolume(array $args = [])
 * @method Promise createVolumeAsync(array $args = [])
 * @method Result createVolumeFromBackup(array $args = [])
 * @method Promise createVolumeFromBackupAsync(array $args = [])
 * @method Result deleteBackup(array $args = [])
 * @method Promise deleteBackupAsync(array $args = [])
 * @method Result deleteDataRepositoryAssociation(array $args = [])
 * @method Promise deleteDataRepositoryAssociationAsync(array $args = [])
 * @method Result deleteFileCache(array $args = [])
 * @method Promise deleteFileCacheAsync(array $args = [])
 * @method Result deleteFileSystem(array $args = [])
 * @method Promise deleteFileSystemAsync(array $args = [])
 * @method Result deleteSnapshot(array $args = [])
 * @method Promise deleteSnapshotAsync(array $args = [])
 * @method Result deleteStorageVirtualMachine(array $args = [])
 * @method Promise deleteStorageVirtualMachineAsync(array $args = [])
 * @method Result deleteVolume(array $args = [])
 * @method Promise deleteVolumeAsync(array $args = [])
 * @method Result describeBackups(array $args = [])
 * @method Promise describeBackupsAsync(array $args = [])
 * @method Result describeDataRepositoryAssociations(array $args = [])
 * @method Promise describeDataRepositoryAssociationsAsync(array $args = [])
 * @method Result describeDataRepositoryTasks(array $args = [])
 * @method Promise describeDataRepositoryTasksAsync(array $args = [])
 * @method Result describeFileCaches(array $args = [])
 * @method Promise describeFileCachesAsync(array $args = [])
 * @method Result describeFileSystemAliases(array $args = [])
 * @method Promise describeFileSystemAliasesAsync(array $args = [])
 * @method Result describeFileSystems(array $args = [])
 * @method Promise describeFileSystemsAsync(array $args = [])
 * @method Result describeSharedVpcConfiguration(array $args = [])
 * @method Promise describeSharedVpcConfigurationAsync(array $args = [])
 * @method Result describeSnapshots(array $args = [])
 * @method Promise describeSnapshotsAsync(array $args = [])
 * @method Result describeStorageVirtualMachines(array $args = [])
 * @method Promise describeStorageVirtualMachinesAsync(array $args = [])
 * @method Result describeVolumes(array $args = [])
 * @method Promise describeVolumesAsync(array $args = [])
 * @method Result disassociateFileSystemAliases(array $args = [])
 * @method Promise disassociateFileSystemAliasesAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result releaseFileSystemNfsV3Locks(array $args = [])
 * @method Promise releaseFileSystemNfsV3LocksAsync(array $args = [])
 * @method Result restoreVolumeFromSnapshot(array $args = [])
 * @method Promise restoreVolumeFromSnapshotAsync(array $args = [])
 * @method Result startMisconfiguredStateRecovery(array $args = [])
 * @method Promise startMisconfiguredStateRecoveryAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateDataRepositoryAssociation(array $args = [])
 * @method Promise updateDataRepositoryAssociationAsync(array $args = [])
 * @method Result updateFileCache(array $args = [])
 * @method Promise updateFileCacheAsync(array $args = [])
 * @method Result updateFileSystem(array $args = [])
 * @method Promise updateFileSystemAsync(array $args = [])
 * @method Result updateSharedVpcConfiguration(array $args = [])
 * @method Promise updateSharedVpcConfigurationAsync(array $args = [])
 * @method Result updateSnapshot(array $args = [])
 * @method Promise updateSnapshotAsync(array $args = [])
 * @method Result updateStorageVirtualMachine(array $args = [])
 * @method Promise updateStorageVirtualMachineAsync(array $args = [])
 * @method Result updateVolume(array $args = [])
 * @method Promise updateVolumeAsync(array $args = [])
 */
class FSxClient extends AwsClient {}
