<?php
namespace Aws\NeptuneGraph;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon Neptune Graph** service.
 * @method Result cancelImportTask(array $args = [])
 * @method Promise cancelImportTaskAsync(array $args = [])
 * @method Result cancelQuery(array $args = [])
 * @method Promise cancelQueryAsync(array $args = [])
 * @method Result createGraph(array $args = [])
 * @method Promise createGraphAsync(array $args = [])
 * @method Result createGraphSnapshot(array $args = [])
 * @method Promise createGraphSnapshotAsync(array $args = [])
 * @method Result createGraphUsingImportTask(array $args = [])
 * @method Promise createGraphUsingImportTaskAsync(array $args = [])
 * @method Result createPrivateGraphEndpoint(array $args = [])
 * @method Promise createPrivateGraphEndpointAsync(array $args = [])
 * @method Result deleteGraph(array $args = [])
 * @method Promise deleteGraphAsync(array $args = [])
 * @method Result deleteGraphSnapshot(array $args = [])
 * @method Promise deleteGraphSnapshotAsync(array $args = [])
 * @method Result deletePrivateGraphEndpoint(array $args = [])
 * @method Promise deletePrivateGraphEndpointAsync(array $args = [])
 * @method Result executeQuery(array $args = [])
 * @method Promise executeQueryAsync(array $args = [])
 * @method Result getGraph(array $args = [])
 * @method Promise getGraphAsync(array $args = [])
 * @method Result getGraphSnapshot(array $args = [])
 * @method Promise getGraphSnapshotAsync(array $args = [])
 * @method Result getGraphSummary(array $args = [])
 * @method Promise getGraphSummaryAsync(array $args = [])
 * @method Result getImportTask(array $args = [])
 * @method Promise getImportTaskAsync(array $args = [])
 * @method Result getPrivateGraphEndpoint(array $args = [])
 * @method Promise getPrivateGraphEndpointAsync(array $args = [])
 * @method Result getQuery(array $args = [])
 * @method Promise getQueryAsync(array $args = [])
 * @method Result listGraphSnapshots(array $args = [])
 * @method Promise listGraphSnapshotsAsync(array $args = [])
 * @method Result listGraphs(array $args = [])
 * @method Promise listGraphsAsync(array $args = [])
 * @method Result listImportTasks(array $args = [])
 * @method Promise listImportTasksAsync(array $args = [])
 * @method Result listPrivateGraphEndpoints(array $args = [])
 * @method Promise listPrivateGraphEndpointsAsync(array $args = [])
 * @method Result listQueries(array $args = [])
 * @method Promise listQueriesAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result resetGraph(array $args = [])
 * @method Promise resetGraphAsync(array $args = [])
 * @method Result restoreGraphFromSnapshot(array $args = [])
 * @method Promise restoreGraphFromSnapshotAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateGraph(array $args = [])
 * @method Promise updateGraphAsync(array $args = [])
 */
class NeptuneGraphClient extends AwsClient {}
