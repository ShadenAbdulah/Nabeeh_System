<?php
namespace Aws\Textract;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon Textract** service.
 * @method Result analyzeDocument(array $args = [])
 * @method Promise analyzeDocumentAsync(array $args = [])
 * @method Result analyzeExpense(array $args = [])
 * @method Promise analyzeExpenseAsync(array $args = [])
 * @method Result analyzeID(array $args = [])
 * @method Promise analyzeIDAsync(array $args = [])
 * @method Result createAdapter(array $args = [])
 * @method Promise createAdapterAsync(array $args = [])
 * @method Result createAdapterVersion(array $args = [])
 * @method Promise createAdapterVersionAsync(array $args = [])
 * @method Result deleteAdapter(array $args = [])
 * @method Promise deleteAdapterAsync(array $args = [])
 * @method Result deleteAdapterVersion(array $args = [])
 * @method Promise deleteAdapterVersionAsync(array $args = [])
 * @method Result detectDocumentText(array $args = [])
 * @method Promise detectDocumentTextAsync(array $args = [])
 * @method Result getAdapter(array $args = [])
 * @method Promise getAdapterAsync(array $args = [])
 * @method Result getAdapterVersion(array $args = [])
 * @method Promise getAdapterVersionAsync(array $args = [])
 * @method Result getDocumentAnalysis(array $args = [])
 * @method Promise getDocumentAnalysisAsync(array $args = [])
 * @method Result getDocumentTextDetection(array $args = [])
 * @method Promise getDocumentTextDetectionAsync(array $args = [])
 * @method Result getExpenseAnalysis(array $args = [])
 * @method Promise getExpenseAnalysisAsync(array $args = [])
 * @method Result getLendingAnalysis(array $args = [])
 * @method Promise getLendingAnalysisAsync(array $args = [])
 * @method Result getLendingAnalysisSummary(array $args = [])
 * @method Promise getLendingAnalysisSummaryAsync(array $args = [])
 * @method Result listAdapterVersions(array $args = [])
 * @method Promise listAdapterVersionsAsync(array $args = [])
 * @method Result listAdapters(array $args = [])
 * @method Promise listAdaptersAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result startDocumentAnalysis(array $args = [])
 * @method Promise startDocumentAnalysisAsync(array $args = [])
 * @method Result startDocumentTextDetection(array $args = [])
 * @method Promise startDocumentTextDetectionAsync(array $args = [])
 * @method Result startExpenseAnalysis(array $args = [])
 * @method Promise startExpenseAnalysisAsync(array $args = [])
 * @method Result startLendingAnalysis(array $args = [])
 * @method Promise startLendingAnalysisAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateAdapter(array $args = [])
 * @method Promise updateAdapterAsync(array $args = [])
 */
class TextractClient extends AwsClient {}
