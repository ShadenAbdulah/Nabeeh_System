<?php
namespace Aws\ApiGatewayV2;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **AmazonApiGatewayV2** service.
 * @method Result createApi(array $args = [])
 * @method Promise createApiAsync(array $args = [])
 * @method Result createApiMapping(array $args = [])
 * @method Promise createApiMappingAsync(array $args = [])
 * @method Result createAuthorizer(array $args = [])
 * @method Promise createAuthorizerAsync(array $args = [])
 * @method Result createDeployment(array $args = [])
 * @method Promise createDeploymentAsync(array $args = [])
 * @method Result createDomainName(array $args = [])
 * @method Promise createDomainNameAsync(array $args = [])
 * @method Result createIntegration(array $args = [])
 * @method Promise createIntegrationAsync(array $args = [])
 * @method Result createIntegrationResponse(array $args = [])
 * @method Promise createIntegrationResponseAsync(array $args = [])
 * @method Result createModel(array $args = [])
 * @method Promise createModelAsync(array $args = [])
 * @method Result createRoute(array $args = [])
 * @method Promise createRouteAsync(array $args = [])
 * @method Result createRouteResponse(array $args = [])
 * @method Promise createRouteResponseAsync(array $args = [])
 * @method Result createStage(array $args = [])
 * @method Promise createStageAsync(array $args = [])
 * @method Result createVpcLink(array $args = [])
 * @method Promise createVpcLinkAsync(array $args = [])
 * @method Result deleteAccessLogSettings(array $args = [])
 * @method Promise deleteAccessLogSettingsAsync(array $args = [])
 * @method Result deleteApi(array $args = [])
 * @method Promise deleteApiAsync(array $args = [])
 * @method Result deleteApiMapping(array $args = [])
 * @method Promise deleteApiMappingAsync(array $args = [])
 * @method Result deleteAuthorizer(array $args = [])
 * @method Promise deleteAuthorizerAsync(array $args = [])
 * @method Result deleteCorsConfiguration(array $args = [])
 * @method Promise deleteCorsConfigurationAsync(array $args = [])
 * @method Result deleteDeployment(array $args = [])
 * @method Promise deleteDeploymentAsync(array $args = [])
 * @method Result deleteDomainName(array $args = [])
 * @method Promise deleteDomainNameAsync(array $args = [])
 * @method Result deleteIntegration(array $args = [])
 * @method Promise deleteIntegrationAsync(array $args = [])
 * @method Result deleteIntegrationResponse(array $args = [])
 * @method Promise deleteIntegrationResponseAsync(array $args = [])
 * @method Result deleteModel(array $args = [])
 * @method Promise deleteModelAsync(array $args = [])
 * @method Result deleteRoute(array $args = [])
 * @method Promise deleteRouteAsync(array $args = [])
 * @method Result deleteRouteRequestParameter(array $args = [])
 * @method Promise deleteRouteRequestParameterAsync(array $args = [])
 * @method Result deleteRouteResponse(array $args = [])
 * @method Promise deleteRouteResponseAsync(array $args = [])
 * @method Result deleteRouteSettings(array $args = [])
 * @method Promise deleteRouteSettingsAsync(array $args = [])
 * @method Result deleteStage(array $args = [])
 * @method Promise deleteStageAsync(array $args = [])
 * @method Result deleteVpcLink(array $args = [])
 * @method Promise deleteVpcLinkAsync(array $args = [])
 * @method Result exportApi(array $args = [])
 * @method Promise exportApiAsync(array $args = [])
 * @method Result resetAuthorizersCache(array $args = [])
 * @method Promise resetAuthorizersCacheAsync(array $args = [])
 * @method Result getApiResource(array $args = [])
 * @method Promise getApiResourceAsync(array $args = [])
 * @method Result getApiMapping(array $args = [])
 * @method Promise getApiMappingAsync(array $args = [])
 * @method Result getApiMappings(array $args = [])
 * @method Promise getApiMappingsAsync(array $args = [])
 * @method Result getApis(array $args = [])
 * @method Promise getApisAsync(array $args = [])
 * @method Result getAuthorizer(array $args = [])
 * @method Promise getAuthorizerAsync(array $args = [])
 * @method Result getAuthorizers(array $args = [])
 * @method Promise getAuthorizersAsync(array $args = [])
 * @method Result getDeployment(array $args = [])
 * @method Promise getDeploymentAsync(array $args = [])
 * @method Result getDeployments(array $args = [])
 * @method Promise getDeploymentsAsync(array $args = [])
 * @method Result getDomainName(array $args = [])
 * @method Promise getDomainNameAsync(array $args = [])
 * @method Result getDomainNames(array $args = [])
 * @method Promise getDomainNamesAsync(array $args = [])
 * @method Result getIntegration(array $args = [])
 * @method Promise getIntegrationAsync(array $args = [])
 * @method Result getIntegrationResponse(array $args = [])
 * @method Promise getIntegrationResponseAsync(array $args = [])
 * @method Result getIntegrationResponses(array $args = [])
 * @method Promise getIntegrationResponsesAsync(array $args = [])
 * @method Result getIntegrations(array $args = [])
 * @method Promise getIntegrationsAsync(array $args = [])
 * @method Result getModel(array $args = [])
 * @method Promise getModelAsync(array $args = [])
 * @method Result getModelTemplate(array $args = [])
 * @method Promise getModelTemplateAsync(array $args = [])
 * @method Result getModels(array $args = [])
 * @method Promise getModelsAsync(array $args = [])
 * @method Result getRoute(array $args = [])
 * @method Promise getRouteAsync(array $args = [])
 * @method Result getRouteResponse(array $args = [])
 * @method Promise getRouteResponseAsync(array $args = [])
 * @method Result getRouteResponses(array $args = [])
 * @method Promise getRouteResponsesAsync(array $args = [])
 * @method Result getRoutes(array $args = [])
 * @method Promise getRoutesAsync(array $args = [])
 * @method Result getStage(array $args = [])
 * @method Promise getStageAsync(array $args = [])
 * @method Result getStages(array $args = [])
 * @method Promise getStagesAsync(array $args = [])
 * @method Result getTags(array $args = [])
 * @method Promise getTagsAsync(array $args = [])
 * @method Result getVpcLink(array $args = [])
 * @method Promise getVpcLinkAsync(array $args = [])
 * @method Result getVpcLinks(array $args = [])
 * @method Promise getVpcLinksAsync(array $args = [])
 * @method Result importApi(array $args = [])
 * @method Promise importApiAsync(array $args = [])
 * @method Result reimportApi(array $args = [])
 * @method Promise reimportApiAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateApi(array $args = [])
 * @method Promise updateApiAsync(array $args = [])
 * @method Result updateApiMapping(array $args = [])
 * @method Promise updateApiMappingAsync(array $args = [])
 * @method Result updateAuthorizer(array $args = [])
 * @method Promise updateAuthorizerAsync(array $args = [])
 * @method Result updateDeployment(array $args = [])
 * @method Promise updateDeploymentAsync(array $args = [])
 * @method Result updateDomainName(array $args = [])
 * @method Promise updateDomainNameAsync(array $args = [])
 * @method Result updateIntegration(array $args = [])
 * @method Promise updateIntegrationAsync(array $args = [])
 * @method Result updateIntegrationResponse(array $args = [])
 * @method Promise updateIntegrationResponseAsync(array $args = [])
 * @method Result updateModel(array $args = [])
 * @method Promise updateModelAsync(array $args = [])
 * @method Result updateRoute(array $args = [])
 * @method Promise updateRouteAsync(array $args = [])
 * @method Result updateRouteResponse(array $args = [])
 * @method Promise updateRouteResponseAsync(array $args = [])
 * @method Result updateStage(array $args = [])
 * @method Promise updateStageAsync(array $args = [])
 * @method Result updateVpcLink(array $args = [])
 * @method Promise updateVpcLinkAsync(array $args = [])
 */
class ApiGatewayV2Client extends AwsClient {}
