<?php
namespace Aws\CodeCommit;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **AWS CodeCommit** service.
 *
 * @method Result associateApprovalRuleTemplateWithRepository(array $args = [])
 * @method Promise associateApprovalRuleTemplateWithRepositoryAsync(array $args = [])
 * @method Result batchAssociateApprovalRuleTemplateWithRepositories(array $args = [])
 * @method Promise batchAssociateApprovalRuleTemplateWithRepositoriesAsync(array $args = [])
 * @method Result batchDescribeMergeConflicts(array $args = [])
 * @method Promise batchDescribeMergeConflictsAsync(array $args = [])
 * @method Result batchDisassociateApprovalRuleTemplateFromRepositories(array $args = [])
 * @method Promise batchDisassociateApprovalRuleTemplateFromRepositoriesAsync(array $args = [])
 * @method Result batchGetCommits(array $args = [])
 * @method Promise batchGetCommitsAsync(array $args = [])
 * @method Result batchGetRepositories(array $args = [])
 * @method Promise batchGetRepositoriesAsync(array $args = [])
 * @method Result createApprovalRuleTemplate(array $args = [])
 * @method Promise createApprovalRuleTemplateAsync(array $args = [])
 * @method Result createBranch(array $args = [])
 * @method Promise createBranchAsync(array $args = [])
 * @method Result createCommit(array $args = [])
 * @method Promise createCommitAsync(array $args = [])
 * @method Result createPullRequest(array $args = [])
 * @method Promise createPullRequestAsync(array $args = [])
 * @method Result createPullRequestApprovalRule(array $args = [])
 * @method Promise createPullRequestApprovalRuleAsync(array $args = [])
 * @method Result createRepository(array $args = [])
 * @method Promise createRepositoryAsync(array $args = [])
 * @method Result createUnreferencedMergeCommit(array $args = [])
 * @method Promise createUnreferencedMergeCommitAsync(array $args = [])
 * @method Result deleteApprovalRuleTemplate(array $args = [])
 * @method Promise deleteApprovalRuleTemplateAsync(array $args = [])
 * @method Result deleteBranch(array $args = [])
 * @method Promise deleteBranchAsync(array $args = [])
 * @method Result deleteCommentContent(array $args = [])
 * @method Promise deleteCommentContentAsync(array $args = [])
 * @method Result deleteFile(array $args = [])
 * @method Promise deleteFileAsync(array $args = [])
 * @method Result deletePullRequestApprovalRule(array $args = [])
 * @method Promise deletePullRequestApprovalRuleAsync(array $args = [])
 * @method Result deleteRepository(array $args = [])
 * @method Promise deleteRepositoryAsync(array $args = [])
 * @method Result describeMergeConflicts(array $args = [])
 * @method Promise describeMergeConflictsAsync(array $args = [])
 * @method Result describePullRequestEvents(array $args = [])
 * @method Promise describePullRequestEventsAsync(array $args = [])
 * @method Result disassociateApprovalRuleTemplateFromRepository(array $args = [])
 * @method Promise disassociateApprovalRuleTemplateFromRepositoryAsync(array $args = [])
 * @method Result evaluatePullRequestApprovalRules(array $args = [])
 * @method Promise evaluatePullRequestApprovalRulesAsync(array $args = [])
 * @method Result getApprovalRuleTemplate(array $args = [])
 * @method Promise getApprovalRuleTemplateAsync(array $args = [])
 * @method Result getBlob(array $args = [])
 * @method Promise getBlobAsync(array $args = [])
 * @method Result getBranch(array $args = [])
 * @method Promise getBranchAsync(array $args = [])
 * @method Result getComment(array $args = [])
 * @method Promise getCommentAsync(array $args = [])
 * @method Result getCommentReactions(array $args = [])
 * @method Promise getCommentReactionsAsync(array $args = [])
 * @method Result getCommentsForComparedCommit(array $args = [])
 * @method Promise getCommentsForComparedCommitAsync(array $args = [])
 * @method Result getCommentsForPullRequest(array $args = [])
 * @method Promise getCommentsForPullRequestAsync(array $args = [])
 * @method Result getCommit(array $args = [])
 * @method Promise getCommitAsync(array $args = [])
 * @method Result getDifferences(array $args = [])
 * @method Promise getDifferencesAsync(array $args = [])
 * @method Result getFile(array $args = [])
 * @method Promise getFileAsync(array $args = [])
 * @method Result getFolder(array $args = [])
 * @method Promise getFolderAsync(array $args = [])
 * @method Result getMergeCommit(array $args = [])
 * @method Promise getMergeCommitAsync(array $args = [])
 * @method Result getMergeConflicts(array $args = [])
 * @method Promise getMergeConflictsAsync(array $args = [])
 * @method Result getMergeOptions(array $args = [])
 * @method Promise getMergeOptionsAsync(array $args = [])
 * @method Result getPullRequest(array $args = [])
 * @method Promise getPullRequestAsync(array $args = [])
 * @method Result getPullRequestApprovalStates(array $args = [])
 * @method Promise getPullRequestApprovalStatesAsync(array $args = [])
 * @method Result getPullRequestOverrideState(array $args = [])
 * @method Promise getPullRequestOverrideStateAsync(array $args = [])
 * @method Result getRepository(array $args = [])
 * @method Promise getRepositoryAsync(array $args = [])
 * @method Result getRepositoryTriggers(array $args = [])
 * @method Promise getRepositoryTriggersAsync(array $args = [])
 * @method Result listApprovalRuleTemplates(array $args = [])
 * @method Promise listApprovalRuleTemplatesAsync(array $args = [])
 * @method Result listAssociatedApprovalRuleTemplatesForRepository(array $args = [])
 * @method Promise listAssociatedApprovalRuleTemplatesForRepositoryAsync(array $args = [])
 * @method Result listBranches(array $args = [])
 * @method Promise listBranchesAsync(array $args = [])
 * @method Result listFileCommitHistory(array $args = [])
 * @method Promise listFileCommitHistoryAsync(array $args = [])
 * @method Result listPullRequests(array $args = [])
 * @method Promise listPullRequestsAsync(array $args = [])
 * @method Result listRepositories(array $args = [])
 * @method Promise listRepositoriesAsync(array $args = [])
 * @method Result listRepositoriesForApprovalRuleTemplate(array $args = [])
 * @method Promise listRepositoriesForApprovalRuleTemplateAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result mergeBranchesByFastForward(array $args = [])
 * @method Promise mergeBranchesByFastForwardAsync(array $args = [])
 * @method Result mergeBranchesBySquash(array $args = [])
 * @method Promise mergeBranchesBySquashAsync(array $args = [])
 * @method Result mergeBranchesByThreeWay(array $args = [])
 * @method Promise mergeBranchesByThreeWayAsync(array $args = [])
 * @method Result mergePullRequestByFastForward(array $args = [])
 * @method Promise mergePullRequestByFastForwardAsync(array $args = [])
 * @method Result mergePullRequestBySquash(array $args = [])
 * @method Promise mergePullRequestBySquashAsync(array $args = [])
 * @method Result mergePullRequestByThreeWay(array $args = [])
 * @method Promise mergePullRequestByThreeWayAsync(array $args = [])
 * @method Result overridePullRequestApprovalRules(array $args = [])
 * @method Promise overridePullRequestApprovalRulesAsync(array $args = [])
 * @method Result postCommentForComparedCommit(array $args = [])
 * @method Promise postCommentForComparedCommitAsync(array $args = [])
 * @method Result postCommentForPullRequest(array $args = [])
 * @method Promise postCommentForPullRequestAsync(array $args = [])
 * @method Result postCommentReply(array $args = [])
 * @method Promise postCommentReplyAsync(array $args = [])
 * @method Result putCommentReaction(array $args = [])
 * @method Promise putCommentReactionAsync(array $args = [])
 * @method Result putFile(array $args = [])
 * @method Promise putFileAsync(array $args = [])
 * @method Result putRepositoryTriggers(array $args = [])
 * @method Promise putRepositoryTriggersAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result testRepositoryTriggers(array $args = [])
 * @method Promise testRepositoryTriggersAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateApprovalRuleTemplateContent(array $args = [])
 * @method Promise updateApprovalRuleTemplateContentAsync(array $args = [])
 * @method Result updateApprovalRuleTemplateDescription(array $args = [])
 * @method Promise updateApprovalRuleTemplateDescriptionAsync(array $args = [])
 * @method Result updateApprovalRuleTemplateName(array $args = [])
 * @method Promise updateApprovalRuleTemplateNameAsync(array $args = [])
 * @method Result updateComment(array $args = [])
 * @method Promise updateCommentAsync(array $args = [])
 * @method Result updateDefaultBranch(array $args = [])
 * @method Promise updateDefaultBranchAsync(array $args = [])
 * @method Result updatePullRequestApprovalRuleContent(array $args = [])
 * @method Promise updatePullRequestApprovalRuleContentAsync(array $args = [])
 * @method Result updatePullRequestApprovalState(array $args = [])
 * @method Promise updatePullRequestApprovalStateAsync(array $args = [])
 * @method Result updatePullRequestDescription(array $args = [])
 * @method Promise updatePullRequestDescriptionAsync(array $args = [])
 * @method Result updatePullRequestStatus(array $args = [])
 * @method Promise updatePullRequestStatusAsync(array $args = [])
 * @method Result updatePullRequestTitle(array $args = [])
 * @method Promise updatePullRequestTitleAsync(array $args = [])
 * @method Result updateRepositoryDescription(array $args = [])
 * @method Promise updateRepositoryDescriptionAsync(array $args = [])
 * @method Result updateRepositoryEncryptionKey(array $args = [])
 * @method Promise updateRepositoryEncryptionKeyAsync(array $args = [])
 * @method Result updateRepositoryName(array $args = [])
 * @method Promise updateRepositoryNameAsync(array $args = [])
 */
class CodeCommitClient extends AwsClient {}
