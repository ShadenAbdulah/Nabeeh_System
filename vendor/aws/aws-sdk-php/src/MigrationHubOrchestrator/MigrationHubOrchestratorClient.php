<?php
namespace Aws\MigrationHubOrchestrator;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **AWS Migration Hub Orchestrator** service.
 * @method Result createTemplate(array $args = [])
 * @method Promise createTemplateAsync(array $args = [])
 * @method Result createWorkflow(array $args = [])
 * @method Promise createWorkflowAsync(array $args = [])
 * @method Result createWorkflowStep(array $args = [])
 * @method Promise createWorkflowStepAsync(array $args = [])
 * @method Result createWorkflowStepGroup(array $args = [])
 * @method Promise createWorkflowStepGroupAsync(array $args = [])
 * @method Result deleteTemplate(array $args = [])
 * @method Promise deleteTemplateAsync(array $args = [])
 * @method Result deleteWorkflow(array $args = [])
 * @method Promise deleteWorkflowAsync(array $args = [])
 * @method Result deleteWorkflowStep(array $args = [])
 * @method Promise deleteWorkflowStepAsync(array $args = [])
 * @method Result deleteWorkflowStepGroup(array $args = [])
 * @method Promise deleteWorkflowStepGroupAsync(array $args = [])
 * @method Result getTemplate(array $args = [])
 * @method Promise getTemplateAsync(array $args = [])
 * @method Result getTemplateStep(array $args = [])
 * @method Promise getTemplateStepAsync(array $args = [])
 * @method Result getTemplateStepGroup(array $args = [])
 * @method Promise getTemplateStepGroupAsync(array $args = [])
 * @method Result getWorkflow(array $args = [])
 * @method Promise getWorkflowAsync(array $args = [])
 * @method Result getWorkflowStep(array $args = [])
 * @method Promise getWorkflowStepAsync(array $args = [])
 * @method Result getWorkflowStepGroup(array $args = [])
 * @method Promise getWorkflowStepGroupAsync(array $args = [])
 * @method Result listPlugins(array $args = [])
 * @method Promise listPluginsAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result listTemplateStepGroups(array $args = [])
 * @method Promise listTemplateStepGroupsAsync(array $args = [])
 * @method Result listTemplateSteps(array $args = [])
 * @method Promise listTemplateStepsAsync(array $args = [])
 * @method Result listTemplates(array $args = [])
 * @method Promise listTemplatesAsync(array $args = [])
 * @method Result listWorkflowStepGroups(array $args = [])
 * @method Promise listWorkflowStepGroupsAsync(array $args = [])
 * @method Result listWorkflowSteps(array $args = [])
 * @method Promise listWorkflowStepsAsync(array $args = [])
 * @method Result listWorkflows(array $args = [])
 * @method Promise listWorkflowsAsync(array $args = [])
 * @method Result retryWorkflowStep(array $args = [])
 * @method Promise retryWorkflowStepAsync(array $args = [])
 * @method Result startWorkflow(array $args = [])
 * @method Promise startWorkflowAsync(array $args = [])
 * @method Result stopWorkflow(array $args = [])
 * @method Promise stopWorkflowAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateTemplate(array $args = [])
 * @method Promise updateTemplateAsync(array $args = [])
 * @method Result updateWorkflow(array $args = [])
 * @method Promise updateWorkflowAsync(array $args = [])
 * @method Result updateWorkflowStep(array $args = [])
 * @method Promise updateWorkflowStepAsync(array $args = [])
 * @method Result updateWorkflowStepGroup(array $args = [])
 * @method Promise updateWorkflowStepGroupAsync(array $args = [])
 */
class MigrationHubOrchestratorClient extends AwsClient {}
