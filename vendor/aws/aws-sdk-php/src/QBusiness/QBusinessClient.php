<?php
namespace Aws\QBusiness;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **QBusiness** service.
 * @method Result batchDeleteDocument(array $args = [])
 * @method Promise batchDeleteDocumentAsync(array $args = [])
 * @method Result batchPutDocument(array $args = [])
 * @method Promise batchPutDocumentAsync(array $args = [])
 * @method Result chatSync(array $args = [])
 * @method Promise chatSyncAsync(array $args = [])
 * @method Result createApplication(array $args = [])
 * @method Promise createApplicationAsync(array $args = [])
 * @method Result createDataSource(array $args = [])
 * @method Promise createDataSourceAsync(array $args = [])
 * @method Result createIndex(array $args = [])
 * @method Promise createIndexAsync(array $args = [])
 * @method Result createPlugin(array $args = [])
 * @method Promise createPluginAsync(array $args = [])
 * @method Result createRetriever(array $args = [])
 * @method Promise createRetrieverAsync(array $args = [])
 * @method Result createUser(array $args = [])
 * @method Promise createUserAsync(array $args = [])
 * @method Result createWebExperience(array $args = [])
 * @method Promise createWebExperienceAsync(array $args = [])
 * @method Result deleteApplication(array $args = [])
 * @method Promise deleteApplicationAsync(array $args = [])
 * @method Result deleteChatControlsConfiguration(array $args = [])
 * @method Promise deleteChatControlsConfigurationAsync(array $args = [])
 * @method Result deleteConversation(array $args = [])
 * @method Promise deleteConversationAsync(array $args = [])
 * @method Result deleteDataSource(array $args = [])
 * @method Promise deleteDataSourceAsync(array $args = [])
 * @method Result deleteGroup(array $args = [])
 * @method Promise deleteGroupAsync(array $args = [])
 * @method Result deleteIndex(array $args = [])
 * @method Promise deleteIndexAsync(array $args = [])
 * @method Result deletePlugin(array $args = [])
 * @method Promise deletePluginAsync(array $args = [])
 * @method Result deleteRetriever(array $args = [])
 * @method Promise deleteRetrieverAsync(array $args = [])
 * @method Result deleteUser(array $args = [])
 * @method Promise deleteUserAsync(array $args = [])
 * @method Result deleteWebExperience(array $args = [])
 * @method Promise deleteWebExperienceAsync(array $args = [])
 * @method Result getApplication(array $args = [])
 * @method Promise getApplicationAsync(array $args = [])
 * @method Result getChatControlsConfiguration(array $args = [])
 * @method Promise getChatControlsConfigurationAsync(array $args = [])
 * @method Result getDataSource(array $args = [])
 * @method Promise getDataSourceAsync(array $args = [])
 * @method Result getGroup(array $args = [])
 * @method Promise getGroupAsync(array $args = [])
 * @method Result getIndex(array $args = [])
 * @method Promise getIndexAsync(array $args = [])
 * @method Result getPlugin(array $args = [])
 * @method Promise getPluginAsync(array $args = [])
 * @method Result getRetriever(array $args = [])
 * @method Promise getRetrieverAsync(array $args = [])
 * @method Result getUser(array $args = [])
 * @method Promise getUserAsync(array $args = [])
 * @method Result getWebExperience(array $args = [])
 * @method Promise getWebExperienceAsync(array $args = [])
 * @method Result listApplications(array $args = [])
 * @method Promise listApplicationsAsync(array $args = [])
 * @method Result listConversations(array $args = [])
 * @method Promise listConversationsAsync(array $args = [])
 * @method Result listDataSourceSyncJobs(array $args = [])
 * @method Promise listDataSourceSyncJobsAsync(array $args = [])
 * @method Result listDataSources(array $args = [])
 * @method Promise listDataSourcesAsync(array $args = [])
 * @method Result listDocuments(array $args = [])
 * @method Promise listDocumentsAsync(array $args = [])
 * @method Result listGroups(array $args = [])
 * @method Promise listGroupsAsync(array $args = [])
 * @method Result listIndices(array $args = [])
 * @method Promise listIndicesAsync(array $args = [])
 * @method Result listMessages(array $args = [])
 * @method Promise listMessagesAsync(array $args = [])
 * @method Result listPlugins(array $args = [])
 * @method Promise listPluginsAsync(array $args = [])
 * @method Result listRetrievers(array $args = [])
 * @method Promise listRetrieversAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result listWebExperiences(array $args = [])
 * @method Promise listWebExperiencesAsync(array $args = [])
 * @method Result putFeedback(array $args = [])
 * @method Promise putFeedbackAsync(array $args = [])
 * @method Result putGroup(array $args = [])
 * @method Promise putGroupAsync(array $args = [])
 * @method Result startDataSourceSyncJob(array $args = [])
 * @method Promise startDataSourceSyncJobAsync(array $args = [])
 * @method Result stopDataSourceSyncJob(array $args = [])
 * @method Promise stopDataSourceSyncJobAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateApplication(array $args = [])
 * @method Promise updateApplicationAsync(array $args = [])
 * @method Result updateChatControlsConfiguration(array $args = [])
 * @method Promise updateChatControlsConfigurationAsync(array $args = [])
 * @method Result updateDataSource(array $args = [])
 * @method Promise updateDataSourceAsync(array $args = [])
 * @method Result updateIndex(array $args = [])
 * @method Promise updateIndexAsync(array $args = [])
 * @method Result updatePlugin(array $args = [])
 * @method Promise updatePluginAsync(array $args = [])
 * @method Result updateRetriever(array $args = [])
 * @method Promise updateRetrieverAsync(array $args = [])
 * @method Result updateUser(array $args = [])
 * @method Promise updateUserAsync(array $args = [])
 * @method Result updateWebExperience(array $args = [])
 * @method Promise updateWebExperienceAsync(array $args = [])
 */
class QBusinessClient extends AwsClient {}
