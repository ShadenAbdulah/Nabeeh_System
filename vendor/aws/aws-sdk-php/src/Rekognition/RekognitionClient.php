<?php
namespace Aws\Rekognition;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon Rekognition** service.
 * @method Result associateFaces(array $args = [])
 * @method Promise associateFacesAsync(array $args = [])
 * @method Result compareFaces(array $args = [])
 * @method Promise compareFacesAsync(array $args = [])
 * @method Result copyProjectVersion(array $args = [])
 * @method Promise copyProjectVersionAsync(array $args = [])
 * @method Result createCollection(array $args = [])
 * @method Promise createCollectionAsync(array $args = [])
 * @method Result createDataset(array $args = [])
 * @method Promise createDatasetAsync(array $args = [])
 * @method Result createFaceLivenessSession(array $args = [])
 * @method Promise createFaceLivenessSessionAsync(array $args = [])
 * @method Result createProject(array $args = [])
 * @method Promise createProjectAsync(array $args = [])
 * @method Result createProjectVersion(array $args = [])
 * @method Promise createProjectVersionAsync(array $args = [])
 * @method Result createStreamProcessor(array $args = [])
 * @method Promise createStreamProcessorAsync(array $args = [])
 * @method Result createUser(array $args = [])
 * @method Promise createUserAsync(array $args = [])
 * @method Result deleteCollection(array $args = [])
 * @method Promise deleteCollectionAsync(array $args = [])
 * @method Result deleteDataset(array $args = [])
 * @method Promise deleteDatasetAsync(array $args = [])
 * @method Result deleteFaces(array $args = [])
 * @method Promise deleteFacesAsync(array $args = [])
 * @method Result deleteProject(array $args = [])
 * @method Promise deleteProjectAsync(array $args = [])
 * @method Result deleteProjectPolicy(array $args = [])
 * @method Promise deleteProjectPolicyAsync(array $args = [])
 * @method Result deleteProjectVersion(array $args = [])
 * @method Promise deleteProjectVersionAsync(array $args = [])
 * @method Result deleteStreamProcessor(array $args = [])
 * @method Promise deleteStreamProcessorAsync(array $args = [])
 * @method Result deleteUser(array $args = [])
 * @method Promise deleteUserAsync(array $args = [])
 * @method Result describeCollection(array $args = [])
 * @method Promise describeCollectionAsync(array $args = [])
 * @method Result describeDataset(array $args = [])
 * @method Promise describeDatasetAsync(array $args = [])
 * @method Result describeProjectVersions(array $args = [])
 * @method Promise describeProjectVersionsAsync(array $args = [])
 * @method Result describeProjects(array $args = [])
 * @method Promise describeProjectsAsync(array $args = [])
 * @method Result describeStreamProcessor(array $args = [])
 * @method Promise describeStreamProcessorAsync(array $args = [])
 * @method Result detectCustomLabels(array $args = [])
 * @method Promise detectCustomLabelsAsync(array $args = [])
 * @method Result detectFaces(array $args = [])
 * @method Promise detectFacesAsync(array $args = [])
 * @method Result detectLabels(array $args = [])
 * @method Promise detectLabelsAsync(array $args = [])
 * @method Result detectModerationLabels(array $args = [])
 * @method Promise detectModerationLabelsAsync(array $args = [])
 * @method Result detectProtectiveEquipment(array $args = [])
 * @method Promise detectProtectiveEquipmentAsync(array $args = [])
 * @method Result detectText(array $args = [])
 * @method Promise detectTextAsync(array $args = [])
 * @method Result disassociateFaces(array $args = [])
 * @method Promise disassociateFacesAsync(array $args = [])
 * @method Result distributeDatasetEntries(array $args = [])
 * @method Promise distributeDatasetEntriesAsync(array $args = [])
 * @method Result getCelebrityInfo(array $args = [])
 * @method Promise getCelebrityInfoAsync(array $args = [])
 * @method Result getCelebrityRecognition(array $args = [])
 * @method Promise getCelebrityRecognitionAsync(array $args = [])
 * @method Result getContentModeration(array $args = [])
 * @method Promise getContentModerationAsync(array $args = [])
 * @method Result getFaceDetection(array $args = [])
 * @method Promise getFaceDetectionAsync(array $args = [])
 * @method Result getFaceLivenessSessionResults(array $args = [])
 * @method Promise getFaceLivenessSessionResultsAsync(array $args = [])
 * @method Result getFaceSearch(array $args = [])
 * @method Promise getFaceSearchAsync(array $args = [])
 * @method Result getLabelDetection(array $args = [])
 * @method Promise getLabelDetectionAsync(array $args = [])
 * @method Result getMediaAnalysisJob(array $args = [])
 * @method Promise getMediaAnalysisJobAsync(array $args = [])
 * @method Result getPersonTracking(array $args = [])
 * @method Promise getPersonTrackingAsync(array $args = [])
 * @method Result getSegmentDetection(array $args = [])
 * @method Promise getSegmentDetectionAsync(array $args = [])
 * @method Result getTextDetection(array $args = [])
 * @method Promise getTextDetectionAsync(array $args = [])
 * @method Result indexFaces(array $args = [])
 * @method Promise indexFacesAsync(array $args = [])
 * @method Result listCollections(array $args = [])
 * @method Promise listCollectionsAsync(array $args = [])
 * @method Result listDatasetEntries(array $args = [])
 * @method Promise listDatasetEntriesAsync(array $args = [])
 * @method Result listDatasetLabels(array $args = [])
 * @method Promise listDatasetLabelsAsync(array $args = [])
 * @method Result listFaces(array $args = [])
 * @method Promise listFacesAsync(array $args = [])
 * @method Result listMediaAnalysisJobs(array $args = [])
 * @method Promise listMediaAnalysisJobsAsync(array $args = [])
 * @method Result listProjectPolicies(array $args = [])
 * @method Promise listProjectPoliciesAsync(array $args = [])
 * @method Result listStreamProcessors(array $args = [])
 * @method Promise listStreamProcessorsAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result listUsers(array $args = [])
 * @method Promise listUsersAsync(array $args = [])
 * @method Result putProjectPolicy(array $args = [])
 * @method Promise putProjectPolicyAsync(array $args = [])
 * @method Result recognizeCelebrities(array $args = [])
 * @method Promise recognizeCelebritiesAsync(array $args = [])
 * @method Result searchFaces(array $args = [])
 * @method Promise searchFacesAsync(array $args = [])
 * @method Result searchFacesByImage(array $args = [])
 * @method Promise searchFacesByImageAsync(array $args = [])
 * @method Result searchUsers(array $args = [])
 * @method Promise searchUsersAsync(array $args = [])
 * @method Result searchUsersByImage(array $args = [])
 * @method Promise searchUsersByImageAsync(array $args = [])
 * @method Result startCelebrityRecognition(array $args = [])
 * @method Promise startCelebrityRecognitionAsync(array $args = [])
 * @method Result startContentModeration(array $args = [])
 * @method Promise startContentModerationAsync(array $args = [])
 * @method Result startFaceDetection(array $args = [])
 * @method Promise startFaceDetectionAsync(array $args = [])
 * @method Result startFaceSearch(array $args = [])
 * @method Promise startFaceSearchAsync(array $args = [])
 * @method Result startLabelDetection(array $args = [])
 * @method Promise startLabelDetectionAsync(array $args = [])
 * @method Result startMediaAnalysisJob(array $args = [])
 * @method Promise startMediaAnalysisJobAsync(array $args = [])
 * @method Result startPersonTracking(array $args = [])
 * @method Promise startPersonTrackingAsync(array $args = [])
 * @method Result startProjectVersion(array $args = [])
 * @method Promise startProjectVersionAsync(array $args = [])
 * @method Result startSegmentDetection(array $args = [])
 * @method Promise startSegmentDetectionAsync(array $args = [])
 * @method Result startStreamProcessor(array $args = [])
 * @method Promise startStreamProcessorAsync(array $args = [])
 * @method Result startTextDetection(array $args = [])
 * @method Promise startTextDetectionAsync(array $args = [])
 * @method Result stopProjectVersion(array $args = [])
 * @method Promise stopProjectVersionAsync(array $args = [])
 * @method Result stopStreamProcessor(array $args = [])
 * @method Promise stopStreamProcessorAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateDatasetEntries(array $args = [])
 * @method Promise updateDatasetEntriesAsync(array $args = [])
 * @method Result updateStreamProcessor(array $args = [])
 * @method Promise updateStreamProcessorAsync(array $args = [])
 */
class RekognitionClient extends AwsClient {}
