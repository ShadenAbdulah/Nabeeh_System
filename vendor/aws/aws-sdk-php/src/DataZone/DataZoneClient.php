<?php
namespace Aws\DataZone;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon DataZone** service.
 * @method Result acceptPredictions(array $args = [])
 * @method Promise acceptPredictionsAsync(array $args = [])
 * @method Result acceptSubscriptionRequest(array $args = [])
 * @method Promise acceptSubscriptionRequestAsync(array $args = [])
 * @method Result cancelSubscription(array $args = [])
 * @method Promise cancelSubscriptionAsync(array $args = [])
 * @method Result createAsset(array $args = [])
 * @method Promise createAssetAsync(array $args = [])
 * @method Result createAssetRevision(array $args = [])
 * @method Promise createAssetRevisionAsync(array $args = [])
 * @method Result createAssetType(array $args = [])
 * @method Promise createAssetTypeAsync(array $args = [])
 * @method Result createDataSource(array $args = [])
 * @method Promise createDataSourceAsync(array $args = [])
 * @method Result createDomain(array $args = [])
 * @method Promise createDomainAsync(array $args = [])
 * @method Result createEnvironment(array $args = [])
 * @method Promise createEnvironmentAsync(array $args = [])
 * @method Result createEnvironmentProfile(array $args = [])
 * @method Promise createEnvironmentProfileAsync(array $args = [])
 * @method Result createFormType(array $args = [])
 * @method Promise createFormTypeAsync(array $args = [])
 * @method Result createGlossary(array $args = [])
 * @method Promise createGlossaryAsync(array $args = [])
 * @method Result createGlossaryTerm(array $args = [])
 * @method Promise createGlossaryTermAsync(array $args = [])
 * @method Result createGroupProfile(array $args = [])
 * @method Promise createGroupProfileAsync(array $args = [])
 * @method Result createListingChangeSet(array $args = [])
 * @method Promise createListingChangeSetAsync(array $args = [])
 * @method Result createProject(array $args = [])
 * @method Promise createProjectAsync(array $args = [])
 * @method Result createProjectMembership(array $args = [])
 * @method Promise createProjectMembershipAsync(array $args = [])
 * @method Result createSubscriptionGrant(array $args = [])
 * @method Promise createSubscriptionGrantAsync(array $args = [])
 * @method Result createSubscriptionRequest(array $args = [])
 * @method Promise createSubscriptionRequestAsync(array $args = [])
 * @method Result createSubscriptionTarget(array $args = [])
 * @method Promise createSubscriptionTargetAsync(array $args = [])
 * @method Result createUserProfile(array $args = [])
 * @method Promise createUserProfileAsync(array $args = [])
 * @method Result deleteAsset(array $args = [])
 * @method Promise deleteAssetAsync(array $args = [])
 * @method Result deleteAssetType(array $args = [])
 * @method Promise deleteAssetTypeAsync(array $args = [])
 * @method Result deleteDataSource(array $args = [])
 * @method Promise deleteDataSourceAsync(array $args = [])
 * @method Result deleteDomain(array $args = [])
 * @method Promise deleteDomainAsync(array $args = [])
 * @method Result deleteEnvironment(array $args = [])
 * @method Promise deleteEnvironmentAsync(array $args = [])
 * @method Result deleteEnvironmentBlueprintConfiguration(array $args = [])
 * @method Promise deleteEnvironmentBlueprintConfigurationAsync(array $args = [])
 * @method Result deleteEnvironmentProfile(array $args = [])
 * @method Promise deleteEnvironmentProfileAsync(array $args = [])
 * @method Result deleteFormType(array $args = [])
 * @method Promise deleteFormTypeAsync(array $args = [])
 * @method Result deleteGlossary(array $args = [])
 * @method Promise deleteGlossaryAsync(array $args = [])
 * @method Result deleteGlossaryTerm(array $args = [])
 * @method Promise deleteGlossaryTermAsync(array $args = [])
 * @method Result deleteListing(array $args = [])
 * @method Promise deleteListingAsync(array $args = [])
 * @method Result deleteProject(array $args = [])
 * @method Promise deleteProjectAsync(array $args = [])
 * @method Result deleteProjectMembership(array $args = [])
 * @method Promise deleteProjectMembershipAsync(array $args = [])
 * @method Result deleteSubscriptionGrant(array $args = [])
 * @method Promise deleteSubscriptionGrantAsync(array $args = [])
 * @method Result deleteSubscriptionRequest(array $args = [])
 * @method Promise deleteSubscriptionRequestAsync(array $args = [])
 * @method Result deleteSubscriptionTarget(array $args = [])
 * @method Promise deleteSubscriptionTargetAsync(array $args = [])
 * @method Result getAsset(array $args = [])
 * @method Promise getAssetAsync(array $args = [])
 * @method Result getAssetType(array $args = [])
 * @method Promise getAssetTypeAsync(array $args = [])
 * @method Result getDataSource(array $args = [])
 * @method Promise getDataSourceAsync(array $args = [])
 * @method Result getDataSourceRun(array $args = [])
 * @method Promise getDataSourceRunAsync(array $args = [])
 * @method Result getDomain(array $args = [])
 * @method Promise getDomainAsync(array $args = [])
 * @method Result getEnvironment(array $args = [])
 * @method Promise getEnvironmentAsync(array $args = [])
 * @method Result getEnvironmentBlueprint(array $args = [])
 * @method Promise getEnvironmentBlueprintAsync(array $args = [])
 * @method Result getEnvironmentBlueprintConfiguration(array $args = [])
 * @method Promise getEnvironmentBlueprintConfigurationAsync(array $args = [])
 * @method Result getEnvironmentProfile(array $args = [])
 * @method Promise getEnvironmentProfileAsync(array $args = [])
 * @method Result getFormType(array $args = [])
 * @method Promise getFormTypeAsync(array $args = [])
 * @method Result getGlossary(array $args = [])
 * @method Promise getGlossaryAsync(array $args = [])
 * @method Result getGlossaryTerm(array $args = [])
 * @method Promise getGlossaryTermAsync(array $args = [])
 * @method Result getGroupProfile(array $args = [])
 * @method Promise getGroupProfileAsync(array $args = [])
 * @method Result getIamPortalLoginUrl(array $args = [])
 * @method Promise getIamPortalLoginUrlAsync(array $args = [])
 * @method Result getListing(array $args = [])
 * @method Promise getListingAsync(array $args = [])
 * @method Result getProject(array $args = [])
 * @method Promise getProjectAsync(array $args = [])
 * @method Result getSubscription(array $args = [])
 * @method Promise getSubscriptionAsync(array $args = [])
 * @method Result getSubscriptionGrant(array $args = [])
 * @method Promise getSubscriptionGrantAsync(array $args = [])
 * @method Result getSubscriptionRequestDetails(array $args = [])
 * @method Promise getSubscriptionRequestDetailsAsync(array $args = [])
 * @method Result getSubscriptionTarget(array $args = [])
 * @method Promise getSubscriptionTargetAsync(array $args = [])
 * @method Result getUserProfile(array $args = [])
 * @method Promise getUserProfileAsync(array $args = [])
 * @method Result listAssetRevisions(array $args = [])
 * @method Promise listAssetRevisionsAsync(array $args = [])
 * @method Result listDataSourceRunActivities(array $args = [])
 * @method Promise listDataSourceRunActivitiesAsync(array $args = [])
 * @method Result listDataSourceRuns(array $args = [])
 * @method Promise listDataSourceRunsAsync(array $args = [])
 * @method Result listDataSources(array $args = [])
 * @method Promise listDataSourcesAsync(array $args = [])
 * @method Result listDomains(array $args = [])
 * @method Promise listDomainsAsync(array $args = [])
 * @method Result listEnvironmentBlueprintConfigurations(array $args = [])
 * @method Promise listEnvironmentBlueprintConfigurationsAsync(array $args = [])
 * @method Result listEnvironmentBlueprints(array $args = [])
 * @method Promise listEnvironmentBlueprintsAsync(array $args = [])
 * @method Result listEnvironmentProfiles(array $args = [])
 * @method Promise listEnvironmentProfilesAsync(array $args = [])
 * @method Result listEnvironments(array $args = [])
 * @method Promise listEnvironmentsAsync(array $args = [])
 * @method Result listNotifications(array $args = [])
 * @method Promise listNotificationsAsync(array $args = [])
 * @method Result listProjectMemberships(array $args = [])
 * @method Promise listProjectMembershipsAsync(array $args = [])
 * @method Result listProjects(array $args = [])
 * @method Promise listProjectsAsync(array $args = [])
 * @method Result listSubscriptionGrants(array $args = [])
 * @method Promise listSubscriptionGrantsAsync(array $args = [])
 * @method Result listSubscriptionRequests(array $args = [])
 * @method Promise listSubscriptionRequestsAsync(array $args = [])
 * @method Result listSubscriptionTargets(array $args = [])
 * @method Promise listSubscriptionTargetsAsync(array $args = [])
 * @method Result listSubscriptions(array $args = [])
 * @method Promise listSubscriptionsAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result putEnvironmentBlueprintConfiguration(array $args = [])
 * @method Promise putEnvironmentBlueprintConfigurationAsync(array $args = [])
 * @method Result rejectPredictions(array $args = [])
 * @method Promise rejectPredictionsAsync(array $args = [])
 * @method Result rejectSubscriptionRequest(array $args = [])
 * @method Promise rejectSubscriptionRequestAsync(array $args = [])
 * @method Result revokeSubscription(array $args = [])
 * @method Promise revokeSubscriptionAsync(array $args = [])
 * @method Result search(array $args = [])
 * @method Promise searchAsync(array $args = [])
 * @method Result searchGroupProfiles(array $args = [])
 * @method Promise searchGroupProfilesAsync(array $args = [])
 * @method Result searchListings(array $args = [])
 * @method Promise searchListingsAsync(array $args = [])
 * @method Result searchTypes(array $args = [])
 * @method Promise searchTypesAsync(array $args = [])
 * @method Result searchUserProfiles(array $args = [])
 * @method Promise searchUserProfilesAsync(array $args = [])
 * @method Result startDataSourceRun(array $args = [])
 * @method Promise startDataSourceRunAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateDataSource(array $args = [])
 * @method Promise updateDataSourceAsync(array $args = [])
 * @method Result updateDomain(array $args = [])
 * @method Promise updateDomainAsync(array $args = [])
 * @method Result updateEnvironment(array $args = [])
 * @method Promise updateEnvironmentAsync(array $args = [])
 * @method Result updateEnvironmentProfile(array $args = [])
 * @method Promise updateEnvironmentProfileAsync(array $args = [])
 * @method Result updateGlossary(array $args = [])
 * @method Promise updateGlossaryAsync(array $args = [])
 * @method Result updateGlossaryTerm(array $args = [])
 * @method Promise updateGlossaryTermAsync(array $args = [])
 * @method Result updateGroupProfile(array $args = [])
 * @method Promise updateGroupProfileAsync(array $args = [])
 * @method Result updateProject(array $args = [])
 * @method Promise updateProjectAsync(array $args = [])
 * @method Result updateSubscriptionGrantStatus(array $args = [])
 * @method Promise updateSubscriptionGrantStatusAsync(array $args = [])
 * @method Result updateSubscriptionRequest(array $args = [])
 * @method Promise updateSubscriptionRequestAsync(array $args = [])
 * @method Result updateSubscriptionTarget(array $args = [])
 * @method Promise updateSubscriptionTargetAsync(array $args = [])
 * @method Result updateUserProfile(array $args = [])
 * @method Promise updateUserProfileAsync(array $args = [])
 */
class DataZoneClient extends AwsClient {}
