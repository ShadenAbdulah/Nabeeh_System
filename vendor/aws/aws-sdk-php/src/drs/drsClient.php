<?php
namespace Aws\drs;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Elastic Disaster Recovery Service** service.
 * @method Result associateSourceNetworkStack(array $args = [])
 * @method Promise associateSourceNetworkStackAsync(array $args = [])
 * @method Result createExtendedSourceServer(array $args = [])
 * @method Promise createExtendedSourceServerAsync(array $args = [])
 * @method Result createLaunchConfigurationTemplate(array $args = [])
 * @method Promise createLaunchConfigurationTemplateAsync(array $args = [])
 * @method Result createReplicationConfigurationTemplate(array $args = [])
 * @method Promise createReplicationConfigurationTemplateAsync(array $args = [])
 * @method Result createSourceNetwork(array $args = [])
 * @method Promise createSourceNetworkAsync(array $args = [])
 * @method Result deleteJob(array $args = [])
 * @method Promise deleteJobAsync(array $args = [])
 * @method Result deleteLaunchAction(array $args = [])
 * @method Promise deleteLaunchActionAsync(array $args = [])
 * @method Result deleteLaunchConfigurationTemplate(array $args = [])
 * @method Promise deleteLaunchConfigurationTemplateAsync(array $args = [])
 * @method Result deleteRecoveryInstance(array $args = [])
 * @method Promise deleteRecoveryInstanceAsync(array $args = [])
 * @method Result deleteReplicationConfigurationTemplate(array $args = [])
 * @method Promise deleteReplicationConfigurationTemplateAsync(array $args = [])
 * @method Result deleteSourceNetwork(array $args = [])
 * @method Promise deleteSourceNetworkAsync(array $args = [])
 * @method Result deleteSourceServer(array $args = [])
 * @method Promise deleteSourceServerAsync(array $args = [])
 * @method Result describeJobLogItems(array $args = [])
 * @method Promise describeJobLogItemsAsync(array $args = [])
 * @method Result describeJobs(array $args = [])
 * @method Promise describeJobsAsync(array $args = [])
 * @method Result describeLaunchConfigurationTemplates(array $args = [])
 * @method Promise describeLaunchConfigurationTemplatesAsync(array $args = [])
 * @method Result describeRecoveryInstances(array $args = [])
 * @method Promise describeRecoveryInstancesAsync(array $args = [])
 * @method Result describeRecoverySnapshots(array $args = [])
 * @method Promise describeRecoverySnapshotsAsync(array $args = [])
 * @method Result describeReplicationConfigurationTemplates(array $args = [])
 * @method Promise describeReplicationConfigurationTemplatesAsync(array $args = [])
 * @method Result describeSourceNetworks(array $args = [])
 * @method Promise describeSourceNetworksAsync(array $args = [])
 * @method Result describeSourceServers(array $args = [])
 * @method Promise describeSourceServersAsync(array $args = [])
 * @method Result disconnectRecoveryInstance(array $args = [])
 * @method Promise disconnectRecoveryInstanceAsync(array $args = [])
 * @method Result disconnectSourceServer(array $args = [])
 * @method Promise disconnectSourceServerAsync(array $args = [])
 * @method Result exportSourceNetworkCfnTemplate(array $args = [])
 * @method Promise exportSourceNetworkCfnTemplateAsync(array $args = [])
 * @method Result getFailbackReplicationConfiguration(array $args = [])
 * @method Promise getFailbackReplicationConfigurationAsync(array $args = [])
 * @method Result getLaunchConfiguration(array $args = [])
 * @method Promise getLaunchConfigurationAsync(array $args = [])
 * @method Result getReplicationConfiguration(array $args = [])
 * @method Promise getReplicationConfigurationAsync(array $args = [])
 * @method Result initializeService(array $args = [])
 * @method Promise initializeServiceAsync(array $args = [])
 * @method Result listExtensibleSourceServers(array $args = [])
 * @method Promise listExtensibleSourceServersAsync(array $args = [])
 * @method Result listLaunchActions(array $args = [])
 * @method Promise listLaunchActionsAsync(array $args = [])
 * @method Result listStagingAccounts(array $args = [])
 * @method Promise listStagingAccountsAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result putLaunchAction(array $args = [])
 * @method Promise putLaunchActionAsync(array $args = [])
 * @method Result retryDataReplication(array $args = [])
 * @method Promise retryDataReplicationAsync(array $args = [])
 * @method Result reverseReplication(array $args = [])
 * @method Promise reverseReplicationAsync(array $args = [])
 * @method Result startFailbackLaunch(array $args = [])
 * @method Promise startFailbackLaunchAsync(array $args = [])
 * @method Result startRecovery(array $args = [])
 * @method Promise startRecoveryAsync(array $args = [])
 * @method Result startReplication(array $args = [])
 * @method Promise startReplicationAsync(array $args = [])
 * @method Result startSourceNetworkRecovery(array $args = [])
 * @method Promise startSourceNetworkRecoveryAsync(array $args = [])
 * @method Result startSourceNetworkReplication(array $args = [])
 * @method Promise startSourceNetworkReplicationAsync(array $args = [])
 * @method Result stopFailback(array $args = [])
 * @method Promise stopFailbackAsync(array $args = [])
 * @method Result stopReplication(array $args = [])
 * @method Promise stopReplicationAsync(array $args = [])
 * @method Result stopSourceNetworkReplication(array $args = [])
 * @method Promise stopSourceNetworkReplicationAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result terminateRecoveryInstances(array $args = [])
 * @method Promise terminateRecoveryInstancesAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateFailbackReplicationConfiguration(array $args = [])
 * @method Promise updateFailbackReplicationConfigurationAsync(array $args = [])
 * @method Result updateLaunchConfiguration(array $args = [])
 * @method Promise updateLaunchConfigurationAsync(array $args = [])
 * @method Result updateLaunchConfigurationTemplate(array $args = [])
 * @method Promise updateLaunchConfigurationTemplateAsync(array $args = [])
 * @method Result updateReplicationConfiguration(array $args = [])
 * @method Promise updateReplicationConfigurationAsync(array $args = [])
 * @method Result updateReplicationConfigurationTemplate(array $args = [])
 * @method Promise updateReplicationConfigurationTemplateAsync(array $args = [])
 */
class drsClient extends AwsClient {}
