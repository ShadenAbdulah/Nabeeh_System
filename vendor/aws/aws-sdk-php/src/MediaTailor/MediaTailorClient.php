<?php
namespace Aws\MediaTailor;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **AWS MediaTailor** service.
 * @method Result configureLogsForChannel(array $args = [])
 * @method Promise configureLogsForChannelAsync(array $args = [])
 * @method Result configureLogsForPlaybackConfiguration(array $args = [])
 * @method Promise configureLogsForPlaybackConfigurationAsync(array $args = [])
 * @method Result createChannel(array $args = [])
 * @method Promise createChannelAsync(array $args = [])
 * @method Result createLiveSource(array $args = [])
 * @method Promise createLiveSourceAsync(array $args = [])
 * @method Result createPrefetchSchedule(array $args = [])
 * @method Promise createPrefetchScheduleAsync(array $args = [])
 * @method Result createProgram(array $args = [])
 * @method Promise createProgramAsync(array $args = [])
 * @method Result createSourceLocation(array $args = [])
 * @method Promise createSourceLocationAsync(array $args = [])
 * @method Result createVodSource(array $args = [])
 * @method Promise createVodSourceAsync(array $args = [])
 * @method Result deleteChannel(array $args = [])
 * @method Promise deleteChannelAsync(array $args = [])
 * @method Result deleteChannelPolicy(array $args = [])
 * @method Promise deleteChannelPolicyAsync(array $args = [])
 * @method Result deleteLiveSource(array $args = [])
 * @method Promise deleteLiveSourceAsync(array $args = [])
 * @method Result deletePlaybackConfiguration(array $args = [])
 * @method Promise deletePlaybackConfigurationAsync(array $args = [])
 * @method Result deletePrefetchSchedule(array $args = [])
 * @method Promise deletePrefetchScheduleAsync(array $args = [])
 * @method Result deleteProgram(array $args = [])
 * @method Promise deleteProgramAsync(array $args = [])
 * @method Result deleteSourceLocation(array $args = [])
 * @method Promise deleteSourceLocationAsync(array $args = [])
 * @method Result deleteVodSource(array $args = [])
 * @method Promise deleteVodSourceAsync(array $args = [])
 * @method Result describeChannel(array $args = [])
 * @method Promise describeChannelAsync(array $args = [])
 * @method Result describeLiveSource(array $args = [])
 * @method Promise describeLiveSourceAsync(array $args = [])
 * @method Result describeProgram(array $args = [])
 * @method Promise describeProgramAsync(array $args = [])
 * @method Result describeSourceLocation(array $args = [])
 * @method Promise describeSourceLocationAsync(array $args = [])
 * @method Result describeVodSource(array $args = [])
 * @method Promise describeVodSourceAsync(array $args = [])
 * @method Result getChannelPolicy(array $args = [])
 * @method Promise getChannelPolicyAsync(array $args = [])
 * @method Result getChannelSchedule(array $args = [])
 * @method Promise getChannelScheduleAsync(array $args = [])
 * @method Result getPlaybackConfiguration(array $args = [])
 * @method Promise getPlaybackConfigurationAsync(array $args = [])
 * @method Result getPrefetchSchedule(array $args = [])
 * @method Promise getPrefetchScheduleAsync(array $args = [])
 * @method Result listAlerts(array $args = [])
 * @method Promise listAlertsAsync(array $args = [])
 * @method Result listChannels(array $args = [])
 * @method Promise listChannelsAsync(array $args = [])
 * @method Result listLiveSources(array $args = [])
 * @method Promise listLiveSourcesAsync(array $args = [])
 * @method Result listPlaybackConfigurations(array $args = [])
 * @method Promise listPlaybackConfigurationsAsync(array $args = [])
 * @method Result listPrefetchSchedules(array $args = [])
 * @method Promise listPrefetchSchedulesAsync(array $args = [])
 * @method Result listSourceLocations(array $args = [])
 * @method Promise listSourceLocationsAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result listVodSources(array $args = [])
 * @method Promise listVodSourcesAsync(array $args = [])
 * @method Result putChannelPolicy(array $args = [])
 * @method Promise putChannelPolicyAsync(array $args = [])
 * @method Result putPlaybackConfiguration(array $args = [])
 * @method Promise putPlaybackConfigurationAsync(array $args = [])
 * @method Result startChannel(array $args = [])
 * @method Promise startChannelAsync(array $args = [])
 * @method Result stopChannel(array $args = [])
 * @method Promise stopChannelAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateChannel(array $args = [])
 * @method Promise updateChannelAsync(array $args = [])
 * @method Result updateLiveSource(array $args = [])
 * @method Promise updateLiveSourceAsync(array $args = [])
 * @method Result updateProgram(array $args = [])
 * @method Promise updateProgramAsync(array $args = [])
 * @method Result updateSourceLocation(array $args = [])
 * @method Promise updateSourceLocationAsync(array $args = [])
 * @method Result updateVodSource(array $args = [])
 * @method Promise updateVodSourceAsync(array $args = [])
 */
class MediaTailorClient extends AwsClient {}
