<?php
namespace Aws\WorkMail;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon WorkMail** service.
 * @method Result associateDelegateToResource(array $args = [])
 * @method Promise associateDelegateToResourceAsync(array $args = [])
 * @method Result associateMemberToGroup(array $args = [])
 * @method Promise associateMemberToGroupAsync(array $args = [])
 * @method Result assumeImpersonationRole(array $args = [])
 * @method Promise assumeImpersonationRoleAsync(array $args = [])
 * @method Result cancelMailboxExportJob(array $args = [])
 * @method Promise cancelMailboxExportJobAsync(array $args = [])
 * @method Result createAlias(array $args = [])
 * @method Promise createAliasAsync(array $args = [])
 * @method Result createAvailabilityConfiguration(array $args = [])
 * @method Promise createAvailabilityConfigurationAsync(array $args = [])
 * @method Result createGroup(array $args = [])
 * @method Promise createGroupAsync(array $args = [])
 * @method Result createImpersonationRole(array $args = [])
 * @method Promise createImpersonationRoleAsync(array $args = [])
 * @method Result createMobileDeviceAccessRule(array $args = [])
 * @method Promise createMobileDeviceAccessRuleAsync(array $args = [])
 * @method Result createOrganization(array $args = [])
 * @method Promise createOrganizationAsync(array $args = [])
 * @method Result createResource(array $args = [])
 * @method Promise createResourceAsync(array $args = [])
 * @method Result createUser(array $args = [])
 * @method Promise createUserAsync(array $args = [])
 * @method Result deleteAccessControlRule(array $args = [])
 * @method Promise deleteAccessControlRuleAsync(array $args = [])
 * @method Result deleteAlias(array $args = [])
 * @method Promise deleteAliasAsync(array $args = [])
 * @method Result deleteAvailabilityConfiguration(array $args = [])
 * @method Promise deleteAvailabilityConfigurationAsync(array $args = [])
 * @method Result deleteEmailMonitoringConfiguration(array $args = [])
 * @method Promise deleteEmailMonitoringConfigurationAsync(array $args = [])
 * @method Result deleteGroup(array $args = [])
 * @method Promise deleteGroupAsync(array $args = [])
 * @method Result deleteImpersonationRole(array $args = [])
 * @method Promise deleteImpersonationRoleAsync(array $args = [])
 * @method Result deleteMailboxPermissions(array $args = [])
 * @method Promise deleteMailboxPermissionsAsync(array $args = [])
 * @method Result deleteMobileDeviceAccessOverride(array $args = [])
 * @method Promise deleteMobileDeviceAccessOverrideAsync(array $args = [])
 * @method Result deleteMobileDeviceAccessRule(array $args = [])
 * @method Promise deleteMobileDeviceAccessRuleAsync(array $args = [])
 * @method Result deleteOrganization(array $args = [])
 * @method Promise deleteOrganizationAsync(array $args = [])
 * @method Result deleteResource(array $args = [])
 * @method Promise deleteResourceAsync(array $args = [])
 * @method Result deleteRetentionPolicy(array $args = [])
 * @method Promise deleteRetentionPolicyAsync(array $args = [])
 * @method Result deleteUser(array $args = [])
 * @method Promise deleteUserAsync(array $args = [])
 * @method Result deregisterFromWorkMail(array $args = [])
 * @method Promise deregisterFromWorkMailAsync(array $args = [])
 * @method Result deregisterMailDomain(array $args = [])
 * @method Promise deregisterMailDomainAsync(array $args = [])
 * @method Result describeEmailMonitoringConfiguration(array $args = [])
 * @method Promise describeEmailMonitoringConfigurationAsync(array $args = [])
 * @method Result describeEntity(array $args = [])
 * @method Promise describeEntityAsync(array $args = [])
 * @method Result describeGroup(array $args = [])
 * @method Promise describeGroupAsync(array $args = [])
 * @method Result describeInboundDmarcSettings(array $args = [])
 * @method Promise describeInboundDmarcSettingsAsync(array $args = [])
 * @method Result describeMailboxExportJob(array $args = [])
 * @method Promise describeMailboxExportJobAsync(array $args = [])
 * @method Result describeOrganization(array $args = [])
 * @method Promise describeOrganizationAsync(array $args = [])
 * @method Result describeResource(array $args = [])
 * @method Promise describeResourceAsync(array $args = [])
 * @method Result describeUser(array $args = [])
 * @method Promise describeUserAsync(array $args = [])
 * @method Result disassociateDelegateFromResource(array $args = [])
 * @method Promise disassociateDelegateFromResourceAsync(array $args = [])
 * @method Result disassociateMemberFromGroup(array $args = [])
 * @method Promise disassociateMemberFromGroupAsync(array $args = [])
 * @method Result getAccessControlEffect(array $args = [])
 * @method Promise getAccessControlEffectAsync(array $args = [])
 * @method Result getDefaultRetentionPolicy(array $args = [])
 * @method Promise getDefaultRetentionPolicyAsync(array $args = [])
 * @method Result getImpersonationRole(array $args = [])
 * @method Promise getImpersonationRoleAsync(array $args = [])
 * @method Result getImpersonationRoleEffect(array $args = [])
 * @method Promise getImpersonationRoleEffectAsync(array $args = [])
 * @method Result getMailDomain(array $args = [])
 * @method Promise getMailDomainAsync(array $args = [])
 * @method Result getMailboxDetails(array $args = [])
 * @method Promise getMailboxDetailsAsync(array $args = [])
 * @method Result getMobileDeviceAccessEffect(array $args = [])
 * @method Promise getMobileDeviceAccessEffectAsync(array $args = [])
 * @method Result getMobileDeviceAccessOverride(array $args = [])
 * @method Promise getMobileDeviceAccessOverrideAsync(array $args = [])
 * @method Result listAccessControlRules(array $args = [])
 * @method Promise listAccessControlRulesAsync(array $args = [])
 * @method Result listAliases(array $args = [])
 * @method Promise listAliasesAsync(array $args = [])
 * @method Result listAvailabilityConfigurations(array $args = [])
 * @method Promise listAvailabilityConfigurationsAsync(array $args = [])
 * @method Result listGroupMembers(array $args = [])
 * @method Promise listGroupMembersAsync(array $args = [])
 * @method Result listGroups(array $args = [])
 * @method Promise listGroupsAsync(array $args = [])
 * @method Result listGroupsForEntity(array $args = [])
 * @method Promise listGroupsForEntityAsync(array $args = [])
 * @method Result listImpersonationRoles(array $args = [])
 * @method Promise listImpersonationRolesAsync(array $args = [])
 * @method Result listMailDomains(array $args = [])
 * @method Promise listMailDomainsAsync(array $args = [])
 * @method Result listMailboxExportJobs(array $args = [])
 * @method Promise listMailboxExportJobsAsync(array $args = [])
 * @method Result listMailboxPermissions(array $args = [])
 * @method Promise listMailboxPermissionsAsync(array $args = [])
 * @method Result listMobileDeviceAccessOverrides(array $args = [])
 * @method Promise listMobileDeviceAccessOverridesAsync(array $args = [])
 * @method Result listMobileDeviceAccessRules(array $args = [])
 * @method Promise listMobileDeviceAccessRulesAsync(array $args = [])
 * @method Result listOrganizations(array $args = [])
 * @method Promise listOrganizationsAsync(array $args = [])
 * @method Result listResourceDelegates(array $args = [])
 * @method Promise listResourceDelegatesAsync(array $args = [])
 * @method Result listResources(array $args = [])
 * @method Promise listResourcesAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result listUsers(array $args = [])
 * @method Promise listUsersAsync(array $args = [])
 * @method Result putAccessControlRule(array $args = [])
 * @method Promise putAccessControlRuleAsync(array $args = [])
 * @method Result putEmailMonitoringConfiguration(array $args = [])
 * @method Promise putEmailMonitoringConfigurationAsync(array $args = [])
 * @method Result putInboundDmarcSettings(array $args = [])
 * @method Promise putInboundDmarcSettingsAsync(array $args = [])
 * @method Result putMailboxPermissions(array $args = [])
 * @method Promise putMailboxPermissionsAsync(array $args = [])
 * @method Result putMobileDeviceAccessOverride(array $args = [])
 * @method Promise putMobileDeviceAccessOverrideAsync(array $args = [])
 * @method Result putRetentionPolicy(array $args = [])
 * @method Promise putRetentionPolicyAsync(array $args = [])
 * @method Result registerMailDomain(array $args = [])
 * @method Promise registerMailDomainAsync(array $args = [])
 * @method Result registerToWorkMail(array $args = [])
 * @method Promise registerToWorkMailAsync(array $args = [])
 * @method Result resetPassword(array $args = [])
 * @method Promise resetPasswordAsync(array $args = [])
 * @method Result startMailboxExportJob(array $args = [])
 * @method Promise startMailboxExportJobAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result testAvailabilityConfiguration(array $args = [])
 * @method Promise testAvailabilityConfigurationAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateAvailabilityConfiguration(array $args = [])
 * @method Promise updateAvailabilityConfigurationAsync(array $args = [])
 * @method Result updateDefaultMailDomain(array $args = [])
 * @method Promise updateDefaultMailDomainAsync(array $args = [])
 * @method Result updateGroup(array $args = [])
 * @method Promise updateGroupAsync(array $args = [])
 * @method Result updateImpersonationRole(array $args = [])
 * @method Promise updateImpersonationRoleAsync(array $args = [])
 * @method Result updateMailboxQuota(array $args = [])
 * @method Promise updateMailboxQuotaAsync(array $args = [])
 * @method Result updateMobileDeviceAccessRule(array $args = [])
 * @method Promise updateMobileDeviceAccessRuleAsync(array $args = [])
 * @method Result updatePrimaryEmailAddress(array $args = [])
 * @method Promise updatePrimaryEmailAddressAsync(array $args = [])
 * @method Result updateResource(array $args = [])
 * @method Promise updateResourceAsync(array $args = [])
 * @method Result updateUser(array $args = [])
 * @method Promise updateUserAsync(array $args = [])
 */
class WorkMailClient extends AwsClient {}
