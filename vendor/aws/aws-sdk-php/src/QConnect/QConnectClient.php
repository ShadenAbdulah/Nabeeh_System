<?php
namespace Aws\QConnect;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon Q Connect** service.
 * @method Result createAssistant(array $args = [])
 * @method Promise createAssistantAsync(array $args = [])
 * @method Result createAssistantAssociation(array $args = [])
 * @method Promise createAssistantAssociationAsync(array $args = [])
 * @method Result createContent(array $args = [])
 * @method Promise createContentAsync(array $args = [])
 * @method Result createKnowledgeBase(array $args = [])
 * @method Promise createKnowledgeBaseAsync(array $args = [])
 * @method Result createQuickResponse(array $args = [])
 * @method Promise createQuickResponseAsync(array $args = [])
 * @method Result createSession(array $args = [])
 * @method Promise createSessionAsync(array $args = [])
 * @method Result deleteAssistant(array $args = [])
 * @method Promise deleteAssistantAsync(array $args = [])
 * @method Result deleteAssistantAssociation(array $args = [])
 * @method Promise deleteAssistantAssociationAsync(array $args = [])
 * @method Result deleteContent(array $args = [])
 * @method Promise deleteContentAsync(array $args = [])
 * @method Result deleteImportJob(array $args = [])
 * @method Promise deleteImportJobAsync(array $args = [])
 * @method Result deleteKnowledgeBase(array $args = [])
 * @method Promise deleteKnowledgeBaseAsync(array $args = [])
 * @method Result deleteQuickResponse(array $args = [])
 * @method Promise deleteQuickResponseAsync(array $args = [])
 * @method Result getAssistant(array $args = [])
 * @method Promise getAssistantAsync(array $args = [])
 * @method Result getAssistantAssociation(array $args = [])
 * @method Promise getAssistantAssociationAsync(array $args = [])
 * @method Result getContent(array $args = [])
 * @method Promise getContentAsync(array $args = [])
 * @method Result getContentSummary(array $args = [])
 * @method Promise getContentSummaryAsync(array $args = [])
 * @method Result getImportJob(array $args = [])
 * @method Promise getImportJobAsync(array $args = [])
 * @method Result getKnowledgeBase(array $args = [])
 * @method Promise getKnowledgeBaseAsync(array $args = [])
 * @method Result getQuickResponse(array $args = [])
 * @method Promise getQuickResponseAsync(array $args = [])
 * @method Result getRecommendations(array $args = [])
 * @method Promise getRecommendationsAsync(array $args = [])
 * @method Result getSession(array $args = [])
 * @method Promise getSessionAsync(array $args = [])
 * @method Result listAssistantAssociations(array $args = [])
 * @method Promise listAssistantAssociationsAsync(array $args = [])
 * @method Result listAssistants(array $args = [])
 * @method Promise listAssistantsAsync(array $args = [])
 * @method Result listContents(array $args = [])
 * @method Promise listContentsAsync(array $args = [])
 * @method Result listImportJobs(array $args = [])
 * @method Promise listImportJobsAsync(array $args = [])
 * @method Result listKnowledgeBases(array $args = [])
 * @method Promise listKnowledgeBasesAsync(array $args = [])
 * @method Result listQuickResponses(array $args = [])
 * @method Promise listQuickResponsesAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result notifyRecommendationsReceived(array $args = [])
 * @method Promise notifyRecommendationsReceivedAsync(array $args = [])
 * @method Result putFeedback(array $args = [])
 * @method Promise putFeedbackAsync(array $args = [])
 * @method Result queryAssistant(array $args = [])
 * @method Promise queryAssistantAsync(array $args = [])
 * @method Result removeKnowledgeBaseTemplateUri(array $args = [])
 * @method Promise removeKnowledgeBaseTemplateUriAsync(array $args = [])
 * @method Result searchContent(array $args = [])
 * @method Promise searchContentAsync(array $args = [])
 * @method Result searchQuickResponses(array $args = [])
 * @method Promise searchQuickResponsesAsync(array $args = [])
 * @method Result searchSessions(array $args = [])
 * @method Promise searchSessionsAsync(array $args = [])
 * @method Result startContentUpload(array $args = [])
 * @method Promise startContentUploadAsync(array $args = [])
 * @method Result startImportJob(array $args = [])
 * @method Promise startImportJobAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateContent(array $args = [])
 * @method Promise updateContentAsync(array $args = [])
 * @method Result updateKnowledgeBaseTemplateUri(array $args = [])
 * @method Promise updateKnowledgeBaseTemplateUriAsync(array $args = [])
 * @method Result updateQuickResponse(array $args = [])
 * @method Promise updateQuickResponseAsync(array $args = [])
 */
class QConnectClient extends AwsClient {}
