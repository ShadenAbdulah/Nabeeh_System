<?php
namespace Aws\ElasticsearchService;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon Elasticsearch Service** service.
 *
 * @method Result acceptInboundCrossClusterSearchConnection(array $args = [])
 * @method Promise acceptInboundCrossClusterSearchConnectionAsync(array $args = [])
 * @method Result addTags(array $args = [])
 * @method Promise addTagsAsync(array $args = [])
 * @method Result associatePackage(array $args = [])
 * @method Promise associatePackageAsync(array $args = [])
 * @method Result authorizeVpcEndpointAccess(array $args = [])
 * @method Promise authorizeVpcEndpointAccessAsync(array $args = [])
 * @method Result cancelDomainConfigChange(array $args = [])
 * @method Promise cancelDomainConfigChangeAsync(array $args = [])
 * @method Result cancelElasticsearchServiceSoftwareUpdate(array $args = [])
 * @method Promise cancelElasticsearchServiceSoftwareUpdateAsync(array $args = [])
 * @method Result createElasticsearchDomain(array $args = [])
 * @method Promise createElasticsearchDomainAsync(array $args = [])
 * @method Result createOutboundCrossClusterSearchConnection(array $args = [])
 * @method Promise createOutboundCrossClusterSearchConnectionAsync(array $args = [])
 * @method Result createPackage(array $args = [])
 * @method Promise createPackageAsync(array $args = [])
 * @method Result createVpcEndpoint(array $args = [])
 * @method Promise createVpcEndpointAsync(array $args = [])
 * @method Result deleteElasticsearchDomain(array $args = [])
 * @method Promise deleteElasticsearchDomainAsync(array $args = [])
 * @method Result deleteElasticsearchServiceRole(array $args = [])
 * @method Promise deleteElasticsearchServiceRoleAsync(array $args = [])
 * @method Result deleteInboundCrossClusterSearchConnection(array $args = [])
 * @method Promise deleteInboundCrossClusterSearchConnectionAsync(array $args = [])
 * @method Result deleteOutboundCrossClusterSearchConnection(array $args = [])
 * @method Promise deleteOutboundCrossClusterSearchConnectionAsync(array $args = [])
 * @method Result deletePackage(array $args = [])
 * @method Promise deletePackageAsync(array $args = [])
 * @method Result deleteVpcEndpoint(array $args = [])
 * @method Promise deleteVpcEndpointAsync(array $args = [])
 * @method Result describeDomainAutoTunes(array $args = [])
 * @method Promise describeDomainAutoTunesAsync(array $args = [])
 * @method Result describeDomainChangeProgress(array $args = [])
 * @method Promise describeDomainChangeProgressAsync(array $args = [])
 * @method Result describeElasticsearchDomain(array $args = [])
 * @method Promise describeElasticsearchDomainAsync(array $args = [])
 * @method Result describeElasticsearchDomainConfig(array $args = [])
 * @method Promise describeElasticsearchDomainConfigAsync(array $args = [])
 * @method Result describeElasticsearchDomains(array $args = [])
 * @method Promise describeElasticsearchDomainsAsync(array $args = [])
 * @method Result describeElasticsearchInstanceTypeLimits(array $args = [])
 * @method Promise describeElasticsearchInstanceTypeLimitsAsync(array $args = [])
 * @method Result describeInboundCrossClusterSearchConnections(array $args = [])
 * @method Promise describeInboundCrossClusterSearchConnectionsAsync(array $args = [])
 * @method Result describeOutboundCrossClusterSearchConnections(array $args = [])
 * @method Promise describeOutboundCrossClusterSearchConnectionsAsync(array $args = [])
 * @method Result describePackages(array $args = [])
 * @method Promise describePackagesAsync(array $args = [])
 * @method Result describeReservedElasticsearchInstanceOfferings(array $args = [])
 * @method Promise describeReservedElasticsearchInstanceOfferingsAsync(array $args = [])
 * @method Result describeReservedElasticsearchInstances(array $args = [])
 * @method Promise describeReservedElasticsearchInstancesAsync(array $args = [])
 * @method Result describeVpcEndpoints(array $args = [])
 * @method Promise describeVpcEndpointsAsync(array $args = [])
 * @method Result dissociatePackage(array $args = [])
 * @method Promise dissociatePackageAsync(array $args = [])
 * @method Result getCompatibleElasticsearchVersions(array $args = [])
 * @method Promise getCompatibleElasticsearchVersionsAsync(array $args = [])
 * @method Result getPackageVersionHistory(array $args = [])
 * @method Promise getPackageVersionHistoryAsync(array $args = [])
 * @method Result getUpgradeHistory(array $args = [])
 * @method Promise getUpgradeHistoryAsync(array $args = [])
 * @method Result getUpgradeStatus(array $args = [])
 * @method Promise getUpgradeStatusAsync(array $args = [])
 * @method Result listDomainNames(array $args = [])
 * @method Promise listDomainNamesAsync(array $args = [])
 * @method Result listDomainsForPackage(array $args = [])
 * @method Promise listDomainsForPackageAsync(array $args = [])
 * @method Result listElasticsearchInstanceTypes(array $args = [])
 * @method Promise listElasticsearchInstanceTypesAsync(array $args = [])
 * @method Result listElasticsearchVersions(array $args = [])
 * @method Promise listElasticsearchVersionsAsync(array $args = [])
 * @method Result listPackagesForDomain(array $args = [])
 * @method Promise listPackagesForDomainAsync(array $args = [])
 * @method Result listTags(array $args = [])
 * @method Promise listTagsAsync(array $args = [])
 * @method Result listVpcEndpointAccess(array $args = [])
 * @method Promise listVpcEndpointAccessAsync(array $args = [])
 * @method Result listVpcEndpoints(array $args = [])
 * @method Promise listVpcEndpointsAsync(array $args = [])
 * @method Result listVpcEndpointsForDomain(array $args = [])
 * @method Promise listVpcEndpointsForDomainAsync(array $args = [])
 * @method Result purchaseReservedElasticsearchInstanceOffering(array $args = [])
 * @method Promise purchaseReservedElasticsearchInstanceOfferingAsync(array $args = [])
 * @method Result rejectInboundCrossClusterSearchConnection(array $args = [])
 * @method Promise rejectInboundCrossClusterSearchConnectionAsync(array $args = [])
 * @method Result removeTags(array $args = [])
 * @method Promise removeTagsAsync(array $args = [])
 * @method Result revokeVpcEndpointAccess(array $args = [])
 * @method Promise revokeVpcEndpointAccessAsync(array $args = [])
 * @method Result startElasticsearchServiceSoftwareUpdate(array $args = [])
 * @method Promise startElasticsearchServiceSoftwareUpdateAsync(array $args = [])
 * @method Result updateElasticsearchDomainConfig(array $args = [])
 * @method Promise updateElasticsearchDomainConfigAsync(array $args = [])
 * @method Result updatePackage(array $args = [])
 * @method Promise updatePackageAsync(array $args = [])
 * @method Result updateVpcEndpoint(array $args = [])
 * @method Promise updateVpcEndpointAsync(array $args = [])
 * @method Result upgradeElasticsearchDomain(array $args = [])
 * @method Promise upgradeElasticsearchDomainAsync(array $args = [])
 */
class ElasticsearchServiceClient extends AwsClient {}
