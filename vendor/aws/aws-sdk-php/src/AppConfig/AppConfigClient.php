<?php
namespace Aws\AppConfig;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon AppConfig** service.
 * @method Result createApplication(array $args = [])
 * @method Promise createApplicationAsync(array $args = [])
 * @method Result createConfigurationProfile(array $args = [])
 * @method Promise createConfigurationProfileAsync(array $args = [])
 * @method Result createDeploymentStrategy(array $args = [])
 * @method Promise createDeploymentStrategyAsync(array $args = [])
 * @method Result createEnvironment(array $args = [])
 * @method Promise createEnvironmentAsync(array $args = [])
 * @method Result createExtension(array $args = [])
 * @method Promise createExtensionAsync(array $args = [])
 * @method Result createExtensionAssociation(array $args = [])
 * @method Promise createExtensionAssociationAsync(array $args = [])
 * @method Result createHostedConfigurationVersion(array $args = [])
 * @method Promise createHostedConfigurationVersionAsync(array $args = [])
 * @method Result deleteApplication(array $args = [])
 * @method Promise deleteApplicationAsync(array $args = [])
 * @method Result deleteConfigurationProfile(array $args = [])
 * @method Promise deleteConfigurationProfileAsync(array $args = [])
 * @method Result deleteDeploymentStrategy(array $args = [])
 * @method Promise deleteDeploymentStrategyAsync(array $args = [])
 * @method Result deleteEnvironment(array $args = [])
 * @method Promise deleteEnvironmentAsync(array $args = [])
 * @method Result deleteExtension(array $args = [])
 * @method Promise deleteExtensionAsync(array $args = [])
 * @method Result deleteExtensionAssociation(array $args = [])
 * @method Promise deleteExtensionAssociationAsync(array $args = [])
 * @method Result deleteHostedConfigurationVersion(array $args = [])
 * @method Promise deleteHostedConfigurationVersionAsync(array $args = [])
 * @method Result getApplication(array $args = [])
 * @method Promise getApplicationAsync(array $args = [])
 * @method Result getConfiguration(array $args = [])
 * @method Promise getConfigurationAsync(array $args = [])
 * @method Result getConfigurationProfile(array $args = [])
 * @method Promise getConfigurationProfileAsync(array $args = [])
 * @method Result getDeployment(array $args = [])
 * @method Promise getDeploymentAsync(array $args = [])
 * @method Result getDeploymentStrategy(array $args = [])
 * @method Promise getDeploymentStrategyAsync(array $args = [])
 * @method Result getEnvironment(array $args = [])
 * @method Promise getEnvironmentAsync(array $args = [])
 * @method Result getExtension(array $args = [])
 * @method Promise getExtensionAsync(array $args = [])
 * @method Result getExtensionAssociation(array $args = [])
 * @method Promise getExtensionAssociationAsync(array $args = [])
 * @method Result getHostedConfigurationVersion(array $args = [])
 * @method Promise getHostedConfigurationVersionAsync(array $args = [])
 * @method Result listApplications(array $args = [])
 * @method Promise listApplicationsAsync(array $args = [])
 * @method Result listConfigurationProfiles(array $args = [])
 * @method Promise listConfigurationProfilesAsync(array $args = [])
 * @method Result listDeploymentStrategies(array $args = [])
 * @method Promise listDeploymentStrategiesAsync(array $args = [])
 * @method Result listDeployments(array $args = [])
 * @method Promise listDeploymentsAsync(array $args = [])
 * @method Result listEnvironments(array $args = [])
 * @method Promise listEnvironmentsAsync(array $args = [])
 * @method Result listExtensionAssociations(array $args = [])
 * @method Promise listExtensionAssociationsAsync(array $args = [])
 * @method Result listExtensions(array $args = [])
 * @method Promise listExtensionsAsync(array $args = [])
 * @method Result listHostedConfigurationVersions(array $args = [])
 * @method Promise listHostedConfigurationVersionsAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result startDeployment(array $args = [])
 * @method Promise startDeploymentAsync(array $args = [])
 * @method Result stopDeployment(array $args = [])
 * @method Promise stopDeploymentAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateApplication(array $args = [])
 * @method Promise updateApplicationAsync(array $args = [])
 * @method Result updateConfigurationProfile(array $args = [])
 * @method Promise updateConfigurationProfileAsync(array $args = [])
 * @method Result updateDeploymentStrategy(array $args = [])
 * @method Promise updateDeploymentStrategyAsync(array $args = [])
 * @method Result updateEnvironment(array $args = [])
 * @method Promise updateEnvironmentAsync(array $args = [])
 * @method Result updateExtension(array $args = [])
 * @method Promise updateExtensionAsync(array $args = [])
 * @method Result updateExtensionAssociation(array $args = [])
 * @method Promise updateExtensionAssociationAsync(array $args = [])
 * @method Result validateConfiguration(array $args = [])
 * @method Promise validateConfigurationAsync(array $args = [])
 */
class AppConfigClient extends AwsClient {}
