<?php
namespace Aws\ServiceCatalog;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **AWS Service Catalog** service.
 * @method Result acceptPortfolioShare(array $args = [])
 * @method Promise acceptPortfolioShareAsync(array $args = [])
 * @method Result associateBudgetWithResource(array $args = [])
 * @method Promise associateBudgetWithResourceAsync(array $args = [])
 * @method Result associatePrincipalWithPortfolio(array $args = [])
 * @method Promise associatePrincipalWithPortfolioAsync(array $args = [])
 * @method Result associateProductWithPortfolio(array $args = [])
 * @method Promise associateProductWithPortfolioAsync(array $args = [])
 * @method Result associateServiceActionWithProvisioningArtifact(array $args = [])
 * @method Promise associateServiceActionWithProvisioningArtifactAsync(array $args = [])
 * @method Result associateTagOptionWithResource(array $args = [])
 * @method Promise associateTagOptionWithResourceAsync(array $args = [])
 * @method Result batchAssociateServiceActionWithProvisioningArtifact(array $args = [])
 * @method Promise batchAssociateServiceActionWithProvisioningArtifactAsync(array $args = [])
 * @method Result batchDisassociateServiceActionFromProvisioningArtifact(array $args = [])
 * @method Promise batchDisassociateServiceActionFromProvisioningArtifactAsync(array $args = [])
 * @method Result copyProduct(array $args = [])
 * @method Promise copyProductAsync(array $args = [])
 * @method Result createConstraint(array $args = [])
 * @method Promise createConstraintAsync(array $args = [])
 * @method Result createPortfolio(array $args = [])
 * @method Promise createPortfolioAsync(array $args = [])
 * @method Result createPortfolioShare(array $args = [])
 * @method Promise createPortfolioShareAsync(array $args = [])
 * @method Result createProduct(array $args = [])
 * @method Promise createProductAsync(array $args = [])
 * @method Result createProvisionedProductPlan(array $args = [])
 * @method Promise createProvisionedProductPlanAsync(array $args = [])
 * @method Result createProvisioningArtifact(array $args = [])
 * @method Promise createProvisioningArtifactAsync(array $args = [])
 * @method Result createServiceAction(array $args = [])
 * @method Promise createServiceActionAsync(array $args = [])
 * @method Result createTagOption(array $args = [])
 * @method Promise createTagOptionAsync(array $args = [])
 * @method Result deleteConstraint(array $args = [])
 * @method Promise deleteConstraintAsync(array $args = [])
 * @method Result deletePortfolio(array $args = [])
 * @method Promise deletePortfolioAsync(array $args = [])
 * @method Result deletePortfolioShare(array $args = [])
 * @method Promise deletePortfolioShareAsync(array $args = [])
 * @method Result deleteProduct(array $args = [])
 * @method Promise deleteProductAsync(array $args = [])
 * @method Result deleteProvisionedProductPlan(array $args = [])
 * @method Promise deleteProvisionedProductPlanAsync(array $args = [])
 * @method Result deleteProvisioningArtifact(array $args = [])
 * @method Promise deleteProvisioningArtifactAsync(array $args = [])
 * @method Result deleteServiceAction(array $args = [])
 * @method Promise deleteServiceActionAsync(array $args = [])
 * @method Result deleteTagOption(array $args = [])
 * @method Promise deleteTagOptionAsync(array $args = [])
 * @method Result describeConstraint(array $args = [])
 * @method Promise describeConstraintAsync(array $args = [])
 * @method Result describeCopyProductStatus(array $args = [])
 * @method Promise describeCopyProductStatusAsync(array $args = [])
 * @method Result describePortfolio(array $args = [])
 * @method Promise describePortfolioAsync(array $args = [])
 * @method Result describePortfolioShareStatus(array $args = [])
 * @method Promise describePortfolioShareStatusAsync(array $args = [])
 * @method Result describePortfolioShares(array $args = [])
 * @method Promise describePortfolioSharesAsync(array $args = [])
 * @method Result describeProduct(array $args = [])
 * @method Promise describeProductAsync(array $args = [])
 * @method Result describeProductAsAdmin(array $args = [])
 * @method Promise describeProductAsAdminAsync(array $args = [])
 * @method Result describeProductView(array $args = [])
 * @method Promise describeProductViewAsync(array $args = [])
 * @method Result describeProvisionedProduct(array $args = [])
 * @method Promise describeProvisionedProductAsync(array $args = [])
 * @method Result describeProvisionedProductPlan(array $args = [])
 * @method Promise describeProvisionedProductPlanAsync(array $args = [])
 * @method Result describeProvisioningArtifact(array $args = [])
 * @method Promise describeProvisioningArtifactAsync(array $args = [])
 * @method Result describeProvisioningParameters(array $args = [])
 * @method Promise describeProvisioningParametersAsync(array $args = [])
 * @method Result describeRecord(array $args = [])
 * @method Promise describeRecordAsync(array $args = [])
 * @method Result describeServiceAction(array $args = [])
 * @method Promise describeServiceActionAsync(array $args = [])
 * @method Result describeServiceActionExecutionParameters(array $args = [])
 * @method Promise describeServiceActionExecutionParametersAsync(array $args = [])
 * @method Result describeTagOption(array $args = [])
 * @method Promise describeTagOptionAsync(array $args = [])
 * @method Result disableAWSOrganizationsAccess(array $args = [])
 * @method Promise disableAWSOrganizationsAccessAsync(array $args = [])
 * @method Result disassociateBudgetFromResource(array $args = [])
 * @method Promise disassociateBudgetFromResourceAsync(array $args = [])
 * @method Result disassociatePrincipalFromPortfolio(array $args = [])
 * @method Promise disassociatePrincipalFromPortfolioAsync(array $args = [])
 * @method Result disassociateProductFromPortfolio(array $args = [])
 * @method Promise disassociateProductFromPortfolioAsync(array $args = [])
 * @method Result disassociateServiceActionFromProvisioningArtifact(array $args = [])
 * @method Promise disassociateServiceActionFromProvisioningArtifactAsync(array $args = [])
 * @method Result disassociateTagOptionFromResource(array $args = [])
 * @method Promise disassociateTagOptionFromResourceAsync(array $args = [])
 * @method Result enableAWSOrganizationsAccess(array $args = [])
 * @method Promise enableAWSOrganizationsAccessAsync(array $args = [])
 * @method Result executeProvisionedProductPlan(array $args = [])
 * @method Promise executeProvisionedProductPlanAsync(array $args = [])
 * @method Result executeProvisionedProductServiceAction(array $args = [])
 * @method Promise executeProvisionedProductServiceActionAsync(array $args = [])
 * @method Result getAWSOrganizationsAccessStatus(array $args = [])
 * @method Promise getAWSOrganizationsAccessStatusAsync(array $args = [])
 * @method Result getProvisionedProductOutputs(array $args = [])
 * @method Promise getProvisionedProductOutputsAsync(array $args = [])
 * @method Result importAsProvisionedProduct(array $args = [])
 * @method Promise importAsProvisionedProductAsync(array $args = [])
 * @method Result listAcceptedPortfolioShares(array $args = [])
 * @method Promise listAcceptedPortfolioSharesAsync(array $args = [])
 * @method Result listBudgetsForResource(array $args = [])
 * @method Promise listBudgetsForResourceAsync(array $args = [])
 * @method Result listConstraintsForPortfolio(array $args = [])
 * @method Promise listConstraintsForPortfolioAsync(array $args = [])
 * @method Result listLaunchPaths(array $args = [])
 * @method Promise listLaunchPathsAsync(array $args = [])
 * @method Result listOrganizationPortfolioAccess(array $args = [])
 * @method Promise listOrganizationPortfolioAccessAsync(array $args = [])
 * @method Result listPortfolioAccess(array $args = [])
 * @method Promise listPortfolioAccessAsync(array $args = [])
 * @method Result listPortfolios(array $args = [])
 * @method Promise listPortfoliosAsync(array $args = [])
 * @method Result listPortfoliosForProduct(array $args = [])
 * @method Promise listPortfoliosForProductAsync(array $args = [])
 * @method Result listPrincipalsForPortfolio(array $args = [])
 * @method Promise listPrincipalsForPortfolioAsync(array $args = [])
 * @method Result listProvisionedProductPlans(array $args = [])
 * @method Promise listProvisionedProductPlansAsync(array $args = [])
 * @method Result listProvisioningArtifacts(array $args = [])
 * @method Promise listProvisioningArtifactsAsync(array $args = [])
 * @method Result listProvisioningArtifactsForServiceAction(array $args = [])
 * @method Promise listProvisioningArtifactsForServiceActionAsync(array $args = [])
 * @method Result listRecordHistory(array $args = [])
 * @method Promise listRecordHistoryAsync(array $args = [])
 * @method Result listResourcesForTagOption(array $args = [])
 * @method Promise listResourcesForTagOptionAsync(array $args = [])
 * @method Result listServiceActions(array $args = [])
 * @method Promise listServiceActionsAsync(array $args = [])
 * @method Result listServiceActionsForProvisioningArtifact(array $args = [])
 * @method Promise listServiceActionsForProvisioningArtifactAsync(array $args = [])
 * @method Result listStackInstancesForProvisionedProduct(array $args = [])
 * @method Promise listStackInstancesForProvisionedProductAsync(array $args = [])
 * @method Result listTagOptions(array $args = [])
 * @method Promise listTagOptionsAsync(array $args = [])
 * @method Result notifyProvisionProductEngineWorkflowResult(array $args = [])
 * @method Promise notifyProvisionProductEngineWorkflowResultAsync(array $args = [])
 * @method Result notifyTerminateProvisionedProductEngineWorkflowResult(array $args = [])
 * @method Promise notifyTerminateProvisionedProductEngineWorkflowResultAsync(array $args = [])
 * @method Result notifyUpdateProvisionedProductEngineWorkflowResult(array $args = [])
 * @method Promise notifyUpdateProvisionedProductEngineWorkflowResultAsync(array $args = [])
 * @method Result provisionProduct(array $args = [])
 * @method Promise provisionProductAsync(array $args = [])
 * @method Result rejectPortfolioShare(array $args = [])
 * @method Promise rejectPortfolioShareAsync(array $args = [])
 * @method Result scanProvisionedProducts(array $args = [])
 * @method Promise scanProvisionedProductsAsync(array $args = [])
 * @method Result searchProducts(array $args = [])
 * @method Promise searchProductsAsync(array $args = [])
 * @method Result searchProductsAsAdmin(array $args = [])
 * @method Promise searchProductsAsAdminAsync(array $args = [])
 * @method Result searchProvisionedProducts(array $args = [])
 * @method Promise searchProvisionedProductsAsync(array $args = [])
 * @method Result terminateProvisionedProduct(array $args = [])
 * @method Promise terminateProvisionedProductAsync(array $args = [])
 * @method Result updateConstraint(array $args = [])
 * @method Promise updateConstraintAsync(array $args = [])
 * @method Result updatePortfolio(array $args = [])
 * @method Promise updatePortfolioAsync(array $args = [])
 * @method Result updatePortfolioShare(array $args = [])
 * @method Promise updatePortfolioShareAsync(array $args = [])
 * @method Result updateProduct(array $args = [])
 * @method Promise updateProductAsync(array $args = [])
 * @method Result updateProvisionedProduct(array $args = [])
 * @method Promise updateProvisionedProductAsync(array $args = [])
 * @method Result updateProvisionedProductProperties(array $args = [])
 * @method Promise updateProvisionedProductPropertiesAsync(array $args = [])
 * @method Result updateProvisioningArtifact(array $args = [])
 * @method Promise updateProvisioningArtifactAsync(array $args = [])
 * @method Result updateServiceAction(array $args = [])
 * @method Promise updateServiceActionAsync(array $args = [])
 * @method Result updateTagOption(array $args = [])
 * @method Promise updateTagOptionAsync(array $args = [])
 */
class ServiceCatalogClient extends AwsClient {}
