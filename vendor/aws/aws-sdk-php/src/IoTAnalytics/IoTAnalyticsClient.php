<?php
namespace Aws\IoTAnalytics;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **AWS IoT Analytics** service.
 * @method Result batchPutMessage(array $args = [])
 * @method Promise batchPutMessageAsync(array $args = [])
 * @method Result cancelPipelineReprocessing(array $args = [])
 * @method Promise cancelPipelineReprocessingAsync(array $args = [])
 * @method Result createChannel(array $args = [])
 * @method Promise createChannelAsync(array $args = [])
 * @method Result createDataset(array $args = [])
 * @method Promise createDatasetAsync(array $args = [])
 * @method Result createDatasetContent(array $args = [])
 * @method Promise createDatasetContentAsync(array $args = [])
 * @method Result createDatastore(array $args = [])
 * @method Promise createDatastoreAsync(array $args = [])
 * @method Result createPipeline(array $args = [])
 * @method Promise createPipelineAsync(array $args = [])
 * @method Result deleteChannel(array $args = [])
 * @method Promise deleteChannelAsync(array $args = [])
 * @method Result deleteDataset(array $args = [])
 * @method Promise deleteDatasetAsync(array $args = [])
 * @method Result deleteDatasetContent(array $args = [])
 * @method Promise deleteDatasetContentAsync(array $args = [])
 * @method Result deleteDatastore(array $args = [])
 * @method Promise deleteDatastoreAsync(array $args = [])
 * @method Result deletePipeline(array $args = [])
 * @method Promise deletePipelineAsync(array $args = [])
 * @method Result describeChannel(array $args = [])
 * @method Promise describeChannelAsync(array $args = [])
 * @method Result describeDataset(array $args = [])
 * @method Promise describeDatasetAsync(array $args = [])
 * @method Result describeDatastore(array $args = [])
 * @method Promise describeDatastoreAsync(array $args = [])
 * @method Result describeLoggingOptions(array $args = [])
 * @method Promise describeLoggingOptionsAsync(array $args = [])
 * @method Result describePipeline(array $args = [])
 * @method Promise describePipelineAsync(array $args = [])
 * @method Result getDatasetContent(array $args = [])
 * @method Promise getDatasetContentAsync(array $args = [])
 * @method Result listChannels(array $args = [])
 * @method Promise listChannelsAsync(array $args = [])
 * @method Result listDatasetContents(array $args = [])
 * @method Promise listDatasetContentsAsync(array $args = [])
 * @method Result listDatasets(array $args = [])
 * @method Promise listDatasetsAsync(array $args = [])
 * @method Result listDatastores(array $args = [])
 * @method Promise listDatastoresAsync(array $args = [])
 * @method Result listPipelines(array $args = [])
 * @method Promise listPipelinesAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result putLoggingOptions(array $args = [])
 * @method Promise putLoggingOptionsAsync(array $args = [])
 * @method Result runPipelineActivity(array $args = [])
 * @method Promise runPipelineActivityAsync(array $args = [])
 * @method Result sampleChannelData(array $args = [])
 * @method Promise sampleChannelDataAsync(array $args = [])
 * @method Result startPipelineReprocessing(array $args = [])
 * @method Promise startPipelineReprocessingAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateChannel(array $args = [])
 * @method Promise updateChannelAsync(array $args = [])
 * @method Result updateDataset(array $args = [])
 * @method Promise updateDatasetAsync(array $args = [])
 * @method Result updateDatastore(array $args = [])
 * @method Promise updateDatastoreAsync(array $args = [])
 * @method Result updatePipeline(array $args = [])
 * @method Promise updatePipelineAsync(array $args = [])
 */
class IoTAnalyticsClient extends AwsClient {}
