<?php
namespace Aws\CloudWatchLogs;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon CloudWatch Logs** service.
 *
 * @method Result associateKmsKey(array $args = [])
 * @method Promise associateKmsKeyAsync(array $args = [])
 * @method Result cancelExportTask(array $args = [])
 * @method Promise cancelExportTaskAsync(array $args = [])
 * @method Result createDelivery(array $args = [])
 * @method Promise createDeliveryAsync(array $args = [])
 * @method Result createExportTask(array $args = [])
 * @method Promise createExportTaskAsync(array $args = [])
 * @method Result createLogAnomalyDetector(array $args = [])
 * @method Promise createLogAnomalyDetectorAsync(array $args = [])
 * @method Result createLogGroup(array $args = [])
 * @method Promise createLogGroupAsync(array $args = [])
 * @method Result createLogStream(array $args = [])
 * @method Promise createLogStreamAsync(array $args = [])
 * @method Result deleteAccountPolicy(array $args = [])
 * @method Promise deleteAccountPolicyAsync(array $args = [])
 * @method Result deleteDataProtectionPolicy(array $args = [])
 * @method Promise deleteDataProtectionPolicyAsync(array $args = [])
 * @method Result deleteDelivery(array $args = [])
 * @method Promise deleteDeliveryAsync(array $args = [])
 * @method Result deleteDeliveryDestination(array $args = [])
 * @method Promise deleteDeliveryDestinationAsync(array $args = [])
 * @method Result deleteDeliveryDestinationPolicy(array $args = [])
 * @method Promise deleteDeliveryDestinationPolicyAsync(array $args = [])
 * @method Result deleteDeliverySource(array $args = [])
 * @method Promise deleteDeliverySourceAsync(array $args = [])
 * @method Result deleteDestination(array $args = [])
 * @method Promise deleteDestinationAsync(array $args = [])
 * @method Result deleteLogAnomalyDetector(array $args = [])
 * @method Promise deleteLogAnomalyDetectorAsync(array $args = [])
 * @method Result deleteLogGroup(array $args = [])
 * @method Promise deleteLogGroupAsync(array $args = [])
 * @method Result deleteLogStream(array $args = [])
 * @method Promise deleteLogStreamAsync(array $args = [])
 * @method Result deleteMetricFilter(array $args = [])
 * @method Promise deleteMetricFilterAsync(array $args = [])
 * @method Result deleteQueryDefinition(array $args = [])
 * @method Promise deleteQueryDefinitionAsync(array $args = [])
 * @method Result deleteResourcePolicy(array $args = [])
 * @method Promise deleteResourcePolicyAsync(array $args = [])
 * @method Result deleteRetentionPolicy(array $args = [])
 * @method Promise deleteRetentionPolicyAsync(array $args = [])
 * @method Result deleteSubscriptionFilter(array $args = [])
 * @method Promise deleteSubscriptionFilterAsync(array $args = [])
 * @method Result describeAccountPolicies(array $args = [])
 * @method Promise describeAccountPoliciesAsync(array $args = [])
 * @method Result describeDeliveries(array $args = [])
 * @method Promise describeDeliveriesAsync(array $args = [])
 * @method Result describeDeliveryDestinations(array $args = [])
 * @method Promise describeDeliveryDestinationsAsync(array $args = [])
 * @method Result describeDeliverySources(array $args = [])
 * @method Promise describeDeliverySourcesAsync(array $args = [])
 * @method Result describeDestinations(array $args = [])
 * @method Promise describeDestinationsAsync(array $args = [])
 * @method Result describeExportTasks(array $args = [])
 * @method Promise describeExportTasksAsync(array $args = [])
 * @method Result describeLogGroups(array $args = [])
 * @method Promise describeLogGroupsAsync(array $args = [])
 * @method Result describeLogStreams(array $args = [])
 * @method Promise describeLogStreamsAsync(array $args = [])
 * @method Result describeMetricFilters(array $args = [])
 * @method Promise describeMetricFiltersAsync(array $args = [])
 * @method Result describeQueries(array $args = [])
 * @method Promise describeQueriesAsync(array $args = [])
 * @method Result describeQueryDefinitions(array $args = [])
 * @method Promise describeQueryDefinitionsAsync(array $args = [])
 * @method Result describeResourcePolicies(array $args = [])
 * @method Promise describeResourcePoliciesAsync(array $args = [])
 * @method Result describeSubscriptionFilters(array $args = [])
 * @method Promise describeSubscriptionFiltersAsync(array $args = [])
 * @method Result disassociateKmsKey(array $args = [])
 * @method Promise disassociateKmsKeyAsync(array $args = [])
 * @method Result filterLogEvents(array $args = [])
 * @method Promise filterLogEventsAsync(array $args = [])
 * @method Result getDataProtectionPolicy(array $args = [])
 * @method Promise getDataProtectionPolicyAsync(array $args = [])
 * @method Result getDelivery(array $args = [])
 * @method Promise getDeliveryAsync(array $args = [])
 * @method Result getDeliveryDestination(array $args = [])
 * @method Promise getDeliveryDestinationAsync(array $args = [])
 * @method Result getDeliveryDestinationPolicy(array $args = [])
 * @method Promise getDeliveryDestinationPolicyAsync(array $args = [])
 * @method Result getDeliverySource(array $args = [])
 * @method Promise getDeliverySourceAsync(array $args = [])
 * @method Result getLogAnomalyDetector(array $args = [])
 * @method Promise getLogAnomalyDetectorAsync(array $args = [])
 * @method Result getLogEvents(array $args = [])
 * @method Promise getLogEventsAsync(array $args = [])
 * @method Result getLogGroupFields(array $args = [])
 * @method Promise getLogGroupFieldsAsync(array $args = [])
 * @method Result getLogRecord(array $args = [])
 * @method Promise getLogRecordAsync(array $args = [])
 * @method Result getQueryResults(array $args = [])
 * @method Promise getQueryResultsAsync(array $args = [])
 * @method Result listAnomalies(array $args = [])
 * @method Promise listAnomaliesAsync(array $args = [])
 * @method Result listLogAnomalyDetectors(array $args = [])
 * @method Promise listLogAnomalyDetectorsAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result listTagsLogGroup(array $args = [])
 * @method Promise listTagsLogGroupAsync(array $args = [])
 * @method Result putAccountPolicy(array $args = [])
 * @method Promise putAccountPolicyAsync(array $args = [])
 * @method Result putDataProtectionPolicy(array $args = [])
 * @method Promise putDataProtectionPolicyAsync(array $args = [])
 * @method Result putDeliveryDestination(array $args = [])
 * @method Promise putDeliveryDestinationAsync(array $args = [])
 * @method Result putDeliveryDestinationPolicy(array $args = [])
 * @method Promise putDeliveryDestinationPolicyAsync(array $args = [])
 * @method Result putDeliverySource(array $args = [])
 * @method Promise putDeliverySourceAsync(array $args = [])
 * @method Result putDestination(array $args = [])
 * @method Promise putDestinationAsync(array $args = [])
 * @method Result putDestinationPolicy(array $args = [])
 * @method Promise putDestinationPolicyAsync(array $args = [])
 * @method Result putLogEvents(array $args = [])
 * @method Promise putLogEventsAsync(array $args = [])
 * @method Result putMetricFilter(array $args = [])
 * @method Promise putMetricFilterAsync(array $args = [])
 * @method Result putQueryDefinition(array $args = [])
 * @method Promise putQueryDefinitionAsync(array $args = [])
 * @method Result putResourcePolicy(array $args = [])
 * @method Promise putResourcePolicyAsync(array $args = [])
 * @method Result putRetentionPolicy(array $args = [])
 * @method Promise putRetentionPolicyAsync(array $args = [])
 * @method Result putSubscriptionFilter(array $args = [])
 * @method Promise putSubscriptionFilterAsync(array $args = [])
 * @method Result startLiveTail(array $args = [])
 * @method Promise startLiveTailAsync(array $args = [])
 * @method Result startQuery(array $args = [])
 * @method Promise startQueryAsync(array $args = [])
 * @method Result stopQuery(array $args = [])
 * @method Promise stopQueryAsync(array $args = [])
 * @method Result tagLogGroup(array $args = [])
 * @method Promise tagLogGroupAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result testMetricFilter(array $args = [])
 * @method Promise testMetricFilterAsync(array $args = [])
 * @method Result untagLogGroup(array $args = [])
 * @method Promise untagLogGroupAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateAnomaly(array $args = [])
 * @method Promise updateAnomalyAsync(array $args = [])
 * @method Result updateLogAnomalyDetector(array $args = [])
 * @method Promise updateLogAnomalyDetectorAsync(array $args = [])
 */
class CloudWatchLogsClient extends AwsClient {}
