<?php
namespace Aws\ElasticLoadBalancingV2;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Elastic Load Balancing** service.
 * @method Result addListenerCertificates(array $args = [])
 * @method Promise addListenerCertificatesAsync(array $args = [])
 * @method Result addTags(array $args = [])
 * @method Promise addTagsAsync(array $args = [])
 * @method Result addTrustStoreRevocations(array $args = [])
 * @method Promise addTrustStoreRevocationsAsync(array $args = [])
 * @method Result createListener(array $args = [])
 * @method Promise createListenerAsync(array $args = [])
 * @method Result createLoadBalancer(array $args = [])
 * @method Promise createLoadBalancerAsync(array $args = [])
 * @method Result createRule(array $args = [])
 * @method Promise createRuleAsync(array $args = [])
 * @method Result createTargetGroup(array $args = [])
 * @method Promise createTargetGroupAsync(array $args = [])
 * @method Result createTrustStore(array $args = [])
 * @method Promise createTrustStoreAsync(array $args = [])
 * @method Result deleteListener(array $args = [])
 * @method Promise deleteListenerAsync(array $args = [])
 * @method Result deleteLoadBalancer(array $args = [])
 * @method Promise deleteLoadBalancerAsync(array $args = [])
 * @method Result deleteRule(array $args = [])
 * @method Promise deleteRuleAsync(array $args = [])
 * @method Result deleteTargetGroup(array $args = [])
 * @method Promise deleteTargetGroupAsync(array $args = [])
 * @method Result deleteTrustStore(array $args = [])
 * @method Promise deleteTrustStoreAsync(array $args = [])
 * @method Result deregisterTargets(array $args = [])
 * @method Promise deregisterTargetsAsync(array $args = [])
 * @method Result describeAccountLimits(array $args = [])
 * @method Promise describeAccountLimitsAsync(array $args = [])
 * @method Result describeListenerCertificates(array $args = [])
 * @method Promise describeListenerCertificatesAsync(array $args = [])
 * @method Result describeListeners(array $args = [])
 * @method Promise describeListenersAsync(array $args = [])
 * @method Result describeLoadBalancerAttributes(array $args = [])
 * @method Promise describeLoadBalancerAttributesAsync(array $args = [])
 * @method Result describeLoadBalancers(array $args = [])
 * @method Promise describeLoadBalancersAsync(array $args = [])
 * @method Result describeRules(array $args = [])
 * @method Promise describeRulesAsync(array $args = [])
 * @method Result describeSSLPolicies(array $args = [])
 * @method Promise describeSSLPoliciesAsync(array $args = [])
 * @method Result describeTags(array $args = [])
 * @method Promise describeTagsAsync(array $args = [])
 * @method Result describeTargetGroupAttributes(array $args = [])
 * @method Promise describeTargetGroupAttributesAsync(array $args = [])
 * @method Result describeTargetGroups(array $args = [])
 * @method Promise describeTargetGroupsAsync(array $args = [])
 * @method Result describeTargetHealth(array $args = [])
 * @method Promise describeTargetHealthAsync(array $args = [])
 * @method Result describeTrustStoreAssociations(array $args = [])
 * @method Promise describeTrustStoreAssociationsAsync(array $args = [])
 * @method Result describeTrustStoreRevocations(array $args = [])
 * @method Promise describeTrustStoreRevocationsAsync(array $args = [])
 * @method Result describeTrustStores(array $args = [])
 * @method Promise describeTrustStoresAsync(array $args = [])
 * @method Result getTrustStoreCaCertificatesBundle(array $args = [])
 * @method Promise getTrustStoreCaCertificatesBundleAsync(array $args = [])
 * @method Result getTrustStoreRevocationContent(array $args = [])
 * @method Promise getTrustStoreRevocationContentAsync(array $args = [])
 * @method Result modifyListener(array $args = [])
 * @method Promise modifyListenerAsync(array $args = [])
 * @method Result modifyLoadBalancerAttributes(array $args = [])
 * @method Promise modifyLoadBalancerAttributesAsync(array $args = [])
 * @method Result modifyRule(array $args = [])
 * @method Promise modifyRuleAsync(array $args = [])
 * @method Result modifyTargetGroup(array $args = [])
 * @method Promise modifyTargetGroupAsync(array $args = [])
 * @method Result modifyTargetGroupAttributes(array $args = [])
 * @method Promise modifyTargetGroupAttributesAsync(array $args = [])
 * @method Result modifyTrustStore(array $args = [])
 * @method Promise modifyTrustStoreAsync(array $args = [])
 * @method Result registerTargets(array $args = [])
 * @method Promise registerTargetsAsync(array $args = [])
 * @method Result removeListenerCertificates(array $args = [])
 * @method Promise removeListenerCertificatesAsync(array $args = [])
 * @method Result removeTags(array $args = [])
 * @method Promise removeTagsAsync(array $args = [])
 * @method Result removeTrustStoreRevocations(array $args = [])
 * @method Promise removeTrustStoreRevocationsAsync(array $args = [])
 * @method Result setIpAddressType(array $args = [])
 * @method Promise setIpAddressTypeAsync(array $args = [])
 * @method Result setRulePriorities(array $args = [])
 * @method Promise setRulePrioritiesAsync(array $args = [])
 * @method Result setSecurityGroups(array $args = [])
 * @method Promise setSecurityGroupsAsync(array $args = [])
 * @method Result setSubnets(array $args = [])
 * @method Promise setSubnetsAsync(array $args = [])
 */
class ElasticLoadBalancingV2Client extends AwsClient {}
