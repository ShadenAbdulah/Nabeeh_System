<?php
namespace Aws\DirectConnect;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **AWS Direct Connect** service.
 *
 * @method Result acceptDirectConnectGatewayAssociationProposal(array $args = [])
 * @method Promise acceptDirectConnectGatewayAssociationProposalAsync(array $args = [])
 * @method Result allocateConnectionOnInterconnect(array $args = [])
 * @method Promise allocateConnectionOnInterconnectAsync(array $args = [])
 * @method Result allocateHostedConnection(array $args = [])
 * @method Promise allocateHostedConnectionAsync(array $args = [])
 * @method Result allocatePrivateVirtualInterface(array $args = [])
 * @method Promise allocatePrivateVirtualInterfaceAsync(array $args = [])
 * @method Result allocatePublicVirtualInterface(array $args = [])
 * @method Promise allocatePublicVirtualInterfaceAsync(array $args = [])
 * @method Result allocateTransitVirtualInterface(array $args = [])
 * @method Promise allocateTransitVirtualInterfaceAsync(array $args = [])
 * @method Result associateConnectionWithLag(array $args = [])
 * @method Promise associateConnectionWithLagAsync(array $args = [])
 * @method Result associateHostedConnection(array $args = [])
 * @method Promise associateHostedConnectionAsync(array $args = [])
 * @method Result associateMacSecKey(array $args = [])
 * @method Promise associateMacSecKeyAsync(array $args = [])
 * @method Result associateVirtualInterface(array $args = [])
 * @method Promise associateVirtualInterfaceAsync(array $args = [])
 * @method Result confirmConnection(array $args = [])
 * @method Promise confirmConnectionAsync(array $args = [])
 * @method Result confirmCustomerAgreement(array $args = [])
 * @method Promise confirmCustomerAgreementAsync(array $args = [])
 * @method Result confirmPrivateVirtualInterface(array $args = [])
 * @method Promise confirmPrivateVirtualInterfaceAsync(array $args = [])
 * @method Result confirmPublicVirtualInterface(array $args = [])
 * @method Promise confirmPublicVirtualInterfaceAsync(array $args = [])
 * @method Result confirmTransitVirtualInterface(array $args = [])
 * @method Promise confirmTransitVirtualInterfaceAsync(array $args = [])
 * @method Result createBGPPeer(array $args = [])
 * @method Promise createBGPPeerAsync(array $args = [])
 * @method Result createConnection(array $args = [])
 * @method Promise createConnectionAsync(array $args = [])
 * @method Result createDirectConnectGateway(array $args = [])
 * @method Promise createDirectConnectGatewayAsync(array $args = [])
 * @method Result createDirectConnectGatewayAssociation(array $args = [])
 * @method Promise createDirectConnectGatewayAssociationAsync(array $args = [])
 * @method Result createDirectConnectGatewayAssociationProposal(array $args = [])
 * @method Promise createDirectConnectGatewayAssociationProposalAsync(array $args = [])
 * @method Result createInterconnect(array $args = [])
 * @method Promise createInterconnectAsync(array $args = [])
 * @method Result createLag(array $args = [])
 * @method Promise createLagAsync(array $args = [])
 * @method Result createPrivateVirtualInterface(array $args = [])
 * @method Promise createPrivateVirtualInterfaceAsync(array $args = [])
 * @method Result createPublicVirtualInterface(array $args = [])
 * @method Promise createPublicVirtualInterfaceAsync(array $args = [])
 * @method Result createTransitVirtualInterface(array $args = [])
 * @method Promise createTransitVirtualInterfaceAsync(array $args = [])
 * @method Result deleteBGPPeer(array $args = [])
 * @method Promise deleteBGPPeerAsync(array $args = [])
 * @method Result deleteConnection(array $args = [])
 * @method Promise deleteConnectionAsync(array $args = [])
 * @method Result deleteDirectConnectGateway(array $args = [])
 * @method Promise deleteDirectConnectGatewayAsync(array $args = [])
 * @method Result deleteDirectConnectGatewayAssociation(array $args = [])
 * @method Promise deleteDirectConnectGatewayAssociationAsync(array $args = [])
 * @method Result deleteDirectConnectGatewayAssociationProposal(array $args = [])
 * @method Promise deleteDirectConnectGatewayAssociationProposalAsync(array $args = [])
 * @method Result deleteInterconnect(array $args = [])
 * @method Promise deleteInterconnectAsync(array $args = [])
 * @method Result deleteLag(array $args = [])
 * @method Promise deleteLagAsync(array $args = [])
 * @method Result deleteVirtualInterface(array $args = [])
 * @method Promise deleteVirtualInterfaceAsync(array $args = [])
 * @method Result describeConnectionLoa(array $args = [])
 * @method Promise describeConnectionLoaAsync(array $args = [])
 * @method Result describeConnections(array $args = [])
 * @method Promise describeConnectionsAsync(array $args = [])
 * @method Result describeConnectionsOnInterconnect(array $args = [])
 * @method Promise describeConnectionsOnInterconnectAsync(array $args = [])
 * @method Result describeCustomerMetadata(array $args = [])
 * @method Promise describeCustomerMetadataAsync(array $args = [])
 * @method Result describeDirectConnectGatewayAssociationProposals(array $args = [])
 * @method Promise describeDirectConnectGatewayAssociationProposalsAsync(array $args = [])
 * @method Result describeDirectConnectGatewayAssociations(array $args = [])
 * @method Promise describeDirectConnectGatewayAssociationsAsync(array $args = [])
 * @method Result describeDirectConnectGatewayAttachments(array $args = [])
 * @method Promise describeDirectConnectGatewayAttachmentsAsync(array $args = [])
 * @method Result describeDirectConnectGateways(array $args = [])
 * @method Promise describeDirectConnectGatewaysAsync(array $args = [])
 * @method Result describeHostedConnections(array $args = [])
 * @method Promise describeHostedConnectionsAsync(array $args = [])
 * @method Result describeInterconnectLoa(array $args = [])
 * @method Promise describeInterconnectLoaAsync(array $args = [])
 * @method Result describeInterconnects(array $args = [])
 * @method Promise describeInterconnectsAsync(array $args = [])
 * @method Result describeLags(array $args = [])
 * @method Promise describeLagsAsync(array $args = [])
 * @method Result describeLoa(array $args = [])
 * @method Promise describeLoaAsync(array $args = [])
 * @method Result describeLocations(array $args = [])
 * @method Promise describeLocationsAsync(array $args = [])
 * @method Result describeRouterConfiguration(array $args = [])
 * @method Promise describeRouterConfigurationAsync(array $args = [])
 * @method Result describeTags(array $args = [])
 * @method Promise describeTagsAsync(array $args = [])
 * @method Result describeVirtualGateways(array $args = [])
 * @method Promise describeVirtualGatewaysAsync(array $args = [])
 * @method Result describeVirtualInterfaces(array $args = [])
 * @method Promise describeVirtualInterfacesAsync(array $args = [])
 * @method Result disassociateConnectionFromLag(array $args = [])
 * @method Promise disassociateConnectionFromLagAsync(array $args = [])
 * @method Result disassociateMacSecKey(array $args = [])
 * @method Promise disassociateMacSecKeyAsync(array $args = [])
 * @method Result listVirtualInterfaceTestHistory(array $args = [])
 * @method Promise listVirtualInterfaceTestHistoryAsync(array $args = [])
 * @method Result startBgpFailoverTest(array $args = [])
 * @method Promise startBgpFailoverTestAsync(array $args = [])
 * @method Result stopBgpFailoverTest(array $args = [])
 * @method Promise stopBgpFailoverTestAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateConnection(array $args = [])
 * @method Promise updateConnectionAsync(array $args = [])
 * @method Result updateDirectConnectGateway(array $args = [])
 * @method Promise updateDirectConnectGatewayAsync(array $args = [])
 * @method Result updateDirectConnectGatewayAssociation(array $args = [])
 * @method Promise updateDirectConnectGatewayAssociationAsync(array $args = [])
 * @method Result updateLag(array $args = [])
 * @method Promise updateLagAsync(array $args = [])
 * @method Result updateVirtualInterfaceAttributes(array $args = [])
 * @method Promise updateVirtualInterfaceAttributesAsync(array $args = [])
 */
class DirectConnectClient extends AwsClient {}
