<?php
namespace Aws\QuickSight;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon QuickSight** service.
 * @method Result cancelIngestion(array $args = [])
 * @method Promise cancelIngestionAsync(array $args = [])
 * @method Result createAccountCustomization(array $args = [])
 * @method Promise createAccountCustomizationAsync(array $args = [])
 * @method Result createAccountSubscription(array $args = [])
 * @method Promise createAccountSubscriptionAsync(array $args = [])
 * @method Result createAnalysis(array $args = [])
 * @method Promise createAnalysisAsync(array $args = [])
 * @method Result createDashboard(array $args = [])
 * @method Promise createDashboardAsync(array $args = [])
 * @method Result createDataSet(array $args = [])
 * @method Promise createDataSetAsync(array $args = [])
 * @method Result createDataSource(array $args = [])
 * @method Promise createDataSourceAsync(array $args = [])
 * @method Result createFolder(array $args = [])
 * @method Promise createFolderAsync(array $args = [])
 * @method Result createFolderMembership(array $args = [])
 * @method Promise createFolderMembershipAsync(array $args = [])
 * @method Result createGroup(array $args = [])
 * @method Promise createGroupAsync(array $args = [])
 * @method Result createGroupMembership(array $args = [])
 * @method Promise createGroupMembershipAsync(array $args = [])
 * @method Result createIAMPolicyAssignment(array $args = [])
 * @method Promise createIAMPolicyAssignmentAsync(array $args = [])
 * @method Result createIngestion(array $args = [])
 * @method Promise createIngestionAsync(array $args = [])
 * @method Result createNamespace(array $args = [])
 * @method Promise createNamespaceAsync(array $args = [])
 * @method Result createRefreshSchedule(array $args = [])
 * @method Promise createRefreshScheduleAsync(array $args = [])
 * @method Result createRoleMembership(array $args = [])
 * @method Promise createRoleMembershipAsync(array $args = [])
 * @method Result createTemplate(array $args = [])
 * @method Promise createTemplateAsync(array $args = [])
 * @method Result createTemplateAlias(array $args = [])
 * @method Promise createTemplateAliasAsync(array $args = [])
 * @method Result createTheme(array $args = [])
 * @method Promise createThemeAsync(array $args = [])
 * @method Result createThemeAlias(array $args = [])
 * @method Promise createThemeAliasAsync(array $args = [])
 * @method Result createTopic(array $args = [])
 * @method Promise createTopicAsync(array $args = [])
 * @method Result createTopicRefreshSchedule(array $args = [])
 * @method Promise createTopicRefreshScheduleAsync(array $args = [])
 * @method Result createVPCConnection(array $args = [])
 * @method Promise createVPCConnectionAsync(array $args = [])
 * @method Result deleteAccountCustomization(array $args = [])
 * @method Promise deleteAccountCustomizationAsync(array $args = [])
 * @method Result deleteAccountSubscription(array $args = [])
 * @method Promise deleteAccountSubscriptionAsync(array $args = [])
 * @method Result deleteAnalysis(array $args = [])
 * @method Promise deleteAnalysisAsync(array $args = [])
 * @method Result deleteDashboard(array $args = [])
 * @method Promise deleteDashboardAsync(array $args = [])
 * @method Result deleteDataSet(array $args = [])
 * @method Promise deleteDataSetAsync(array $args = [])
 * @method Result deleteDataSetRefreshProperties(array $args = [])
 * @method Promise deleteDataSetRefreshPropertiesAsync(array $args = [])
 * @method Result deleteDataSource(array $args = [])
 * @method Promise deleteDataSourceAsync(array $args = [])
 * @method Result deleteFolder(array $args = [])
 * @method Promise deleteFolderAsync(array $args = [])
 * @method Result deleteFolderMembership(array $args = [])
 * @method Promise deleteFolderMembershipAsync(array $args = [])
 * @method Result deleteGroup(array $args = [])
 * @method Promise deleteGroupAsync(array $args = [])
 * @method Result deleteGroupMembership(array $args = [])
 * @method Promise deleteGroupMembershipAsync(array $args = [])
 * @method Result deleteIAMPolicyAssignment(array $args = [])
 * @method Promise deleteIAMPolicyAssignmentAsync(array $args = [])
 * @method Result deleteIdentityPropagationConfig(array $args = [])
 * @method Promise deleteIdentityPropagationConfigAsync(array $args = [])
 * @method Result deleteNamespace(array $args = [])
 * @method Promise deleteNamespaceAsync(array $args = [])
 * @method Result deleteRefreshSchedule(array $args = [])
 * @method Promise deleteRefreshScheduleAsync(array $args = [])
 * @method Result deleteRoleCustomPermission(array $args = [])
 * @method Promise deleteRoleCustomPermissionAsync(array $args = [])
 * @method Result deleteRoleMembership(array $args = [])
 * @method Promise deleteRoleMembershipAsync(array $args = [])
 * @method Result deleteTemplate(array $args = [])
 * @method Promise deleteTemplateAsync(array $args = [])
 * @method Result deleteTemplateAlias(array $args = [])
 * @method Promise deleteTemplateAliasAsync(array $args = [])
 * @method Result deleteTheme(array $args = [])
 * @method Promise deleteThemeAsync(array $args = [])
 * @method Result deleteThemeAlias(array $args = [])
 * @method Promise deleteThemeAliasAsync(array $args = [])
 * @method Result deleteTopic(array $args = [])
 * @method Promise deleteTopicAsync(array $args = [])
 * @method Result deleteTopicRefreshSchedule(array $args = [])
 * @method Promise deleteTopicRefreshScheduleAsync(array $args = [])
 * @method Result deleteUser(array $args = [])
 * @method Promise deleteUserAsync(array $args = [])
 * @method Result deleteUserByPrincipalId(array $args = [])
 * @method Promise deleteUserByPrincipalIdAsync(array $args = [])
 * @method Result deleteVPCConnection(array $args = [])
 * @method Promise deleteVPCConnectionAsync(array $args = [])
 * @method Result describeAccountCustomization(array $args = [])
 * @method Promise describeAccountCustomizationAsync(array $args = [])
 * @method Result describeAccountSettings(array $args = [])
 * @method Promise describeAccountSettingsAsync(array $args = [])
 * @method Result describeAccountSubscription(array $args = [])
 * @method Promise describeAccountSubscriptionAsync(array $args = [])
 * @method Result describeAnalysis(array $args = [])
 * @method Promise describeAnalysisAsync(array $args = [])
 * @method Result describeAnalysisDefinition(array $args = [])
 * @method Promise describeAnalysisDefinitionAsync(array $args = [])
 * @method Result describeAnalysisPermissions(array $args = [])
 * @method Promise describeAnalysisPermissionsAsync(array $args = [])
 * @method Result describeAssetBundleExportJob(array $args = [])
 * @method Promise describeAssetBundleExportJobAsync(array $args = [])
 * @method Result describeAssetBundleImportJob(array $args = [])
 * @method Promise describeAssetBundleImportJobAsync(array $args = [])
 * @method Result describeDashboard(array $args = [])
 * @method Promise describeDashboardAsync(array $args = [])
 * @method Result describeDashboardDefinition(array $args = [])
 * @method Promise describeDashboardDefinitionAsync(array $args = [])
 * @method Result describeDashboardPermissions(array $args = [])
 * @method Promise describeDashboardPermissionsAsync(array $args = [])
 * @method Result describeDashboardSnapshotJob(array $args = [])
 * @method Promise describeDashboardSnapshotJobAsync(array $args = [])
 * @method Result describeDashboardSnapshotJobResult(array $args = [])
 * @method Promise describeDashboardSnapshotJobResultAsync(array $args = [])
 * @method Result describeDataSet(array $args = [])
 * @method Promise describeDataSetAsync(array $args = [])
 * @method Result describeDataSetPermissions(array $args = [])
 * @method Promise describeDataSetPermissionsAsync(array $args = [])
 * @method Result describeDataSetRefreshProperties(array $args = [])
 * @method Promise describeDataSetRefreshPropertiesAsync(array $args = [])
 * @method Result describeDataSource(array $args = [])
 * @method Promise describeDataSourceAsync(array $args = [])
 * @method Result describeDataSourcePermissions(array $args = [])
 * @method Promise describeDataSourcePermissionsAsync(array $args = [])
 * @method Result describeFolder(array $args = [])
 * @method Promise describeFolderAsync(array $args = [])
 * @method Result describeFolderPermissions(array $args = [])
 * @method Promise describeFolderPermissionsAsync(array $args = [])
 * @method Result describeFolderResolvedPermissions(array $args = [])
 * @method Promise describeFolderResolvedPermissionsAsync(array $args = [])
 * @method Result describeGroup(array $args = [])
 * @method Promise describeGroupAsync(array $args = [])
 * @method Result describeGroupMembership(array $args = [])
 * @method Promise describeGroupMembershipAsync(array $args = [])
 * @method Result describeIAMPolicyAssignment(array $args = [])
 * @method Promise describeIAMPolicyAssignmentAsync(array $args = [])
 * @method Result describeIngestion(array $args = [])
 * @method Promise describeIngestionAsync(array $args = [])
 * @method Result describeIpRestriction(array $args = [])
 * @method Promise describeIpRestrictionAsync(array $args = [])
 * @method Result describeNamespace(array $args = [])
 * @method Promise describeNamespaceAsync(array $args = [])
 * @method Result describeRefreshSchedule(array $args = [])
 * @method Promise describeRefreshScheduleAsync(array $args = [])
 * @method Result describeRoleCustomPermission(array $args = [])
 * @method Promise describeRoleCustomPermissionAsync(array $args = [])
 * @method Result describeTemplate(array $args = [])
 * @method Promise describeTemplateAsync(array $args = [])
 * @method Result describeTemplateAlias(array $args = [])
 * @method Promise describeTemplateAliasAsync(array $args = [])
 * @method Result describeTemplateDefinition(array $args = [])
 * @method Promise describeTemplateDefinitionAsync(array $args = [])
 * @method Result describeTemplatePermissions(array $args = [])
 * @method Promise describeTemplatePermissionsAsync(array $args = [])
 * @method Result describeTheme(array $args = [])
 * @method Promise describeThemeAsync(array $args = [])
 * @method Result describeThemeAlias(array $args = [])
 * @method Promise describeThemeAliasAsync(array $args = [])
 * @method Result describeThemePermissions(array $args = [])
 * @method Promise describeThemePermissionsAsync(array $args = [])
 * @method Result describeTopic(array $args = [])
 * @method Promise describeTopicAsync(array $args = [])
 * @method Result describeTopicPermissions(array $args = [])
 * @method Promise describeTopicPermissionsAsync(array $args = [])
 * @method Result describeTopicRefresh(array $args = [])
 * @method Promise describeTopicRefreshAsync(array $args = [])
 * @method Result describeTopicRefreshSchedule(array $args = [])
 * @method Promise describeTopicRefreshScheduleAsync(array $args = [])
 * @method Result describeUser(array $args = [])
 * @method Promise describeUserAsync(array $args = [])
 * @method Result describeVPCConnection(array $args = [])
 * @method Promise describeVPCConnectionAsync(array $args = [])
 * @method Result generateEmbedUrlForAnonymousUser(array $args = [])
 * @method Promise generateEmbedUrlForAnonymousUserAsync(array $args = [])
 * @method Result generateEmbedUrlForRegisteredUser(array $args = [])
 * @method Promise generateEmbedUrlForRegisteredUserAsync(array $args = [])
 * @method Result getDashboardEmbedUrl(array $args = [])
 * @method Promise getDashboardEmbedUrlAsync(array $args = [])
 * @method Result getSessionEmbedUrl(array $args = [])
 * @method Promise getSessionEmbedUrlAsync(array $args = [])
 * @method Result listAnalyses(array $args = [])
 * @method Promise listAnalysesAsync(array $args = [])
 * @method Result listAssetBundleExportJobs(array $args = [])
 * @method Promise listAssetBundleExportJobsAsync(array $args = [])
 * @method Result listAssetBundleImportJobs(array $args = [])
 * @method Promise listAssetBundleImportJobsAsync(array $args = [])
 * @method Result listDashboardVersions(array $args = [])
 * @method Promise listDashboardVersionsAsync(array $args = [])
 * @method Result listDashboards(array $args = [])
 * @method Promise listDashboardsAsync(array $args = [])
 * @method Result listDataSets(array $args = [])
 * @method Promise listDataSetsAsync(array $args = [])
 * @method Result listDataSources(array $args = [])
 * @method Promise listDataSourcesAsync(array $args = [])
 * @method Result listFolderMembers(array $args = [])
 * @method Promise listFolderMembersAsync(array $args = [])
 * @method Result listFolders(array $args = [])
 * @method Promise listFoldersAsync(array $args = [])
 * @method Result listGroupMemberships(array $args = [])
 * @method Promise listGroupMembershipsAsync(array $args = [])
 * @method Result listGroups(array $args = [])
 * @method Promise listGroupsAsync(array $args = [])
 * @method Result listIAMPolicyAssignments(array $args = [])
 * @method Promise listIAMPolicyAssignmentsAsync(array $args = [])
 * @method Result listIAMPolicyAssignmentsForUser(array $args = [])
 * @method Promise listIAMPolicyAssignmentsForUserAsync(array $args = [])
 * @method Result listIdentityPropagationConfigs(array $args = [])
 * @method Promise listIdentityPropagationConfigsAsync(array $args = [])
 * @method Result listIngestions(array $args = [])
 * @method Promise listIngestionsAsync(array $args = [])
 * @method Result listNamespaces(array $args = [])
 * @method Promise listNamespacesAsync(array $args = [])
 * @method Result listRefreshSchedules(array $args = [])
 * @method Promise listRefreshSchedulesAsync(array $args = [])
 * @method Result listRoleMemberships(array $args = [])
 * @method Promise listRoleMembershipsAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result listTemplateAliases(array $args = [])
 * @method Promise listTemplateAliasesAsync(array $args = [])
 * @method Result listTemplateVersions(array $args = [])
 * @method Promise listTemplateVersionsAsync(array $args = [])
 * @method Result listTemplates(array $args = [])
 * @method Promise listTemplatesAsync(array $args = [])
 * @method Result listThemeAliases(array $args = [])
 * @method Promise listThemeAliasesAsync(array $args = [])
 * @method Result listThemeVersions(array $args = [])
 * @method Promise listThemeVersionsAsync(array $args = [])
 * @method Result listThemes(array $args = [])
 * @method Promise listThemesAsync(array $args = [])
 * @method Result listTopicRefreshSchedules(array $args = [])
 * @method Promise listTopicRefreshSchedulesAsync(array $args = [])
 * @method Result listTopics(array $args = [])
 * @method Promise listTopicsAsync(array $args = [])
 * @method Result listUserGroups(array $args = [])
 * @method Promise listUserGroupsAsync(array $args = [])
 * @method Result listUsers(array $args = [])
 * @method Promise listUsersAsync(array $args = [])
 * @method Result listVPCConnections(array $args = [])
 * @method Promise listVPCConnectionsAsync(array $args = [])
 * @method Result putDataSetRefreshProperties(array $args = [])
 * @method Promise putDataSetRefreshPropertiesAsync(array $args = [])
 * @method Result registerUser(array $args = [])
 * @method Promise registerUserAsync(array $args = [])
 * @method Result restoreAnalysis(array $args = [])
 * @method Promise restoreAnalysisAsync(array $args = [])
 * @method Result searchAnalyses(array $args = [])
 * @method Promise searchAnalysesAsync(array $args = [])
 * @method Result searchDashboards(array $args = [])
 * @method Promise searchDashboardsAsync(array $args = [])
 * @method Result searchDataSets(array $args = [])
 * @method Promise searchDataSetsAsync(array $args = [])
 * @method Result searchDataSources(array $args = [])
 * @method Promise searchDataSourcesAsync(array $args = [])
 * @method Result searchFolders(array $args = [])
 * @method Promise searchFoldersAsync(array $args = [])
 * @method Result searchGroups(array $args = [])
 * @method Promise searchGroupsAsync(array $args = [])
 * @method Result startAssetBundleExportJob(array $args = [])
 * @method Promise startAssetBundleExportJobAsync(array $args = [])
 * @method Result startAssetBundleImportJob(array $args = [])
 * @method Promise startAssetBundleImportJobAsync(array $args = [])
 * @method Result startDashboardSnapshotJob(array $args = [])
 * @method Promise startDashboardSnapshotJobAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateAccountCustomization(array $args = [])
 * @method Promise updateAccountCustomizationAsync(array $args = [])
 * @method Result updateAccountSettings(array $args = [])
 * @method Promise updateAccountSettingsAsync(array $args = [])
 * @method Result updateAnalysis(array $args = [])
 * @method Promise updateAnalysisAsync(array $args = [])
 * @method Result updateAnalysisPermissions(array $args = [])
 * @method Promise updateAnalysisPermissionsAsync(array $args = [])
 * @method Result updateDashboard(array $args = [])
 * @method Promise updateDashboardAsync(array $args = [])
 * @method Result updateDashboardLinks(array $args = [])
 * @method Promise updateDashboardLinksAsync(array $args = [])
 * @method Result updateDashboardPermissions(array $args = [])
 * @method Promise updateDashboardPermissionsAsync(array $args = [])
 * @method Result updateDashboardPublishedVersion(array $args = [])
 * @method Promise updateDashboardPublishedVersionAsync(array $args = [])
 * @method Result updateDataSet(array $args = [])
 * @method Promise updateDataSetAsync(array $args = [])
 * @method Result updateDataSetPermissions(array $args = [])
 * @method Promise updateDataSetPermissionsAsync(array $args = [])
 * @method Result updateDataSource(array $args = [])
 * @method Promise updateDataSourceAsync(array $args = [])
 * @method Result updateDataSourcePermissions(array $args = [])
 * @method Promise updateDataSourcePermissionsAsync(array $args = [])
 * @method Result updateFolder(array $args = [])
 * @method Promise updateFolderAsync(array $args = [])
 * @method Result updateFolderPermissions(array $args = [])
 * @method Promise updateFolderPermissionsAsync(array $args = [])
 * @method Result updateGroup(array $args = [])
 * @method Promise updateGroupAsync(array $args = [])
 * @method Result updateIAMPolicyAssignment(array $args = [])
 * @method Promise updateIAMPolicyAssignmentAsync(array $args = [])
 * @method Result updateIdentityPropagationConfig(array $args = [])
 * @method Promise updateIdentityPropagationConfigAsync(array $args = [])
 * @method Result updateIpRestriction(array $args = [])
 * @method Promise updateIpRestrictionAsync(array $args = [])
 * @method Result updatePublicSharingSettings(array $args = [])
 * @method Promise updatePublicSharingSettingsAsync(array $args = [])
 * @method Result updateRefreshSchedule(array $args = [])
 * @method Promise updateRefreshScheduleAsync(array $args = [])
 * @method Result updateRoleCustomPermission(array $args = [])
 * @method Promise updateRoleCustomPermissionAsync(array $args = [])
 * @method Result updateTemplate(array $args = [])
 * @method Promise updateTemplateAsync(array $args = [])
 * @method Result updateTemplateAlias(array $args = [])
 * @method Promise updateTemplateAliasAsync(array $args = [])
 * @method Result updateTemplatePermissions(array $args = [])
 * @method Promise updateTemplatePermissionsAsync(array $args = [])
 * @method Result updateTheme(array $args = [])
 * @method Promise updateThemeAsync(array $args = [])
 * @method Result updateThemeAlias(array $args = [])
 * @method Promise updateThemeAliasAsync(array $args = [])
 * @method Result updateThemePermissions(array $args = [])
 * @method Promise updateThemePermissionsAsync(array $args = [])
 * @method Result updateTopic(array $args = [])
 * @method Promise updateTopicAsync(array $args = [])
 * @method Result updateTopicPermissions(array $args = [])
 * @method Promise updateTopicPermissionsAsync(array $args = [])
 * @method Result updateTopicRefreshSchedule(array $args = [])
 * @method Promise updateTopicRefreshScheduleAsync(array $args = [])
 * @method Result updateUser(array $args = [])
 * @method Promise updateUserAsync(array $args = [])
 * @method Result updateVPCConnection(array $args = [])
 * @method Promise updateVPCConnectionAsync(array $args = [])
 */
class QuickSightClient extends AwsClient {}
