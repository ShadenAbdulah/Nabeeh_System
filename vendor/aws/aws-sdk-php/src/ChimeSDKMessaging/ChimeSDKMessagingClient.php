<?php
namespace Aws\ChimeSDKMessaging;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon Chime SDK Messaging** service.
 * @method Result associateChannelFlow(array $args = [])
 * @method Promise associateChannelFlowAsync(array $args = [])
 * @method Result batchCreateChannelMembership(array $args = [])
 * @method Promise batchCreateChannelMembershipAsync(array $args = [])
 * @method Result channelFlowCallback(array $args = [])
 * @method Promise channelFlowCallbackAsync(array $args = [])
 * @method Result createChannel(array $args = [])
 * @method Promise createChannelAsync(array $args = [])
 * @method Result createChannelBan(array $args = [])
 * @method Promise createChannelBanAsync(array $args = [])
 * @method Result createChannelFlow(array $args = [])
 * @method Promise createChannelFlowAsync(array $args = [])
 * @method Result createChannelMembership(array $args = [])
 * @method Promise createChannelMembershipAsync(array $args = [])
 * @method Result createChannelModerator(array $args = [])
 * @method Promise createChannelModeratorAsync(array $args = [])
 * @method Result deleteChannel(array $args = [])
 * @method Promise deleteChannelAsync(array $args = [])
 * @method Result deleteChannelBan(array $args = [])
 * @method Promise deleteChannelBanAsync(array $args = [])
 * @method Result deleteChannelFlow(array $args = [])
 * @method Promise deleteChannelFlowAsync(array $args = [])
 * @method Result deleteChannelMembership(array $args = [])
 * @method Promise deleteChannelMembershipAsync(array $args = [])
 * @method Result deleteChannelMessage(array $args = [])
 * @method Promise deleteChannelMessageAsync(array $args = [])
 * @method Result deleteChannelModerator(array $args = [])
 * @method Promise deleteChannelModeratorAsync(array $args = [])
 * @method Result deleteMessagingStreamingConfigurations(array $args = [])
 * @method Promise deleteMessagingStreamingConfigurationsAsync(array $args = [])
 * @method Result describeChannel(array $args = [])
 * @method Promise describeChannelAsync(array $args = [])
 * @method Result describeChannelBan(array $args = [])
 * @method Promise describeChannelBanAsync(array $args = [])
 * @method Result describeChannelFlow(array $args = [])
 * @method Promise describeChannelFlowAsync(array $args = [])
 * @method Result describeChannelMembership(array $args = [])
 * @method Promise describeChannelMembershipAsync(array $args = [])
 * @method Result describeChannelMembershipForAppInstanceUser(array $args = [])
 * @method Promise describeChannelMembershipForAppInstanceUserAsync(array $args = [])
 * @method Result describeChannelModeratedByAppInstanceUser(array $args = [])
 * @method Promise describeChannelModeratedByAppInstanceUserAsync(array $args = [])
 * @method Result describeChannelModerator(array $args = [])
 * @method Promise describeChannelModeratorAsync(array $args = [])
 * @method Result disassociateChannelFlow(array $args = [])
 * @method Promise disassociateChannelFlowAsync(array $args = [])
 * @method Result getChannelMembershipPreferences(array $args = [])
 * @method Promise getChannelMembershipPreferencesAsync(array $args = [])
 * @method Result getChannelMessage(array $args = [])
 * @method Promise getChannelMessageAsync(array $args = [])
 * @method Result getChannelMessageStatus(array $args = [])
 * @method Promise getChannelMessageStatusAsync(array $args = [])
 * @method Result getMessagingSessionEndpoint(array $args = [])
 * @method Promise getMessagingSessionEndpointAsync(array $args = [])
 * @method Result getMessagingStreamingConfigurations(array $args = [])
 * @method Promise getMessagingStreamingConfigurationsAsync(array $args = [])
 * @method Result listChannelBans(array $args = [])
 * @method Promise listChannelBansAsync(array $args = [])
 * @method Result listChannelFlows(array $args = [])
 * @method Promise listChannelFlowsAsync(array $args = [])
 * @method Result listChannelMemberships(array $args = [])
 * @method Promise listChannelMembershipsAsync(array $args = [])
 * @method Result listChannelMembershipsForAppInstanceUser(array $args = [])
 * @method Promise listChannelMembershipsForAppInstanceUserAsync(array $args = [])
 * @method Result listChannelMessages(array $args = [])
 * @method Promise listChannelMessagesAsync(array $args = [])
 * @method Result listChannelModerators(array $args = [])
 * @method Promise listChannelModeratorsAsync(array $args = [])
 * @method Result listChannels(array $args = [])
 * @method Promise listChannelsAsync(array $args = [])
 * @method Result listChannelsAssociatedWithChannelFlow(array $args = [])
 * @method Promise listChannelsAssociatedWithChannelFlowAsync(array $args = [])
 * @method Result listChannelsModeratedByAppInstanceUser(array $args = [])
 * @method Promise listChannelsModeratedByAppInstanceUserAsync(array $args = [])
 * @method Result listSubChannels(array $args = [])
 * @method Promise listSubChannelsAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result putChannelExpirationSettings(array $args = [])
 * @method Promise putChannelExpirationSettingsAsync(array $args = [])
 * @method Result putChannelMembershipPreferences(array $args = [])
 * @method Promise putChannelMembershipPreferencesAsync(array $args = [])
 * @method Result putMessagingStreamingConfigurations(array $args = [])
 * @method Promise putMessagingStreamingConfigurationsAsync(array $args = [])
 * @method Result redactChannelMessage(array $args = [])
 * @method Promise redactChannelMessageAsync(array $args = [])
 * @method Result searchChannels(array $args = [])
 * @method Promise searchChannelsAsync(array $args = [])
 * @method Result sendChannelMessage(array $args = [])
 * @method Promise sendChannelMessageAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateChannel(array $args = [])
 * @method Promise updateChannelAsync(array $args = [])
 * @method Result updateChannelFlow(array $args = [])
 * @method Promise updateChannelFlowAsync(array $args = [])
 * @method Result updateChannelMessage(array $args = [])
 * @method Promise updateChannelMessageAsync(array $args = [])
 * @method Result updateChannelReadMarker(array $args = [])
 * @method Promise updateChannelReadMarkerAsync(array $args = [])
 */
class ChimeSDKMessagingClient extends AwsClient {}
