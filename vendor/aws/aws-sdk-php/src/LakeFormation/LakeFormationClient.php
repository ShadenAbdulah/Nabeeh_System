<?php
namespace Aws\LakeFormation;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **AWS Lake Formation** service.
 * @method Result addLFTagsToResource(array $args = [])
 * @method Promise addLFTagsToResourceAsync(array $args = [])
 * @method Result assumeDecoratedRoleWithSAML(array $args = [])
 * @method Promise assumeDecoratedRoleWithSAMLAsync(array $args = [])
 * @method Result batchGrantPermissions(array $args = [])
 * @method Promise batchGrantPermissionsAsync(array $args = [])
 * @method Result batchRevokePermissions(array $args = [])
 * @method Promise batchRevokePermissionsAsync(array $args = [])
 * @method Result cancelTransaction(array $args = [])
 * @method Promise cancelTransactionAsync(array $args = [])
 * @method Result commitTransaction(array $args = [])
 * @method Promise commitTransactionAsync(array $args = [])
 * @method Result createDataCellsFilter(array $args = [])
 * @method Promise createDataCellsFilterAsync(array $args = [])
 * @method Result createLFTag(array $args = [])
 * @method Promise createLFTagAsync(array $args = [])
 * @method Result createLakeFormationIdentityCenterConfiguration(array $args = [])
 * @method Promise createLakeFormationIdentityCenterConfigurationAsync(array $args = [])
 * @method Result createLakeFormationOptIn(array $args = [])
 * @method Promise createLakeFormationOptInAsync(array $args = [])
 * @method Result deleteDataCellsFilter(array $args = [])
 * @method Promise deleteDataCellsFilterAsync(array $args = [])
 * @method Result deleteLFTag(array $args = [])
 * @method Promise deleteLFTagAsync(array $args = [])
 * @method Result deleteLakeFormationIdentityCenterConfiguration(array $args = [])
 * @method Promise deleteLakeFormationIdentityCenterConfigurationAsync(array $args = [])
 * @method Result deleteLakeFormationOptIn(array $args = [])
 * @method Promise deleteLakeFormationOptInAsync(array $args = [])
 * @method Result deleteObjectsOnCancel(array $args = [])
 * @method Promise deleteObjectsOnCancelAsync(array $args = [])
 * @method Result deregisterResource(array $args = [])
 * @method Promise deregisterResourceAsync(array $args = [])
 * @method Result describeLakeFormationIdentityCenterConfiguration(array $args = [])
 * @method Promise describeLakeFormationIdentityCenterConfigurationAsync(array $args = [])
 * @method Result describeResource(array $args = [])
 * @method Promise describeResourceAsync(array $args = [])
 * @method Result describeTransaction(array $args = [])
 * @method Promise describeTransactionAsync(array $args = [])
 * @method Result extendTransaction(array $args = [])
 * @method Promise extendTransactionAsync(array $args = [])
 * @method Result getDataCellsFilter(array $args = [])
 * @method Promise getDataCellsFilterAsync(array $args = [])
 * @method Result getDataLakeSettings(array $args = [])
 * @method Promise getDataLakeSettingsAsync(array $args = [])
 * @method Result getEffectivePermissionsForPath(array $args = [])
 * @method Promise getEffectivePermissionsForPathAsync(array $args = [])
 * @method Result getLFTag(array $args = [])
 * @method Promise getLFTagAsync(array $args = [])
 * @method Result getQueryState(array $args = [])
 * @method Promise getQueryStateAsync(array $args = [])
 * @method Result getQueryStatistics(array $args = [])
 * @method Promise getQueryStatisticsAsync(array $args = [])
 * @method Result getResourceLFTags(array $args = [])
 * @method Promise getResourceLFTagsAsync(array $args = [])
 * @method Result getTableObjects(array $args = [])
 * @method Promise getTableObjectsAsync(array $args = [])
 * @method Result getTemporaryGluePartitionCredentials(array $args = [])
 * @method Promise getTemporaryGluePartitionCredentialsAsync(array $args = [])
 * @method Result getTemporaryGlueTableCredentials(array $args = [])
 * @method Promise getTemporaryGlueTableCredentialsAsync(array $args = [])
 * @method Result getWorkUnitResults(array $args = [])
 * @method Promise getWorkUnitResultsAsync(array $args = [])
 * @method Result getWorkUnits(array $args = [])
 * @method Promise getWorkUnitsAsync(array $args = [])
 * @method Result grantPermissions(array $args = [])
 * @method Promise grantPermissionsAsync(array $args = [])
 * @method Result listDataCellsFilter(array $args = [])
 * @method Promise listDataCellsFilterAsync(array $args = [])
 * @method Result listLFTags(array $args = [])
 * @method Promise listLFTagsAsync(array $args = [])
 * @method Result listLakeFormationOptIns(array $args = [])
 * @method Promise listLakeFormationOptInsAsync(array $args = [])
 * @method Result listPermissions(array $args = [])
 * @method Promise listPermissionsAsync(array $args = [])
 * @method Result listResources(array $args = [])
 * @method Promise listResourcesAsync(array $args = [])
 * @method Result listTableStorageOptimizers(array $args = [])
 * @method Promise listTableStorageOptimizersAsync(array $args = [])
 * @method Result listTransactions(array $args = [])
 * @method Promise listTransactionsAsync(array $args = [])
 * @method Result putDataLakeSettings(array $args = [])
 * @method Promise putDataLakeSettingsAsync(array $args = [])
 * @method Result registerResource(array $args = [])
 * @method Promise registerResourceAsync(array $args = [])
 * @method Result removeLFTagsFromResource(array $args = [])
 * @method Promise removeLFTagsFromResourceAsync(array $args = [])
 * @method Result revokePermissions(array $args = [])
 * @method Promise revokePermissionsAsync(array $args = [])
 * @method Result searchDatabasesByLFTags(array $args = [])
 * @method Promise searchDatabasesByLFTagsAsync(array $args = [])
 * @method Result searchTablesByLFTags(array $args = [])
 * @method Promise searchTablesByLFTagsAsync(array $args = [])
 * @method Result startQueryPlanning(array $args = [])
 * @method Promise startQueryPlanningAsync(array $args = [])
 * @method Result startTransaction(array $args = [])
 * @method Promise startTransactionAsync(array $args = [])
 * @method Result updateDataCellsFilter(array $args = [])
 * @method Promise updateDataCellsFilterAsync(array $args = [])
 * @method Result updateLFTag(array $args = [])
 * @method Promise updateLFTagAsync(array $args = [])
 * @method Result updateLakeFormationIdentityCenterConfiguration(array $args = [])
 * @method Promise updateLakeFormationIdentityCenterConfigurationAsync(array $args = [])
 * @method Result updateResource(array $args = [])
 * @method Promise updateResourceAsync(array $args = [])
 * @method Result updateTableObjects(array $args = [])
 * @method Promise updateTableObjectsAsync(array $args = [])
 * @method Result updateTableStorageOptimizer(array $args = [])
 * @method Promise updateTableStorageOptimizerAsync(array $args = [])
 */
class LakeFormationClient extends AwsClient {}
