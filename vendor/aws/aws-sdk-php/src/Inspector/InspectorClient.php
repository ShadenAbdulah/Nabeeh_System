<?php
namespace Aws\Inspector;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon Inspector** service.
 *
 * @method Result addAttributesToFindings(array $args = [])
 * @method Promise addAttributesToFindingsAsync(array $args = [])
 * @method Result createAssessmentTarget(array $args = [])
 * @method Promise createAssessmentTargetAsync(array $args = [])
 * @method Result createAssessmentTemplate(array $args = [])
 * @method Promise createAssessmentTemplateAsync(array $args = [])
 * @method Result createExclusionsPreview(array $args = [])
 * @method Promise createExclusionsPreviewAsync(array $args = [])
 * @method Result createResourceGroup(array $args = [])
 * @method Promise createResourceGroupAsync(array $args = [])
 * @method Result deleteAssessmentRun(array $args = [])
 * @method Promise deleteAssessmentRunAsync(array $args = [])
 * @method Result deleteAssessmentTarget(array $args = [])
 * @method Promise deleteAssessmentTargetAsync(array $args = [])
 * @method Result deleteAssessmentTemplate(array $args = [])
 * @method Promise deleteAssessmentTemplateAsync(array $args = [])
 * @method Result describeAssessmentRuns(array $args = [])
 * @method Promise describeAssessmentRunsAsync(array $args = [])
 * @method Result describeAssessmentTargets(array $args = [])
 * @method Promise describeAssessmentTargetsAsync(array $args = [])
 * @method Result describeAssessmentTemplates(array $args = [])
 * @method Promise describeAssessmentTemplatesAsync(array $args = [])
 * @method Result describeCrossAccountAccessRole(array $args = [])
 * @method Promise describeCrossAccountAccessRoleAsync(array $args = [])
 * @method Result describeExclusions(array $args = [])
 * @method Promise describeExclusionsAsync(array $args = [])
 * @method Result describeFindings(array $args = [])
 * @method Promise describeFindingsAsync(array $args = [])
 * @method Result describeResourceGroups(array $args = [])
 * @method Promise describeResourceGroupsAsync(array $args = [])
 * @method Result describeRulesPackages(array $args = [])
 * @method Promise describeRulesPackagesAsync(array $args = [])
 * @method Result getAssessmentReport(array $args = [])
 * @method Promise getAssessmentReportAsync(array $args = [])
 * @method Result getExclusionsPreview(array $args = [])
 * @method Promise getExclusionsPreviewAsync(array $args = [])
 * @method Result getTelemetryMetadata(array $args = [])
 * @method Promise getTelemetryMetadataAsync(array $args = [])
 * @method Result listAssessmentRunAgents(array $args = [])
 * @method Promise listAssessmentRunAgentsAsync(array $args = [])
 * @method Result listAssessmentRuns(array $args = [])
 * @method Promise listAssessmentRunsAsync(array $args = [])
 * @method Result listAssessmentTargets(array $args = [])
 * @method Promise listAssessmentTargetsAsync(array $args = [])
 * @method Result listAssessmentTemplates(array $args = [])
 * @method Promise listAssessmentTemplatesAsync(array $args = [])
 * @method Result listEventSubscriptions(array $args = [])
 * @method Promise listEventSubscriptionsAsync(array $args = [])
 * @method Result listExclusions(array $args = [])
 * @method Promise listExclusionsAsync(array $args = [])
 * @method Result listFindings(array $args = [])
 * @method Promise listFindingsAsync(array $args = [])
 * @method Result listRulesPackages(array $args = [])
 * @method Promise listRulesPackagesAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result previewAgents(array $args = [])
 * @method Promise previewAgentsAsync(array $args = [])
 * @method Result registerCrossAccountAccessRole(array $args = [])
 * @method Promise registerCrossAccountAccessRoleAsync(array $args = [])
 * @method Result removeAttributesFromFindings(array $args = [])
 * @method Promise removeAttributesFromFindingsAsync(array $args = [])
 * @method Result setTagsForResource(array $args = [])
 * @method Promise setTagsForResourceAsync(array $args = [])
 * @method Result startAssessmentRun(array $args = [])
 * @method Promise startAssessmentRunAsync(array $args = [])
 * @method Result stopAssessmentRun(array $args = [])
 * @method Promise stopAssessmentRunAsync(array $args = [])
 * @method Result subscribeToEvent(array $args = [])
 * @method Promise subscribeToEventAsync(array $args = [])
 * @method Result unsubscribeFromEvent(array $args = [])
 * @method Promise unsubscribeFromEventAsync(array $args = [])
 * @method Result updateAssessmentTarget(array $args = [])
 * @method Promise updateAssessmentTargetAsync(array $args = [])
 */
class InspectorClient extends AwsClient {}
