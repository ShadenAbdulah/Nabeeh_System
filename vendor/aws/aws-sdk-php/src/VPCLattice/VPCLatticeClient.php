<?php
namespace Aws\VPCLattice;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon VPC Lattice** service.
 * @method Result batchUpdateRule(array $args = [])
 * @method Promise batchUpdateRuleAsync(array $args = [])
 * @method Result createAccessLogSubscription(array $args = [])
 * @method Promise createAccessLogSubscriptionAsync(array $args = [])
 * @method Result createListener(array $args = [])
 * @method Promise createListenerAsync(array $args = [])
 * @method Result createRule(array $args = [])
 * @method Promise createRuleAsync(array $args = [])
 * @method Result createService(array $args = [])
 * @method Promise createServiceAsync(array $args = [])
 * @method Result createServiceNetwork(array $args = [])
 * @method Promise createServiceNetworkAsync(array $args = [])
 * @method Result createServiceNetworkServiceAssociation(array $args = [])
 * @method Promise createServiceNetworkServiceAssociationAsync(array $args = [])
 * @method Result createServiceNetworkVpcAssociation(array $args = [])
 * @method Promise createServiceNetworkVpcAssociationAsync(array $args = [])
 * @method Result createTargetGroup(array $args = [])
 * @method Promise createTargetGroupAsync(array $args = [])
 * @method Result deleteAccessLogSubscription(array $args = [])
 * @method Promise deleteAccessLogSubscriptionAsync(array $args = [])
 * @method Result deleteAuthPolicy(array $args = [])
 * @method Promise deleteAuthPolicyAsync(array $args = [])
 * @method Result deleteListener(array $args = [])
 * @method Promise deleteListenerAsync(array $args = [])
 * @method Result deleteResourcePolicy(array $args = [])
 * @method Promise deleteResourcePolicyAsync(array $args = [])
 * @method Result deleteRule(array $args = [])
 * @method Promise deleteRuleAsync(array $args = [])
 * @method Result deleteService(array $args = [])
 * @method Promise deleteServiceAsync(array $args = [])
 * @method Result deleteServiceNetwork(array $args = [])
 * @method Promise deleteServiceNetworkAsync(array $args = [])
 * @method Result deleteServiceNetworkServiceAssociation(array $args = [])
 * @method Promise deleteServiceNetworkServiceAssociationAsync(array $args = [])
 * @method Result deleteServiceNetworkVpcAssociation(array $args = [])
 * @method Promise deleteServiceNetworkVpcAssociationAsync(array $args = [])
 * @method Result deleteTargetGroup(array $args = [])
 * @method Promise deleteTargetGroupAsync(array $args = [])
 * @method Result deregisterTargets(array $args = [])
 * @method Promise deregisterTargetsAsync(array $args = [])
 * @method Result getAccessLogSubscription(array $args = [])
 * @method Promise getAccessLogSubscriptionAsync(array $args = [])
 * @method Result getAuthPolicy(array $args = [])
 * @method Promise getAuthPolicyAsync(array $args = [])
 * @method Result getListener(array $args = [])
 * @method Promise getListenerAsync(array $args = [])
 * @method Result getResourcePolicy(array $args = [])
 * @method Promise getResourcePolicyAsync(array $args = [])
 * @method Result getRule(array $args = [])
 * @method Promise getRuleAsync(array $args = [])
 * @method Result getService(array $args = [])
 * @method Promise getServiceAsync(array $args = [])
 * @method Result getServiceNetwork(array $args = [])
 * @method Promise getServiceNetworkAsync(array $args = [])
 * @method Result getServiceNetworkServiceAssociation(array $args = [])
 * @method Promise getServiceNetworkServiceAssociationAsync(array $args = [])
 * @method Result getServiceNetworkVpcAssociation(array $args = [])
 * @method Promise getServiceNetworkVpcAssociationAsync(array $args = [])
 * @method Result getTargetGroup(array $args = [])
 * @method Promise getTargetGroupAsync(array $args = [])
 * @method Result listAccessLogSubscriptions(array $args = [])
 * @method Promise listAccessLogSubscriptionsAsync(array $args = [])
 * @method Result listListeners(array $args = [])
 * @method Promise listListenersAsync(array $args = [])
 * @method Result listRules(array $args = [])
 * @method Promise listRulesAsync(array $args = [])
 * @method Result listServiceNetworkServiceAssociations(array $args = [])
 * @method Promise listServiceNetworkServiceAssociationsAsync(array $args = [])
 * @method Result listServiceNetworkVpcAssociations(array $args = [])
 * @method Promise listServiceNetworkVpcAssociationsAsync(array $args = [])
 * @method Result listServiceNetworks(array $args = [])
 * @method Promise listServiceNetworksAsync(array $args = [])
 * @method Result listServices(array $args = [])
 * @method Promise listServicesAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result listTargetGroups(array $args = [])
 * @method Promise listTargetGroupsAsync(array $args = [])
 * @method Result listTargets(array $args = [])
 * @method Promise listTargetsAsync(array $args = [])
 * @method Result putAuthPolicy(array $args = [])
 * @method Promise putAuthPolicyAsync(array $args = [])
 * @method Result putResourcePolicy(array $args = [])
 * @method Promise putResourcePolicyAsync(array $args = [])
 * @method Result registerTargets(array $args = [])
 * @method Promise registerTargetsAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateAccessLogSubscription(array $args = [])
 * @method Promise updateAccessLogSubscriptionAsync(array $args = [])
 * @method Result updateListener(array $args = [])
 * @method Promise updateListenerAsync(array $args = [])
 * @method Result updateRule(array $args = [])
 * @method Promise updateRuleAsync(array $args = [])
 * @method Result updateService(array $args = [])
 * @method Promise updateServiceAsync(array $args = [])
 * @method Result updateServiceNetwork(array $args = [])
 * @method Promise updateServiceNetworkAsync(array $args = [])
 * @method Result updateServiceNetworkVpcAssociation(array $args = [])
 * @method Promise updateServiceNetworkVpcAssociationAsync(array $args = [])
 * @method Result updateTargetGroup(array $args = [])
 * @method Promise updateTargetGroupAsync(array $args = [])
 */
class VPCLatticeClient extends AwsClient {}
