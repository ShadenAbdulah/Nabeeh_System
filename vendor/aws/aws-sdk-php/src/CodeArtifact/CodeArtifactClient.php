<?php
namespace Aws\CodeArtifact;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **CodeArtifact** service.
 * @method Result associateExternalConnection(array $args = [])
 * @method Promise associateExternalConnectionAsync(array $args = [])
 * @method Result copyPackageVersions(array $args = [])
 * @method Promise copyPackageVersionsAsync(array $args = [])
 * @method Result createDomain(array $args = [])
 * @method Promise createDomainAsync(array $args = [])
 * @method Result createRepository(array $args = [])
 * @method Promise createRepositoryAsync(array $args = [])
 * @method Result deleteDomain(array $args = [])
 * @method Promise deleteDomainAsync(array $args = [])
 * @method Result deleteDomainPermissionsPolicy(array $args = [])
 * @method Promise deleteDomainPermissionsPolicyAsync(array $args = [])
 * @method Result deletePackage(array $args = [])
 * @method Promise deletePackageAsync(array $args = [])
 * @method Result deletePackageVersions(array $args = [])
 * @method Promise deletePackageVersionsAsync(array $args = [])
 * @method Result deleteRepository(array $args = [])
 * @method Promise deleteRepositoryAsync(array $args = [])
 * @method Result deleteRepositoryPermissionsPolicy(array $args = [])
 * @method Promise deleteRepositoryPermissionsPolicyAsync(array $args = [])
 * @method Result describeDomain(array $args = [])
 * @method Promise describeDomainAsync(array $args = [])
 * @method Result describePackage(array $args = [])
 * @method Promise describePackageAsync(array $args = [])
 * @method Result describePackageVersion(array $args = [])
 * @method Promise describePackageVersionAsync(array $args = [])
 * @method Result describeRepository(array $args = [])
 * @method Promise describeRepositoryAsync(array $args = [])
 * @method Result disassociateExternalConnection(array $args = [])
 * @method Promise disassociateExternalConnectionAsync(array $args = [])
 * @method Result disposePackageVersions(array $args = [])
 * @method Promise disposePackageVersionsAsync(array $args = [])
 * @method Result getAuthorizationToken(array $args = [])
 * @method Promise getAuthorizationTokenAsync(array $args = [])
 * @method Result getDomainPermissionsPolicy(array $args = [])
 * @method Promise getDomainPermissionsPolicyAsync(array $args = [])
 * @method Result getPackageVersionAsset(array $args = [])
 * @method Promise getPackageVersionAssetAsync(array $args = [])
 * @method Result getPackageVersionReadme(array $args = [])
 * @method Promise getPackageVersionReadmeAsync(array $args = [])
 * @method Result getRepositoryEndpoint(array $args = [])
 * @method Promise getRepositoryEndpointAsync(array $args = [])
 * @method Result getRepositoryPermissionsPolicy(array $args = [])
 * @method Promise getRepositoryPermissionsPolicyAsync(array $args = [])
 * @method Result listDomains(array $args = [])
 * @method Promise listDomainsAsync(array $args = [])
 * @method Result listPackageVersionAssets(array $args = [])
 * @method Promise listPackageVersionAssetsAsync(array $args = [])
 * @method Result listPackageVersionDependencies(array $args = [])
 * @method Promise listPackageVersionDependenciesAsync(array $args = [])
 * @method Result listPackageVersions(array $args = [])
 * @method Promise listPackageVersionsAsync(array $args = [])
 * @method Result listPackages(array $args = [])
 * @method Promise listPackagesAsync(array $args = [])
 * @method Result listRepositories(array $args = [])
 * @method Promise listRepositoriesAsync(array $args = [])
 * @method Result listRepositoriesInDomain(array $args = [])
 * @method Promise listRepositoriesInDomainAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result publishPackageVersion(array $args = [])
 * @method Promise publishPackageVersionAsync(array $args = [])
 * @method Result putDomainPermissionsPolicy(array $args = [])
 * @method Promise putDomainPermissionsPolicyAsync(array $args = [])
 * @method Result putPackageOriginConfiguration(array $args = [])
 * @method Promise putPackageOriginConfigurationAsync(array $args = [])
 * @method Result putRepositoryPermissionsPolicy(array $args = [])
 * @method Promise putRepositoryPermissionsPolicyAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updatePackageVersionsStatus(array $args = [])
 * @method Promise updatePackageVersionsStatusAsync(array $args = [])
 * @method Result updateRepository(array $args = [])
 * @method Promise updateRepositoryAsync(array $args = [])
 */
class CodeArtifactClient extends AwsClient {}
