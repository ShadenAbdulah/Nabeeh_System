<?php
namespace Aws\Transfer;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **AWS Transfer for SFTP** service.
 * @method Result createAccess(array $args = [])
 * @method Promise createAccessAsync(array $args = [])
 * @method Result createAgreement(array $args = [])
 * @method Promise createAgreementAsync(array $args = [])
 * @method Result createConnector(array $args = [])
 * @method Promise createConnectorAsync(array $args = [])
 * @method Result createProfile(array $args = [])
 * @method Promise createProfileAsync(array $args = [])
 * @method Result createServer(array $args = [])
 * @method Promise createServerAsync(array $args = [])
 * @method Result createUser(array $args = [])
 * @method Promise createUserAsync(array $args = [])
 * @method Result createWorkflow(array $args = [])
 * @method Promise createWorkflowAsync(array $args = [])
 * @method Result deleteAccess(array $args = [])
 * @method Promise deleteAccessAsync(array $args = [])
 * @method Result deleteAgreement(array $args = [])
 * @method Promise deleteAgreementAsync(array $args = [])
 * @method Result deleteCertificate(array $args = [])
 * @method Promise deleteCertificateAsync(array $args = [])
 * @method Result deleteConnector(array $args = [])
 * @method Promise deleteConnectorAsync(array $args = [])
 * @method Result deleteHostKey(array $args = [])
 * @method Promise deleteHostKeyAsync(array $args = [])
 * @method Result deleteProfile(array $args = [])
 * @method Promise deleteProfileAsync(array $args = [])
 * @method Result deleteServer(array $args = [])
 * @method Promise deleteServerAsync(array $args = [])
 * @method Result deleteSshPublicKey(array $args = [])
 * @method Promise deleteSshPublicKeyAsync(array $args = [])
 * @method Result deleteUser(array $args = [])
 * @method Promise deleteUserAsync(array $args = [])
 * @method Result deleteWorkflow(array $args = [])
 * @method Promise deleteWorkflowAsync(array $args = [])
 * @method Result describeAccess(array $args = [])
 * @method Promise describeAccessAsync(array $args = [])
 * @method Result describeAgreement(array $args = [])
 * @method Promise describeAgreementAsync(array $args = [])
 * @method Result describeCertificate(array $args = [])
 * @method Promise describeCertificateAsync(array $args = [])
 * @method Result describeConnector(array $args = [])
 * @method Promise describeConnectorAsync(array $args = [])
 * @method Result describeExecution(array $args = [])
 * @method Promise describeExecutionAsync(array $args = [])
 * @method Result describeHostKey(array $args = [])
 * @method Promise describeHostKeyAsync(array $args = [])
 * @method Result describeProfile(array $args = [])
 * @method Promise describeProfileAsync(array $args = [])
 * @method Result describeSecurityPolicy(array $args = [])
 * @method Promise describeSecurityPolicyAsync(array $args = [])
 * @method Result describeServer(array $args = [])
 * @method Promise describeServerAsync(array $args = [])
 * @method Result describeUser(array $args = [])
 * @method Promise describeUserAsync(array $args = [])
 * @method Result describeWorkflow(array $args = [])
 * @method Promise describeWorkflowAsync(array $args = [])
 * @method Result importCertificate(array $args = [])
 * @method Promise importCertificateAsync(array $args = [])
 * @method Result importHostKey(array $args = [])
 * @method Promise importHostKeyAsync(array $args = [])
 * @method Result importSshPublicKey(array $args = [])
 * @method Promise importSshPublicKeyAsync(array $args = [])
 * @method Result listAccesses(array $args = [])
 * @method Promise listAccessesAsync(array $args = [])
 * @method Result listAgreements(array $args = [])
 * @method Promise listAgreementsAsync(array $args = [])
 * @method Result listCertificates(array $args = [])
 * @method Promise listCertificatesAsync(array $args = [])
 * @method Result listConnectors(array $args = [])
 * @method Promise listConnectorsAsync(array $args = [])
 * @method Result listExecutions(array $args = [])
 * @method Promise listExecutionsAsync(array $args = [])
 * @method Result listHostKeys(array $args = [])
 * @method Promise listHostKeysAsync(array $args = [])
 * @method Result listProfiles(array $args = [])
 * @method Promise listProfilesAsync(array $args = [])
 * @method Result listSecurityPolicies(array $args = [])
 * @method Promise listSecurityPoliciesAsync(array $args = [])
 * @method Result listServers(array $args = [])
 * @method Promise listServersAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result listUsers(array $args = [])
 * @method Promise listUsersAsync(array $args = [])
 * @method Result listWorkflows(array $args = [])
 * @method Promise listWorkflowsAsync(array $args = [])
 * @method Result sendWorkflowStepState(array $args = [])
 * @method Promise sendWorkflowStepStateAsync(array $args = [])
 * @method Result startFileTransfer(array $args = [])
 * @method Promise startFileTransferAsync(array $args = [])
 * @method Result startServer(array $args = [])
 * @method Promise startServerAsync(array $args = [])
 * @method Result stopServer(array $args = [])
 * @method Promise stopServerAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result testConnection(array $args = [])
 * @method Promise testConnectionAsync(array $args = [])
 * @method Result testIdentityProvider(array $args = [])
 * @method Promise testIdentityProviderAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateAccess(array $args = [])
 * @method Promise updateAccessAsync(array $args = [])
 * @method Result updateAgreement(array $args = [])
 * @method Promise updateAgreementAsync(array $args = [])
 * @method Result updateCertificate(array $args = [])
 * @method Promise updateCertificateAsync(array $args = [])
 * @method Result updateConnector(array $args = [])
 * @method Promise updateConnectorAsync(array $args = [])
 * @method Result updateHostKey(array $args = [])
 * @method Promise updateHostKeyAsync(array $args = [])
 * @method Result updateProfile(array $args = [])
 * @method Promise updateProfileAsync(array $args = [])
 * @method Result updateServer(array $args = [])
 * @method Promise updateServerAsync(array $args = [])
 * @method Result updateUser(array $args = [])
 * @method Promise updateUserAsync(array $args = [])
 */
class TransferClient extends AwsClient {}
