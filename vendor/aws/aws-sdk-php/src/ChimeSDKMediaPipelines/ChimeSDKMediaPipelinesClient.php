<?php
namespace Aws\ChimeSDKMediaPipelines;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon Chime SDK Media Pipelines** service.
 * @method Result createMediaCapturePipeline(array $args = [])
 * @method Promise createMediaCapturePipelineAsync(array $args = [])
 * @method Result createMediaConcatenationPipeline(array $args = [])
 * @method Promise createMediaConcatenationPipelineAsync(array $args = [])
 * @method Result createMediaInsightsPipeline(array $args = [])
 * @method Promise createMediaInsightsPipelineAsync(array $args = [])
 * @method Result createMediaInsightsPipelineConfiguration(array $args = [])
 * @method Promise createMediaInsightsPipelineConfigurationAsync(array $args = [])
 * @method Result createMediaLiveConnectorPipeline(array $args = [])
 * @method Promise createMediaLiveConnectorPipelineAsync(array $args = [])
 * @method Result createMediaPipelineKinesisVideoStreamPool(array $args = [])
 * @method Promise createMediaPipelineKinesisVideoStreamPoolAsync(array $args = [])
 * @method Result createMediaStreamPipeline(array $args = [])
 * @method Promise createMediaStreamPipelineAsync(array $args = [])
 * @method Result deleteMediaCapturePipeline(array $args = [])
 * @method Promise deleteMediaCapturePipelineAsync(array $args = [])
 * @method Result deleteMediaInsightsPipelineConfiguration(array $args = [])
 * @method Promise deleteMediaInsightsPipelineConfigurationAsync(array $args = [])
 * @method Result deleteMediaPipeline(array $args = [])
 * @method Promise deleteMediaPipelineAsync(array $args = [])
 * @method Result deleteMediaPipelineKinesisVideoStreamPool(array $args = [])
 * @method Promise deleteMediaPipelineKinesisVideoStreamPoolAsync(array $args = [])
 * @method Result getMediaCapturePipeline(array $args = [])
 * @method Promise getMediaCapturePipelineAsync(array $args = [])
 * @method Result getMediaInsightsPipelineConfiguration(array $args = [])
 * @method Promise getMediaInsightsPipelineConfigurationAsync(array $args = [])
 * @method Result getMediaPipeline(array $args = [])
 * @method Promise getMediaPipelineAsync(array $args = [])
 * @method Result getMediaPipelineKinesisVideoStreamPool(array $args = [])
 * @method Promise getMediaPipelineKinesisVideoStreamPoolAsync(array $args = [])
 * @method Result getSpeakerSearchTask(array $args = [])
 * @method Promise getSpeakerSearchTaskAsync(array $args = [])
 * @method Result getVoiceToneAnalysisTask(array $args = [])
 * @method Promise getVoiceToneAnalysisTaskAsync(array $args = [])
 * @method Result listMediaCapturePipelines(array $args = [])
 * @method Promise listMediaCapturePipelinesAsync(array $args = [])
 * @method Result listMediaInsightsPipelineConfigurations(array $args = [])
 * @method Promise listMediaInsightsPipelineConfigurationsAsync(array $args = [])
 * @method Result listMediaPipelineKinesisVideoStreamPools(array $args = [])
 * @method Promise listMediaPipelineKinesisVideoStreamPoolsAsync(array $args = [])
 * @method Result listMediaPipelines(array $args = [])
 * @method Promise listMediaPipelinesAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result startSpeakerSearchTask(array $args = [])
 * @method Promise startSpeakerSearchTaskAsync(array $args = [])
 * @method Result startVoiceToneAnalysisTask(array $args = [])
 * @method Promise startVoiceToneAnalysisTaskAsync(array $args = [])
 * @method Result stopSpeakerSearchTask(array $args = [])
 * @method Promise stopSpeakerSearchTaskAsync(array $args = [])
 * @method Result stopVoiceToneAnalysisTask(array $args = [])
 * @method Promise stopVoiceToneAnalysisTaskAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateMediaInsightsPipelineConfiguration(array $args = [])
 * @method Promise updateMediaInsightsPipelineConfigurationAsync(array $args = [])
 * @method Result updateMediaInsightsPipelineStatus(array $args = [])
 * @method Promise updateMediaInsightsPipelineStatusAsync(array $args = [])
 * @method Result updateMediaPipelineKinesisVideoStreamPool(array $args = [])
 * @method Promise updateMediaPipelineKinesisVideoStreamPoolAsync(array $args = [])
 */
class ChimeSDKMediaPipelinesClient extends AwsClient {}
