<?php
namespace Aws\SageMaker;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon SageMaker Service** service.
 * @method Result addAssociation(array $args = [])
 * @method Promise addAssociationAsync(array $args = [])
 * @method Result addTags(array $args = [])
 * @method Promise addTagsAsync(array $args = [])
 * @method Result associateTrialComponent(array $args = [])
 * @method Promise associateTrialComponentAsync(array $args = [])
 * @method Result batchDescribeModelPackage(array $args = [])
 * @method Promise batchDescribeModelPackageAsync(array $args = [])
 * @method Result createAction(array $args = [])
 * @method Promise createActionAsync(array $args = [])
 * @method Result createAlgorithm(array $args = [])
 * @method Promise createAlgorithmAsync(array $args = [])
 * @method Result createApp(array $args = [])
 * @method Promise createAppAsync(array $args = [])
 * @method Result createAppImageConfig(array $args = [])
 * @method Promise createAppImageConfigAsync(array $args = [])
 * @method Result createArtifact(array $args = [])
 * @method Promise createArtifactAsync(array $args = [])
 * @method Result createAutoMLJob(array $args = [])
 * @method Promise createAutoMLJobAsync(array $args = [])
 * @method Result createAutoMLJobV2(array $args = [])
 * @method Promise createAutoMLJobV2Async(array $args = [])
 * @method Result createCluster(array $args = [])
 * @method Promise createClusterAsync(array $args = [])
 * @method Result createCodeRepository(array $args = [])
 * @method Promise createCodeRepositoryAsync(array $args = [])
 * @method Result createCompilationJob(array $args = [])
 * @method Promise createCompilationJobAsync(array $args = [])
 * @method Result createContext(array $args = [])
 * @method Promise createContextAsync(array $args = [])
 * @method Result createDataQualityJobDefinition(array $args = [])
 * @method Promise createDataQualityJobDefinitionAsync(array $args = [])
 * @method Result createDeviceFleet(array $args = [])
 * @method Promise createDeviceFleetAsync(array $args = [])
 * @method Result createDomain(array $args = [])
 * @method Promise createDomainAsync(array $args = [])
 * @method Result createEdgeDeploymentPlan(array $args = [])
 * @method Promise createEdgeDeploymentPlanAsync(array $args = [])
 * @method Result createEdgeDeploymentStage(array $args = [])
 * @method Promise createEdgeDeploymentStageAsync(array $args = [])
 * @method Result createEdgePackagingJob(array $args = [])
 * @method Promise createEdgePackagingJobAsync(array $args = [])
 * @method Result createEndpoint(array $args = [])
 * @method Promise createEndpointAsync(array $args = [])
 * @method Result createEndpointConfig(array $args = [])
 * @method Promise createEndpointConfigAsync(array $args = [])
 * @method Result createExperiment(array $args = [])
 * @method Promise createExperimentAsync(array $args = [])
 * @method Result createFeatureGroup(array $args = [])
 * @method Promise createFeatureGroupAsync(array $args = [])
 * @method Result createFlowDefinition(array $args = [])
 * @method Promise createFlowDefinitionAsync(array $args = [])
 * @method Result createHub(array $args = [])
 * @method Promise createHubAsync(array $args = [])
 * @method Result createHumanTaskUi(array $args = [])
 * @method Promise createHumanTaskUiAsync(array $args = [])
 * @method Result createHyperParameterTuningJob(array $args = [])
 * @method Promise createHyperParameterTuningJobAsync(array $args = [])
 * @method Result createImage(array $args = [])
 * @method Promise createImageAsync(array $args = [])
 * @method Result createImageVersion(array $args = [])
 * @method Promise createImageVersionAsync(array $args = [])
 * @method Result createInferenceComponent(array $args = [])
 * @method Promise createInferenceComponentAsync(array $args = [])
 * @method Result createInferenceExperiment(array $args = [])
 * @method Promise createInferenceExperimentAsync(array $args = [])
 * @method Result createInferenceRecommendationsJob(array $args = [])
 * @method Promise createInferenceRecommendationsJobAsync(array $args = [])
 * @method Result createLabelingJob(array $args = [])
 * @method Promise createLabelingJobAsync(array $args = [])
 * @method Result createModel(array $args = [])
 * @method Promise createModelAsync(array $args = [])
 * @method Result createModelBiasJobDefinition(array $args = [])
 * @method Promise createModelBiasJobDefinitionAsync(array $args = [])
 * @method Result createModelCard(array $args = [])
 * @method Promise createModelCardAsync(array $args = [])
 * @method Result createModelCardExportJob(array $args = [])
 * @method Promise createModelCardExportJobAsync(array $args = [])
 * @method Result createModelExplainabilityJobDefinition(array $args = [])
 * @method Promise createModelExplainabilityJobDefinitionAsync(array $args = [])
 * @method Result createModelPackage(array $args = [])
 * @method Promise createModelPackageAsync(array $args = [])
 * @method Result createModelPackageGroup(array $args = [])
 * @method Promise createModelPackageGroupAsync(array $args = [])
 * @method Result createModelQualityJobDefinition(array $args = [])
 * @method Promise createModelQualityJobDefinitionAsync(array $args = [])
 * @method Result createMonitoringSchedule(array $args = [])
 * @method Promise createMonitoringScheduleAsync(array $args = [])
 * @method Result createNotebookInstance(array $args = [])
 * @method Promise createNotebookInstanceAsync(array $args = [])
 * @method Result createNotebookInstanceLifecycleConfig(array $args = [])
 * @method Promise createNotebookInstanceLifecycleConfigAsync(array $args = [])
 * @method Result createPipeline(array $args = [])
 * @method Promise createPipelineAsync(array $args = [])
 * @method Result createPresignedDomainUrl(array $args = [])
 * @method Promise createPresignedDomainUrlAsync(array $args = [])
 * @method Result createPresignedNotebookInstanceUrl(array $args = [])
 * @method Promise createPresignedNotebookInstanceUrlAsync(array $args = [])
 * @method Result createProcessingJob(array $args = [])
 * @method Promise createProcessingJobAsync(array $args = [])
 * @method Result createProject(array $args = [])
 * @method Promise createProjectAsync(array $args = [])
 * @method Result createSpace(array $args = [])
 * @method Promise createSpaceAsync(array $args = [])
 * @method Result createStudioLifecycleConfig(array $args = [])
 * @method Promise createStudioLifecycleConfigAsync(array $args = [])
 * @method Result createTrainingJob(array $args = [])
 * @method Promise createTrainingJobAsync(array $args = [])
 * @method Result createTransformJob(array $args = [])
 * @method Promise createTransformJobAsync(array $args = [])
 * @method Result createTrial(array $args = [])
 * @method Promise createTrialAsync(array $args = [])
 * @method Result createTrialComponent(array $args = [])
 * @method Promise createTrialComponentAsync(array $args = [])
 * @method Result createUserProfile(array $args = [])
 * @method Promise createUserProfileAsync(array $args = [])
 * @method Result createWorkforce(array $args = [])
 * @method Promise createWorkforceAsync(array $args = [])
 * @method Result createWorkteam(array $args = [])
 * @method Promise createWorkteamAsync(array $args = [])
 * @method Result deleteAction(array $args = [])
 * @method Promise deleteActionAsync(array $args = [])
 * @method Result deleteAlgorithm(array $args = [])
 * @method Promise deleteAlgorithmAsync(array $args = [])
 * @method Result deleteApp(array $args = [])
 * @method Promise deleteAppAsync(array $args = [])
 * @method Result deleteAppImageConfig(array $args = [])
 * @method Promise deleteAppImageConfigAsync(array $args = [])
 * @method Result deleteArtifact(array $args = [])
 * @method Promise deleteArtifactAsync(array $args = [])
 * @method Result deleteAssociation(array $args = [])
 * @method Promise deleteAssociationAsync(array $args = [])
 * @method Result deleteCluster(array $args = [])
 * @method Promise deleteClusterAsync(array $args = [])
 * @method Result deleteCodeRepository(array $args = [])
 * @method Promise deleteCodeRepositoryAsync(array $args = [])
 * @method Result deleteCompilationJob(array $args = [])
 * @method Promise deleteCompilationJobAsync(array $args = [])
 * @method Result deleteContext(array $args = [])
 * @method Promise deleteContextAsync(array $args = [])
 * @method Result deleteDataQualityJobDefinition(array $args = [])
 * @method Promise deleteDataQualityJobDefinitionAsync(array $args = [])
 * @method Result deleteDeviceFleet(array $args = [])
 * @method Promise deleteDeviceFleetAsync(array $args = [])
 * @method Result deleteDomain(array $args = [])
 * @method Promise deleteDomainAsync(array $args = [])
 * @method Result deleteEdgeDeploymentPlan(array $args = [])
 * @method Promise deleteEdgeDeploymentPlanAsync(array $args = [])
 * @method Result deleteEdgeDeploymentStage(array $args = [])
 * @method Promise deleteEdgeDeploymentStageAsync(array $args = [])
 * @method Result deleteEndpoint(array $args = [])
 * @method Promise deleteEndpointAsync(array $args = [])
 * @method Result deleteEndpointConfig(array $args = [])
 * @method Promise deleteEndpointConfigAsync(array $args = [])
 * @method Result deleteExperiment(array $args = [])
 * @method Promise deleteExperimentAsync(array $args = [])
 * @method Result deleteFeatureGroup(array $args = [])
 * @method Promise deleteFeatureGroupAsync(array $args = [])
 * @method Result deleteFlowDefinition(array $args = [])
 * @method Promise deleteFlowDefinitionAsync(array $args = [])
 * @method Result deleteHub(array $args = [])
 * @method Promise deleteHubAsync(array $args = [])
 * @method Result deleteHubContent(array $args = [])
 * @method Promise deleteHubContentAsync(array $args = [])
 * @method Result deleteHumanTaskUi(array $args = [])
 * @method Promise deleteHumanTaskUiAsync(array $args = [])
 * @method Result deleteHyperParameterTuningJob(array $args = [])
 * @method Promise deleteHyperParameterTuningJobAsync(array $args = [])
 * @method Result deleteImage(array $args = [])
 * @method Promise deleteImageAsync(array $args = [])
 * @method Result deleteImageVersion(array $args = [])
 * @method Promise deleteImageVersionAsync(array $args = [])
 * @method Result deleteInferenceComponent(array $args = [])
 * @method Promise deleteInferenceComponentAsync(array $args = [])
 * @method Result deleteInferenceExperiment(array $args = [])
 * @method Promise deleteInferenceExperimentAsync(array $args = [])
 * @method Result deleteModel(array $args = [])
 * @method Promise deleteModelAsync(array $args = [])
 * @method Result deleteModelBiasJobDefinition(array $args = [])
 * @method Promise deleteModelBiasJobDefinitionAsync(array $args = [])
 * @method Result deleteModelCard(array $args = [])
 * @method Promise deleteModelCardAsync(array $args = [])
 * @method Result deleteModelExplainabilityJobDefinition(array $args = [])
 * @method Promise deleteModelExplainabilityJobDefinitionAsync(array $args = [])
 * @method Result deleteModelPackage(array $args = [])
 * @method Promise deleteModelPackageAsync(array $args = [])
 * @method Result deleteModelPackageGroup(array $args = [])
 * @method Promise deleteModelPackageGroupAsync(array $args = [])
 * @method Result deleteModelPackageGroupPolicy(array $args = [])
 * @method Promise deleteModelPackageGroupPolicyAsync(array $args = [])
 * @method Result deleteModelQualityJobDefinition(array $args = [])
 * @method Promise deleteModelQualityJobDefinitionAsync(array $args = [])
 * @method Result deleteMonitoringSchedule(array $args = [])
 * @method Promise deleteMonitoringScheduleAsync(array $args = [])
 * @method Result deleteNotebookInstance(array $args = [])
 * @method Promise deleteNotebookInstanceAsync(array $args = [])
 * @method Result deleteNotebookInstanceLifecycleConfig(array $args = [])
 * @method Promise deleteNotebookInstanceLifecycleConfigAsync(array $args = [])
 * @method Result deletePipeline(array $args = [])
 * @method Promise deletePipelineAsync(array $args = [])
 * @method Result deleteProject(array $args = [])
 * @method Promise deleteProjectAsync(array $args = [])
 * @method Result deleteSpace(array $args = [])
 * @method Promise deleteSpaceAsync(array $args = [])
 * @method Result deleteStudioLifecycleConfig(array $args = [])
 * @method Promise deleteStudioLifecycleConfigAsync(array $args = [])
 * @method Result deleteTags(array $args = [])
 * @method Promise deleteTagsAsync(array $args = [])
 * @method Result deleteTrial(array $args = [])
 * @method Promise deleteTrialAsync(array $args = [])
 * @method Result deleteTrialComponent(array $args = [])
 * @method Promise deleteTrialComponentAsync(array $args = [])
 * @method Result deleteUserProfile(array $args = [])
 * @method Promise deleteUserProfileAsync(array $args = [])
 * @method Result deleteWorkforce(array $args = [])
 * @method Promise deleteWorkforceAsync(array $args = [])
 * @method Result deleteWorkteam(array $args = [])
 * @method Promise deleteWorkteamAsync(array $args = [])
 * @method Result deregisterDevices(array $args = [])
 * @method Promise deregisterDevicesAsync(array $args = [])
 * @method Result describeAction(array $args = [])
 * @method Promise describeActionAsync(array $args = [])
 * @method Result describeAlgorithm(array $args = [])
 * @method Promise describeAlgorithmAsync(array $args = [])
 * @method Result describeApp(array $args = [])
 * @method Promise describeAppAsync(array $args = [])
 * @method Result describeAppImageConfig(array $args = [])
 * @method Promise describeAppImageConfigAsync(array $args = [])
 * @method Result describeArtifact(array $args = [])
 * @method Promise describeArtifactAsync(array $args = [])
 * @method Result describeAutoMLJob(array $args = [])
 * @method Promise describeAutoMLJobAsync(array $args = [])
 * @method Result describeAutoMLJobV2(array $args = [])
 * @method Promise describeAutoMLJobV2Async(array $args = [])
 * @method Result describeCluster(array $args = [])
 * @method Promise describeClusterAsync(array $args = [])
 * @method Result describeClusterNode(array $args = [])
 * @method Promise describeClusterNodeAsync(array $args = [])
 * @method Result describeCodeRepository(array $args = [])
 * @method Promise describeCodeRepositoryAsync(array $args = [])
 * @method Result describeCompilationJob(array $args = [])
 * @method Promise describeCompilationJobAsync(array $args = [])
 * @method Result describeContext(array $args = [])
 * @method Promise describeContextAsync(array $args = [])
 * @method Result describeDataQualityJobDefinition(array $args = [])
 * @method Promise describeDataQualityJobDefinitionAsync(array $args = [])
 * @method Result describeDevice(array $args = [])
 * @method Promise describeDeviceAsync(array $args = [])
 * @method Result describeDeviceFleet(array $args = [])
 * @method Promise describeDeviceFleetAsync(array $args = [])
 * @method Result describeDomain(array $args = [])
 * @method Promise describeDomainAsync(array $args = [])
 * @method Result describeEdgeDeploymentPlan(array $args = [])
 * @method Promise describeEdgeDeploymentPlanAsync(array $args = [])
 * @method Result describeEdgePackagingJob(array $args = [])
 * @method Promise describeEdgePackagingJobAsync(array $args = [])
 * @method Result describeEndpoint(array $args = [])
 * @method Promise describeEndpointAsync(array $args = [])
 * @method Result describeEndpointConfig(array $args = [])
 * @method Promise describeEndpointConfigAsync(array $args = [])
 * @method Result describeExperiment(array $args = [])
 * @method Promise describeExperimentAsync(array $args = [])
 * @method Result describeFeatureGroup(array $args = [])
 * @method Promise describeFeatureGroupAsync(array $args = [])
 * @method Result describeFeatureMetadata(array $args = [])
 * @method Promise describeFeatureMetadataAsync(array $args = [])
 * @method Result describeFlowDefinition(array $args = [])
 * @method Promise describeFlowDefinitionAsync(array $args = [])
 * @method Result describeHub(array $args = [])
 * @method Promise describeHubAsync(array $args = [])
 * @method Result describeHubContent(array $args = [])
 * @method Promise describeHubContentAsync(array $args = [])
 * @method Result describeHumanTaskUi(array $args = [])
 * @method Promise describeHumanTaskUiAsync(array $args = [])
 * @method Result describeHyperParameterTuningJob(array $args = [])
 * @method Promise describeHyperParameterTuningJobAsync(array $args = [])
 * @method Result describeImage(array $args = [])
 * @method Promise describeImageAsync(array $args = [])
 * @method Result describeImageVersion(array $args = [])
 * @method Promise describeImageVersionAsync(array $args = [])
 * @method Result describeInferenceComponent(array $args = [])
 * @method Promise describeInferenceComponentAsync(array $args = [])
 * @method Result describeInferenceExperiment(array $args = [])
 * @method Promise describeInferenceExperimentAsync(array $args = [])
 * @method Result describeInferenceRecommendationsJob(array $args = [])
 * @method Promise describeInferenceRecommendationsJobAsync(array $args = [])
 * @method Result describeLabelingJob(array $args = [])
 * @method Promise describeLabelingJobAsync(array $args = [])
 * @method Result describeLineageGroup(array $args = [])
 * @method Promise describeLineageGroupAsync(array $args = [])
 * @method Result describeModel(array $args = [])
 * @method Promise describeModelAsync(array $args = [])
 * @method Result describeModelBiasJobDefinition(array $args = [])
 * @method Promise describeModelBiasJobDefinitionAsync(array $args = [])
 * @method Result describeModelCard(array $args = [])
 * @method Promise describeModelCardAsync(array $args = [])
 * @method Result describeModelCardExportJob(array $args = [])
 * @method Promise describeModelCardExportJobAsync(array $args = [])
 * @method Result describeModelExplainabilityJobDefinition(array $args = [])
 * @method Promise describeModelExplainabilityJobDefinitionAsync(array $args = [])
 * @method Result describeModelPackage(array $args = [])
 * @method Promise describeModelPackageAsync(array $args = [])
 * @method Result describeModelPackageGroup(array $args = [])
 * @method Promise describeModelPackageGroupAsync(array $args = [])
 * @method Result describeModelQualityJobDefinition(array $args = [])
 * @method Promise describeModelQualityJobDefinitionAsync(array $args = [])
 * @method Result describeMonitoringSchedule(array $args = [])
 * @method Promise describeMonitoringScheduleAsync(array $args = [])
 * @method Result describeNotebookInstance(array $args = [])
 * @method Promise describeNotebookInstanceAsync(array $args = [])
 * @method Result describeNotebookInstanceLifecycleConfig(array $args = [])
 * @method Promise describeNotebookInstanceLifecycleConfigAsync(array $args = [])
 * @method Result describePipeline(array $args = [])
 * @method Promise describePipelineAsync(array $args = [])
 * @method Result describePipelineDefinitionForExecution(array $args = [])
 * @method Promise describePipelineDefinitionForExecutionAsync(array $args = [])
 * @method Result describePipelineExecution(array $args = [])
 * @method Promise describePipelineExecutionAsync(array $args = [])
 * @method Result describeProcessingJob(array $args = [])
 * @method Promise describeProcessingJobAsync(array $args = [])
 * @method Result describeProject(array $args = [])
 * @method Promise describeProjectAsync(array $args = [])
 * @method Result describeSpace(array $args = [])
 * @method Promise describeSpaceAsync(array $args = [])
 * @method Result describeStudioLifecycleConfig(array $args = [])
 * @method Promise describeStudioLifecycleConfigAsync(array $args = [])
 * @method Result describeSubscribedWorkteam(array $args = [])
 * @method Promise describeSubscribedWorkteamAsync(array $args = [])
 * @method Result describeTrainingJob(array $args = [])
 * @method Promise describeTrainingJobAsync(array $args = [])
 * @method Result describeTransformJob(array $args = [])
 * @method Promise describeTransformJobAsync(array $args = [])
 * @method Result describeTrial(array $args = [])
 * @method Promise describeTrialAsync(array $args = [])
 * @method Result describeTrialComponent(array $args = [])
 * @method Promise describeTrialComponentAsync(array $args = [])
 * @method Result describeUserProfile(array $args = [])
 * @method Promise describeUserProfileAsync(array $args = [])
 * @method Result describeWorkforce(array $args = [])
 * @method Promise describeWorkforceAsync(array $args = [])
 * @method Result describeWorkteam(array $args = [])
 * @method Promise describeWorkteamAsync(array $args = [])
 * @method Result disableSagemakerServicecatalogPortfolio(array $args = [])
 * @method Promise disableSagemakerServicecatalogPortfolioAsync(array $args = [])
 * @method Result disassociateTrialComponent(array $args = [])
 * @method Promise disassociateTrialComponentAsync(array $args = [])
 * @method Result enableSagemakerServicecatalogPortfolio(array $args = [])
 * @method Promise enableSagemakerServicecatalogPortfolioAsync(array $args = [])
 * @method Result getDeviceFleetReport(array $args = [])
 * @method Promise getDeviceFleetReportAsync(array $args = [])
 * @method Result getLineageGroupPolicy(array $args = [])
 * @method Promise getLineageGroupPolicyAsync(array $args = [])
 * @method Result getModelPackageGroupPolicy(array $args = [])
 * @method Promise getModelPackageGroupPolicyAsync(array $args = [])
 * @method Result getSagemakerServicecatalogPortfolioStatus(array $args = [])
 * @method Promise getSagemakerServicecatalogPortfolioStatusAsync(array $args = [])
 * @method Result getScalingConfigurationRecommendation(array $args = [])
 * @method Promise getScalingConfigurationRecommendationAsync(array $args = [])
 * @method Result getSearchSuggestions(array $args = [])
 * @method Promise getSearchSuggestionsAsync(array $args = [])
 * @method Result importHubContent(array $args = [])
 * @method Promise importHubContentAsync(array $args = [])
 * @method Result listActions(array $args = [])
 * @method Promise listActionsAsync(array $args = [])
 * @method Result listAlgorithms(array $args = [])
 * @method Promise listAlgorithmsAsync(array $args = [])
 * @method Result listAliases(array $args = [])
 * @method Promise listAliasesAsync(array $args = [])
 * @method Result listAppImageConfigs(array $args = [])
 * @method Promise listAppImageConfigsAsync(array $args = [])
 * @method Result listApps(array $args = [])
 * @method Promise listAppsAsync(array $args = [])
 * @method Result listArtifacts(array $args = [])
 * @method Promise listArtifactsAsync(array $args = [])
 * @method Result listAssociations(array $args = [])
 * @method Promise listAssociationsAsync(array $args = [])
 * @method Result listAutoMLJobs(array $args = [])
 * @method Promise listAutoMLJobsAsync(array $args = [])
 * @method Result listCandidatesForAutoMLJob(array $args = [])
 * @method Promise listCandidatesForAutoMLJobAsync(array $args = [])
 * @method Result listClusterNodes(array $args = [])
 * @method Promise listClusterNodesAsync(array $args = [])
 * @method Result listClusters(array $args = [])
 * @method Promise listClustersAsync(array $args = [])
 * @method Result listCodeRepositories(array $args = [])
 * @method Promise listCodeRepositoriesAsync(array $args = [])
 * @method Result listCompilationJobs(array $args = [])
 * @method Promise listCompilationJobsAsync(array $args = [])
 * @method Result listContexts(array $args = [])
 * @method Promise listContextsAsync(array $args = [])
 * @method Result listDataQualityJobDefinitions(array $args = [])
 * @method Promise listDataQualityJobDefinitionsAsync(array $args = [])
 * @method Result listDeviceFleets(array $args = [])
 * @method Promise listDeviceFleetsAsync(array $args = [])
 * @method Result listDevices(array $args = [])
 * @method Promise listDevicesAsync(array $args = [])
 * @method Result listDomains(array $args = [])
 * @method Promise listDomainsAsync(array $args = [])
 * @method Result listEdgeDeploymentPlans(array $args = [])
 * @method Promise listEdgeDeploymentPlansAsync(array $args = [])
 * @method Result listEdgePackagingJobs(array $args = [])
 * @method Promise listEdgePackagingJobsAsync(array $args = [])
 * @method Result listEndpointConfigs(array $args = [])
 * @method Promise listEndpointConfigsAsync(array $args = [])
 * @method Result listEndpoints(array $args = [])
 * @method Promise listEndpointsAsync(array $args = [])
 * @method Result listExperiments(array $args = [])
 * @method Promise listExperimentsAsync(array $args = [])
 * @method Result listFeatureGroups(array $args = [])
 * @method Promise listFeatureGroupsAsync(array $args = [])
 * @method Result listFlowDefinitions(array $args = [])
 * @method Promise listFlowDefinitionsAsync(array $args = [])
 * @method Result listHubContentVersions(array $args = [])
 * @method Promise listHubContentVersionsAsync(array $args = [])
 * @method Result listHubContents(array $args = [])
 * @method Promise listHubContentsAsync(array $args = [])
 * @method Result listHubs(array $args = [])
 * @method Promise listHubsAsync(array $args = [])
 * @method Result listHumanTaskUis(array $args = [])
 * @method Promise listHumanTaskUisAsync(array $args = [])
 * @method Result listHyperParameterTuningJobs(array $args = [])
 * @method Promise listHyperParameterTuningJobsAsync(array $args = [])
 * @method Result listImageVersions(array $args = [])
 * @method Promise listImageVersionsAsync(array $args = [])
 * @method Result listImages(array $args = [])
 * @method Promise listImagesAsync(array $args = [])
 * @method Result listInferenceComponents(array $args = [])
 * @method Promise listInferenceComponentsAsync(array $args = [])
 * @method Result listInferenceExperiments(array $args = [])
 * @method Promise listInferenceExperimentsAsync(array $args = [])
 * @method Result listInferenceRecommendationsJobSteps(array $args = [])
 * @method Promise listInferenceRecommendationsJobStepsAsync(array $args = [])
 * @method Result listInferenceRecommendationsJobs(array $args = [])
 * @method Promise listInferenceRecommendationsJobsAsync(array $args = [])
 * @method Result listLabelingJobs(array $args = [])
 * @method Promise listLabelingJobsAsync(array $args = [])
 * @method Result listLabelingJobsForWorkteam(array $args = [])
 * @method Promise listLabelingJobsForWorkteamAsync(array $args = [])
 * @method Result listLineageGroups(array $args = [])
 * @method Promise listLineageGroupsAsync(array $args = [])
 * @method Result listModelBiasJobDefinitions(array $args = [])
 * @method Promise listModelBiasJobDefinitionsAsync(array $args = [])
 * @method Result listModelCardExportJobs(array $args = [])
 * @method Promise listModelCardExportJobsAsync(array $args = [])
 * @method Result listModelCardVersions(array $args = [])
 * @method Promise listModelCardVersionsAsync(array $args = [])
 * @method Result listModelCards(array $args = [])
 * @method Promise listModelCardsAsync(array $args = [])
 * @method Result listModelExplainabilityJobDefinitions(array $args = [])
 * @method Promise listModelExplainabilityJobDefinitionsAsync(array $args = [])
 * @method Result listModelMetadata(array $args = [])
 * @method Promise listModelMetadataAsync(array $args = [])
 * @method Result listModelPackageGroups(array $args = [])
 * @method Promise listModelPackageGroupsAsync(array $args = [])
 * @method Result listModelPackages(array $args = [])
 * @method Promise listModelPackagesAsync(array $args = [])
 * @method Result listModelQualityJobDefinitions(array $args = [])
 * @method Promise listModelQualityJobDefinitionsAsync(array $args = [])
 * @method Result listModels(array $args = [])
 * @method Promise listModelsAsync(array $args = [])
 * @method Result listMonitoringAlertHistory(array $args = [])
 * @method Promise listMonitoringAlertHistoryAsync(array $args = [])
 * @method Result listMonitoringAlerts(array $args = [])
 * @method Promise listMonitoringAlertsAsync(array $args = [])
 * @method Result listMonitoringExecutions(array $args = [])
 * @method Promise listMonitoringExecutionsAsync(array $args = [])
 * @method Result listMonitoringSchedules(array $args = [])
 * @method Promise listMonitoringSchedulesAsync(array $args = [])
 * @method Result listNotebookInstanceLifecycleConfigs(array $args = [])
 * @method Promise listNotebookInstanceLifecycleConfigsAsync(array $args = [])
 * @method Result listNotebookInstances(array $args = [])
 * @method Promise listNotebookInstancesAsync(array $args = [])
 * @method Result listPipelineExecutionSteps(array $args = [])
 * @method Promise listPipelineExecutionStepsAsync(array $args = [])
 * @method Result listPipelineExecutions(array $args = [])
 * @method Promise listPipelineExecutionsAsync(array $args = [])
 * @method Result listPipelineParametersForExecution(array $args = [])
 * @method Promise listPipelineParametersForExecutionAsync(array $args = [])
 * @method Result listPipelines(array $args = [])
 * @method Promise listPipelinesAsync(array $args = [])
 * @method Result listProcessingJobs(array $args = [])
 * @method Promise listProcessingJobsAsync(array $args = [])
 * @method Result listProjects(array $args = [])
 * @method Promise listProjectsAsync(array $args = [])
 * @method Result listResourceCatalogs(array $args = [])
 * @method Promise listResourceCatalogsAsync(array $args = [])
 * @method Result listSpaces(array $args = [])
 * @method Promise listSpacesAsync(array $args = [])
 * @method Result listStageDevices(array $args = [])
 * @method Promise listStageDevicesAsync(array $args = [])
 * @method Result listStudioLifecycleConfigs(array $args = [])
 * @method Promise listStudioLifecycleConfigsAsync(array $args = [])
 * @method Result listSubscribedWorkteams(array $args = [])
 * @method Promise listSubscribedWorkteamsAsync(array $args = [])
 * @method Result listTags(array $args = [])
 * @method Promise listTagsAsync(array $args = [])
 * @method Result listTrainingJobs(array $args = [])
 * @method Promise listTrainingJobsAsync(array $args = [])
 * @method Result listTrainingJobsForHyperParameterTuningJob(array $args = [])
 * @method Promise listTrainingJobsForHyperParameterTuningJobAsync(array $args = [])
 * @method Result listTransformJobs(array $args = [])
 * @method Promise listTransformJobsAsync(array $args = [])
 * @method Result listTrialComponents(array $args = [])
 * @method Promise listTrialComponentsAsync(array $args = [])
 * @method Result listTrials(array $args = [])
 * @method Promise listTrialsAsync(array $args = [])
 * @method Result listUserProfiles(array $args = [])
 * @method Promise listUserProfilesAsync(array $args = [])
 * @method Result listWorkforces(array $args = [])
 * @method Promise listWorkforcesAsync(array $args = [])
 * @method Result listWorkteams(array $args = [])
 * @method Promise listWorkteamsAsync(array $args = [])
 * @method Result putModelPackageGroupPolicy(array $args = [])
 * @method Promise putModelPackageGroupPolicyAsync(array $args = [])
 * @method Result queryLineage(array $args = [])
 * @method Promise queryLineageAsync(array $args = [])
 * @method Result registerDevices(array $args = [])
 * @method Promise registerDevicesAsync(array $args = [])
 * @method Result renderUiTemplate(array $args = [])
 * @method Promise renderUiTemplateAsync(array $args = [])
 * @method Result retryPipelineExecution(array $args = [])
 * @method Promise retryPipelineExecutionAsync(array $args = [])
 * @method Result search(array $args = [])
 * @method Promise searchAsync(array $args = [])
 * @method Result sendPipelineExecutionStepFailure(array $args = [])
 * @method Promise sendPipelineExecutionStepFailureAsync(array $args = [])
 * @method Result sendPipelineExecutionStepSuccess(array $args = [])
 * @method Promise sendPipelineExecutionStepSuccessAsync(array $args = [])
 * @method Result startEdgeDeploymentStage(array $args = [])
 * @method Promise startEdgeDeploymentStageAsync(array $args = [])
 * @method Result startInferenceExperiment(array $args = [])
 * @method Promise startInferenceExperimentAsync(array $args = [])
 * @method Result startMonitoringSchedule(array $args = [])
 * @method Promise startMonitoringScheduleAsync(array $args = [])
 * @method Result startNotebookInstance(array $args = [])
 * @method Promise startNotebookInstanceAsync(array $args = [])
 * @method Result startPipelineExecution(array $args = [])
 * @method Promise startPipelineExecutionAsync(array $args = [])
 * @method Result stopAutoMLJob(array $args = [])
 * @method Promise stopAutoMLJobAsync(array $args = [])
 * @method Result stopCompilationJob(array $args = [])
 * @method Promise stopCompilationJobAsync(array $args = [])
 * @method Result stopEdgeDeploymentStage(array $args = [])
 * @method Promise stopEdgeDeploymentStageAsync(array $args = [])
 * @method Result stopEdgePackagingJob(array $args = [])
 * @method Promise stopEdgePackagingJobAsync(array $args = [])
 * @method Result stopHyperParameterTuningJob(array $args = [])
 * @method Promise stopHyperParameterTuningJobAsync(array $args = [])
 * @method Result stopInferenceExperiment(array $args = [])
 * @method Promise stopInferenceExperimentAsync(array $args = [])
 * @method Result stopInferenceRecommendationsJob(array $args = [])
 * @method Promise stopInferenceRecommendationsJobAsync(array $args = [])
 * @method Result stopLabelingJob(array $args = [])
 * @method Promise stopLabelingJobAsync(array $args = [])
 * @method Result stopMonitoringSchedule(array $args = [])
 * @method Promise stopMonitoringScheduleAsync(array $args = [])
 * @method Result stopNotebookInstance(array $args = [])
 * @method Promise stopNotebookInstanceAsync(array $args = [])
 * @method Result stopPipelineExecution(array $args = [])
 * @method Promise stopPipelineExecutionAsync(array $args = [])
 * @method Result stopProcessingJob(array $args = [])
 * @method Promise stopProcessingJobAsync(array $args = [])
 * @method Result stopTrainingJob(array $args = [])
 * @method Promise stopTrainingJobAsync(array $args = [])
 * @method Result stopTransformJob(array $args = [])
 * @method Promise stopTransformJobAsync(array $args = [])
 * @method Result updateAction(array $args = [])
 * @method Promise updateActionAsync(array $args = [])
 * @method Result updateAppImageConfig(array $args = [])
 * @method Promise updateAppImageConfigAsync(array $args = [])
 * @method Result updateArtifact(array $args = [])
 * @method Promise updateArtifactAsync(array $args = [])
 * @method Result updateCluster(array $args = [])
 * @method Promise updateClusterAsync(array $args = [])
 * @method Result updateClusterSoftware(array $args = [])
 * @method Promise updateClusterSoftwareAsync(array $args = [])
 * @method Result updateCodeRepository(array $args = [])
 * @method Promise updateCodeRepositoryAsync(array $args = [])
 * @method Result updateContext(array $args = [])
 * @method Promise updateContextAsync(array $args = [])
 * @method Result updateDeviceFleet(array $args = [])
 * @method Promise updateDeviceFleetAsync(array $args = [])
 * @method Result updateDevices(array $args = [])
 * @method Promise updateDevicesAsync(array $args = [])
 * @method Result updateDomain(array $args = [])
 * @method Promise updateDomainAsync(array $args = [])
 * @method Result updateEndpoint(array $args = [])
 * @method Promise updateEndpointAsync(array $args = [])
 * @method Result updateEndpointWeightsAndCapacities(array $args = [])
 * @method Promise updateEndpointWeightsAndCapacitiesAsync(array $args = [])
 * @method Result updateExperiment(array $args = [])
 * @method Promise updateExperimentAsync(array $args = [])
 * @method Result updateFeatureGroup(array $args = [])
 * @method Promise updateFeatureGroupAsync(array $args = [])
 * @method Result updateFeatureMetadata(array $args = [])
 * @method Promise updateFeatureMetadataAsync(array $args = [])
 * @method Result updateHub(array $args = [])
 * @method Promise updateHubAsync(array $args = [])
 * @method Result updateImage(array $args = [])
 * @method Promise updateImageAsync(array $args = [])
 * @method Result updateImageVersion(array $args = [])
 * @method Promise updateImageVersionAsync(array $args = [])
 * @method Result updateInferenceComponent(array $args = [])
 * @method Promise updateInferenceComponentAsync(array $args = [])
 * @method Result updateInferenceComponentRuntimeConfig(array $args = [])
 * @method Promise updateInferenceComponentRuntimeConfigAsync(array $args = [])
 * @method Result updateInferenceExperiment(array $args = [])
 * @method Promise updateInferenceExperimentAsync(array $args = [])
 * @method Result updateModelCard(array $args = [])
 * @method Promise updateModelCardAsync(array $args = [])
 * @method Result updateModelPackage(array $args = [])
 * @method Promise updateModelPackageAsync(array $args = [])
 * @method Result updateMonitoringAlert(array $args = [])
 * @method Promise updateMonitoringAlertAsync(array $args = [])
 * @method Result updateMonitoringSchedule(array $args = [])
 * @method Promise updateMonitoringScheduleAsync(array $args = [])
 * @method Result updateNotebookInstance(array $args = [])
 * @method Promise updateNotebookInstanceAsync(array $args = [])
 * @method Result updateNotebookInstanceLifecycleConfig(array $args = [])
 * @method Promise updateNotebookInstanceLifecycleConfigAsync(array $args = [])
 * @method Result updatePipeline(array $args = [])
 * @method Promise updatePipelineAsync(array $args = [])
 * @method Result updatePipelineExecution(array $args = [])
 * @method Promise updatePipelineExecutionAsync(array $args = [])
 * @method Result updateProject(array $args = [])
 * @method Promise updateProjectAsync(array $args = [])
 * @method Result updateSpace(array $args = [])
 * @method Promise updateSpaceAsync(array $args = [])
 * @method Result updateTrainingJob(array $args = [])
 * @method Promise updateTrainingJobAsync(array $args = [])
 * @method Result updateTrial(array $args = [])
 * @method Promise updateTrialAsync(array $args = [])
 * @method Result updateTrialComponent(array $args = [])
 * @method Promise updateTrialComponentAsync(array $args = [])
 * @method Result updateUserProfile(array $args = [])
 * @method Promise updateUserProfileAsync(array $args = [])
 * @method Result updateWorkforce(array $args = [])
 * @method Promise updateWorkforceAsync(array $args = [])
 * @method Result updateWorkteam(array $args = [])
 * @method Promise updateWorkteamAsync(array $args = [])
 */
class SageMakerClient extends AwsClient {}
