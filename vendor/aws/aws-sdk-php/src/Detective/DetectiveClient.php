<?php
namespace Aws\Detective;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon Detective** service.
 * @method Result acceptInvitation(array $args = [])
 * @method Promise acceptInvitationAsync(array $args = [])
 * @method Result batchGetGraphMemberDatasources(array $args = [])
 * @method Promise batchGetGraphMemberDatasourcesAsync(array $args = [])
 * @method Result batchGetMembershipDatasources(array $args = [])
 * @method Promise batchGetMembershipDatasourcesAsync(array $args = [])
 * @method Result createGraph(array $args = [])
 * @method Promise createGraphAsync(array $args = [])
 * @method Result createMembers(array $args = [])
 * @method Promise createMembersAsync(array $args = [])
 * @method Result deleteGraph(array $args = [])
 * @method Promise deleteGraphAsync(array $args = [])
 * @method Result deleteMembers(array $args = [])
 * @method Promise deleteMembersAsync(array $args = [])
 * @method Result describeOrganizationConfiguration(array $args = [])
 * @method Promise describeOrganizationConfigurationAsync(array $args = [])
 * @method Result disableOrganizationAdminAccount(array $args = [])
 * @method Promise disableOrganizationAdminAccountAsync(array $args = [])
 * @method Result disassociateMembership(array $args = [])
 * @method Promise disassociateMembershipAsync(array $args = [])
 * @method Result enableOrganizationAdminAccount(array $args = [])
 * @method Promise enableOrganizationAdminAccountAsync(array $args = [])
 * @method Result getInvestigation(array $args = [])
 * @method Promise getInvestigationAsync(array $args = [])
 * @method Result getMembers(array $args = [])
 * @method Promise getMembersAsync(array $args = [])
 * @method Result listDatasourcePackages(array $args = [])
 * @method Promise listDatasourcePackagesAsync(array $args = [])
 * @method Result listGraphs(array $args = [])
 * @method Promise listGraphsAsync(array $args = [])
 * @method Result listIndicators(array $args = [])
 * @method Promise listIndicatorsAsync(array $args = [])
 * @method Result listInvestigations(array $args = [])
 * @method Promise listInvestigationsAsync(array $args = [])
 * @method Result listInvitations(array $args = [])
 * @method Promise listInvitationsAsync(array $args = [])
 * @method Result listMembers(array $args = [])
 * @method Promise listMembersAsync(array $args = [])
 * @method Result listOrganizationAdminAccounts(array $args = [])
 * @method Promise listOrganizationAdminAccountsAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result rejectInvitation(array $args = [])
 * @method Promise rejectInvitationAsync(array $args = [])
 * @method Result startInvestigation(array $args = [])
 * @method Promise startInvestigationAsync(array $args = [])
 * @method Result startMonitoringMember(array $args = [])
 * @method Promise startMonitoringMemberAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateDatasourcePackages(array $args = [])
 * @method Promise updateDatasourcePackagesAsync(array $args = [])
 * @method Result updateInvestigationState(array $args = [])
 * @method Promise updateInvestigationStateAsync(array $args = [])
 * @method Result updateOrganizationConfiguration(array $args = [])
 * @method Promise updateOrganizationConfigurationAsync(array $args = [])
 */
class DetectiveClient extends AwsClient {}
