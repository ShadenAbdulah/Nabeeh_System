<?php
namespace Aws\Tnb;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **AWS Telco Network Builder** service.
 * @method Result cancelSolNetworkOperation(array $args = [])
 * @method Promise cancelSolNetworkOperationAsync(array $args = [])
 * @method Result createSolFunctionPackage(array $args = [])
 * @method Promise createSolFunctionPackageAsync(array $args = [])
 * @method Result createSolNetworkInstance(array $args = [])
 * @method Promise createSolNetworkInstanceAsync(array $args = [])
 * @method Result createSolNetworkPackage(array $args = [])
 * @method Promise createSolNetworkPackageAsync(array $args = [])
 * @method Result deleteSolFunctionPackage(array $args = [])
 * @method Promise deleteSolFunctionPackageAsync(array $args = [])
 * @method Result deleteSolNetworkInstance(array $args = [])
 * @method Promise deleteSolNetworkInstanceAsync(array $args = [])
 * @method Result deleteSolNetworkPackage(array $args = [])
 * @method Promise deleteSolNetworkPackageAsync(array $args = [])
 * @method Result getSolFunctionInstance(array $args = [])
 * @method Promise getSolFunctionInstanceAsync(array $args = [])
 * @method Result getSolFunctionPackage(array $args = [])
 * @method Promise getSolFunctionPackageAsync(array $args = [])
 * @method Result getSolFunctionPackageContent(array $args = [])
 * @method Promise getSolFunctionPackageContentAsync(array $args = [])
 * @method Result getSolFunctionPackageDescriptor(array $args = [])
 * @method Promise getSolFunctionPackageDescriptorAsync(array $args = [])
 * @method Result getSolNetworkInstance(array $args = [])
 * @method Promise getSolNetworkInstanceAsync(array $args = [])
 * @method Result getSolNetworkOperation(array $args = [])
 * @method Promise getSolNetworkOperationAsync(array $args = [])
 * @method Result getSolNetworkPackage(array $args = [])
 * @method Promise getSolNetworkPackageAsync(array $args = [])
 * @method Result getSolNetworkPackageContent(array $args = [])
 * @method Promise getSolNetworkPackageContentAsync(array $args = [])
 * @method Result getSolNetworkPackageDescriptor(array $args = [])
 * @method Promise getSolNetworkPackageDescriptorAsync(array $args = [])
 * @method Result instantiateSolNetworkInstance(array $args = [])
 * @method Promise instantiateSolNetworkInstanceAsync(array $args = [])
 * @method Result listSolFunctionInstances(array $args = [])
 * @method Promise listSolFunctionInstancesAsync(array $args = [])
 * @method Result listSolFunctionPackages(array $args = [])
 * @method Promise listSolFunctionPackagesAsync(array $args = [])
 * @method Result listSolNetworkInstances(array $args = [])
 * @method Promise listSolNetworkInstancesAsync(array $args = [])
 * @method Result listSolNetworkOperations(array $args = [])
 * @method Promise listSolNetworkOperationsAsync(array $args = [])
 * @method Result listSolNetworkPackages(array $args = [])
 * @method Promise listSolNetworkPackagesAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result putSolFunctionPackageContent(array $args = [])
 * @method Promise putSolFunctionPackageContentAsync(array $args = [])
 * @method Result putSolNetworkPackageContent(array $args = [])
 * @method Promise putSolNetworkPackageContentAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result terminateSolNetworkInstance(array $args = [])
 * @method Promise terminateSolNetworkInstanceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateSolFunctionPackage(array $args = [])
 * @method Promise updateSolFunctionPackageAsync(array $args = [])
 * @method Result updateSolNetworkInstance(array $args = [])
 * @method Promise updateSolNetworkInstanceAsync(array $args = [])
 * @method Result updateSolNetworkPackage(array $args = [])
 * @method Promise updateSolNetworkPackageAsync(array $args = [])
 * @method Result validateSolFunctionPackageContent(array $args = [])
 * @method Promise validateSolFunctionPackageContentAsync(array $args = [])
 * @method Result validateSolNetworkPackageContent(array $args = [])
 * @method Promise validateSolNetworkPackageContentAsync(array $args = [])
 */
class TnbClient extends AwsClient {}
