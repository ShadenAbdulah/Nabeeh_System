<?php
namespace Aws\CloudWatchEvidently;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon CloudWatch Evidently** service.
 * @method Result batchEvaluateFeature(array $args = [])
 * @method Promise batchEvaluateFeatureAsync(array $args = [])
 * @method Result createExperiment(array $args = [])
 * @method Promise createExperimentAsync(array $args = [])
 * @method Result createFeature(array $args = [])
 * @method Promise createFeatureAsync(array $args = [])
 * @method Result createLaunch(array $args = [])
 * @method Promise createLaunchAsync(array $args = [])
 * @method Result createProject(array $args = [])
 * @method Promise createProjectAsync(array $args = [])
 * @method Result createSegment(array $args = [])
 * @method Promise createSegmentAsync(array $args = [])
 * @method Result deleteExperiment(array $args = [])
 * @method Promise deleteExperimentAsync(array $args = [])
 * @method Result deleteFeature(array $args = [])
 * @method Promise deleteFeatureAsync(array $args = [])
 * @method Result deleteLaunch(array $args = [])
 * @method Promise deleteLaunchAsync(array $args = [])
 * @method Result deleteProject(array $args = [])
 * @method Promise deleteProjectAsync(array $args = [])
 * @method Result deleteSegment(array $args = [])
 * @method Promise deleteSegmentAsync(array $args = [])
 * @method Result evaluateFeature(array $args = [])
 * @method Promise evaluateFeatureAsync(array $args = [])
 * @method Result getExperiment(array $args = [])
 * @method Promise getExperimentAsync(array $args = [])
 * @method Result getExperimentResults(array $args = [])
 * @method Promise getExperimentResultsAsync(array $args = [])
 * @method Result getFeature(array $args = [])
 * @method Promise getFeatureAsync(array $args = [])
 * @method Result getLaunch(array $args = [])
 * @method Promise getLaunchAsync(array $args = [])
 * @method Result getProject(array $args = [])
 * @method Promise getProjectAsync(array $args = [])
 * @method Result getSegment(array $args = [])
 * @method Promise getSegmentAsync(array $args = [])
 * @method Result listExperiments(array $args = [])
 * @method Promise listExperimentsAsync(array $args = [])
 * @method Result listFeatures(array $args = [])
 * @method Promise listFeaturesAsync(array $args = [])
 * @method Result listLaunches(array $args = [])
 * @method Promise listLaunchesAsync(array $args = [])
 * @method Result listProjects(array $args = [])
 * @method Promise listProjectsAsync(array $args = [])
 * @method Result listSegmentReferences(array $args = [])
 * @method Promise listSegmentReferencesAsync(array $args = [])
 * @method Result listSegments(array $args = [])
 * @method Promise listSegmentsAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result putProjectEvents(array $args = [])
 * @method Promise putProjectEventsAsync(array $args = [])
 * @method Result startExperiment(array $args = [])
 * @method Promise startExperimentAsync(array $args = [])
 * @method Result startLaunch(array $args = [])
 * @method Promise startLaunchAsync(array $args = [])
 * @method Result stopExperiment(array $args = [])
 * @method Promise stopExperimentAsync(array $args = [])
 * @method Result stopLaunch(array $args = [])
 * @method Promise stopLaunchAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result testSegmentPattern(array $args = [])
 * @method Promise testSegmentPatternAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateExperiment(array $args = [])
 * @method Promise updateExperimentAsync(array $args = [])
 * @method Result updateFeature(array $args = [])
 * @method Promise updateFeatureAsync(array $args = [])
 * @method Result updateLaunch(array $args = [])
 * @method Promise updateLaunchAsync(array $args = [])
 * @method Result updateProject(array $args = [])
 * @method Promise updateProjectAsync(array $args = [])
 * @method Result updateProjectDataDelivery(array $args = [])
 * @method Promise updateProjectDataDeliveryAsync(array $args = [])
 */
class CloudWatchEvidentlyClient extends AwsClient {}
