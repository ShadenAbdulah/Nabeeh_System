<?php
namespace Aws\SecurityLake;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon Security Lake** service.
 * @method Result createAwsLogSource(array $args = [])
 * @method Promise createAwsLogSourceAsync(array $args = [])
 * @method Result createCustomLogSource(array $args = [])
 * @method Promise createCustomLogSourceAsync(array $args = [])
 * @method Result createDataLake(array $args = [])
 * @method Promise createDataLakeAsync(array $args = [])
 * @method Result createDataLakeExceptionSubscription(array $args = [])
 * @method Promise createDataLakeExceptionSubscriptionAsync(array $args = [])
 * @method Result createDataLakeOrganizationConfiguration(array $args = [])
 * @method Promise createDataLakeOrganizationConfigurationAsync(array $args = [])
 * @method Result createSubscriber(array $args = [])
 * @method Promise createSubscriberAsync(array $args = [])
 * @method Result createSubscriberNotification(array $args = [])
 * @method Promise createSubscriberNotificationAsync(array $args = [])
 * @method Result deleteAwsLogSource(array $args = [])
 * @method Promise deleteAwsLogSourceAsync(array $args = [])
 * @method Result deleteCustomLogSource(array $args = [])
 * @method Promise deleteCustomLogSourceAsync(array $args = [])
 * @method Result deleteDataLake(array $args = [])
 * @method Promise deleteDataLakeAsync(array $args = [])
 * @method Result deleteDataLakeExceptionSubscription(array $args = [])
 * @method Promise deleteDataLakeExceptionSubscriptionAsync(array $args = [])
 * @method Result deleteDataLakeOrganizationConfiguration(array $args = [])
 * @method Promise deleteDataLakeOrganizationConfigurationAsync(array $args = [])
 * @method Result deleteSubscriber(array $args = [])
 * @method Promise deleteSubscriberAsync(array $args = [])
 * @method Result deleteSubscriberNotification(array $args = [])
 * @method Promise deleteSubscriberNotificationAsync(array $args = [])
 * @method Result deregisterDataLakeDelegatedAdministrator(array $args = [])
 * @method Promise deregisterDataLakeDelegatedAdministratorAsync(array $args = [])
 * @method Result getDataLakeExceptionSubscription(array $args = [])
 * @method Promise getDataLakeExceptionSubscriptionAsync(array $args = [])
 * @method Result getDataLakeOrganizationConfiguration(array $args = [])
 * @method Promise getDataLakeOrganizationConfigurationAsync(array $args = [])
 * @method Result getDataLakeSources(array $args = [])
 * @method Promise getDataLakeSourcesAsync(array $args = [])
 * @method Result getSubscriber(array $args = [])
 * @method Promise getSubscriberAsync(array $args = [])
 * @method Result listDataLakeExceptions(array $args = [])
 * @method Promise listDataLakeExceptionsAsync(array $args = [])
 * @method Result listDataLakes(array $args = [])
 * @method Promise listDataLakesAsync(array $args = [])
 * @method Result listLogSources(array $args = [])
 * @method Promise listLogSourcesAsync(array $args = [])
 * @method Result listSubscribers(array $args = [])
 * @method Promise listSubscribersAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result registerDataLakeDelegatedAdministrator(array $args = [])
 * @method Promise registerDataLakeDelegatedAdministratorAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateDataLake(array $args = [])
 * @method Promise updateDataLakeAsync(array $args = [])
 * @method Result updateDataLakeExceptionSubscription(array $args = [])
 * @method Promise updateDataLakeExceptionSubscriptionAsync(array $args = [])
 * @method Result updateSubscriber(array $args = [])
 * @method Promise updateSubscriberAsync(array $args = [])
 * @method Result updateSubscriberNotification(array $args = [])
 * @method Promise updateSubscriberNotificationAsync(array $args = [])
 */
class SecurityLakeClient extends AwsClient {}
