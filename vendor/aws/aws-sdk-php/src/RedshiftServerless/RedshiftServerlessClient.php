<?php
namespace Aws\RedshiftServerless;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Redshift Serverless** service.
 * @method Result convertRecoveryPointToSnapshot(array $args = [])
 * @method Promise convertRecoveryPointToSnapshotAsync(array $args = [])
 * @method Result createCustomDomainAssociation(array $args = [])
 * @method Promise createCustomDomainAssociationAsync(array $args = [])
 * @method Result createEndpointAccess(array $args = [])
 * @method Promise createEndpointAccessAsync(array $args = [])
 * @method Result createNamespace(array $args = [])
 * @method Promise createNamespaceAsync(array $args = [])
 * @method Result createScheduledAction(array $args = [])
 * @method Promise createScheduledActionAsync(array $args = [])
 * @method Result createSnapshot(array $args = [])
 * @method Promise createSnapshotAsync(array $args = [])
 * @method Result createSnapshotCopyConfiguration(array $args = [])
 * @method Promise createSnapshotCopyConfigurationAsync(array $args = [])
 * @method Result createUsageLimit(array $args = [])
 * @method Promise createUsageLimitAsync(array $args = [])
 * @method Result createWorkgroup(array $args = [])
 * @method Promise createWorkgroupAsync(array $args = [])
 * @method Result deleteCustomDomainAssociation(array $args = [])
 * @method Promise deleteCustomDomainAssociationAsync(array $args = [])
 * @method Result deleteEndpointAccess(array $args = [])
 * @method Promise deleteEndpointAccessAsync(array $args = [])
 * @method Result deleteNamespace(array $args = [])
 * @method Promise deleteNamespaceAsync(array $args = [])
 * @method Result deleteResourcePolicy(array $args = [])
 * @method Promise deleteResourcePolicyAsync(array $args = [])
 * @method Result deleteScheduledAction(array $args = [])
 * @method Promise deleteScheduledActionAsync(array $args = [])
 * @method Result deleteSnapshot(array $args = [])
 * @method Promise deleteSnapshotAsync(array $args = [])
 * @method Result deleteSnapshotCopyConfiguration(array $args = [])
 * @method Promise deleteSnapshotCopyConfigurationAsync(array $args = [])
 * @method Result deleteUsageLimit(array $args = [])
 * @method Promise deleteUsageLimitAsync(array $args = [])
 * @method Result deleteWorkgroup(array $args = [])
 * @method Promise deleteWorkgroupAsync(array $args = [])
 * @method Result getCredentials(array $args = [])
 * @method Promise getCredentialsAsync(array $args = [])
 * @method Result getCustomDomainAssociation(array $args = [])
 * @method Promise getCustomDomainAssociationAsync(array $args = [])
 * @method Result getEndpointAccess(array $args = [])
 * @method Promise getEndpointAccessAsync(array $args = [])
 * @method Result getNamespace(array $args = [])
 * @method Promise getNamespaceAsync(array $args = [])
 * @method Result getRecoveryPoint(array $args = [])
 * @method Promise getRecoveryPointAsync(array $args = [])
 * @method Result getResourcePolicy(array $args = [])
 * @method Promise getResourcePolicyAsync(array $args = [])
 * @method Result getScheduledAction(array $args = [])
 * @method Promise getScheduledActionAsync(array $args = [])
 * @method Result getSnapshot(array $args = [])
 * @method Promise getSnapshotAsync(array $args = [])
 * @method Result getTableRestoreStatus(array $args = [])
 * @method Promise getTableRestoreStatusAsync(array $args = [])
 * @method Result getUsageLimit(array $args = [])
 * @method Promise getUsageLimitAsync(array $args = [])
 * @method Result getWorkgroup(array $args = [])
 * @method Promise getWorkgroupAsync(array $args = [])
 * @method Result listCustomDomainAssociations(array $args = [])
 * @method Promise listCustomDomainAssociationsAsync(array $args = [])
 * @method Result listEndpointAccess(array $args = [])
 * @method Promise listEndpointAccessAsync(array $args = [])
 * @method Result listNamespaces(array $args = [])
 * @method Promise listNamespacesAsync(array $args = [])
 * @method Result listRecoveryPoints(array $args = [])
 * @method Promise listRecoveryPointsAsync(array $args = [])
 * @method Result listScheduledActions(array $args = [])
 * @method Promise listScheduledActionsAsync(array $args = [])
 * @method Result listSnapshotCopyConfigurations(array $args = [])
 * @method Promise listSnapshotCopyConfigurationsAsync(array $args = [])
 * @method Result listSnapshots(array $args = [])
 * @method Promise listSnapshotsAsync(array $args = [])
 * @method Result listTableRestoreStatus(array $args = [])
 * @method Promise listTableRestoreStatusAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result listUsageLimits(array $args = [])
 * @method Promise listUsageLimitsAsync(array $args = [])
 * @method Result listWorkgroups(array $args = [])
 * @method Promise listWorkgroupsAsync(array $args = [])
 * @method Result putResourcePolicy(array $args = [])
 * @method Promise putResourcePolicyAsync(array $args = [])
 * @method Result restoreFromRecoveryPoint(array $args = [])
 * @method Promise restoreFromRecoveryPointAsync(array $args = [])
 * @method Result restoreFromSnapshot(array $args = [])
 * @method Promise restoreFromSnapshotAsync(array $args = [])
 * @method Result restoreTableFromRecoveryPoint(array $args = [])
 * @method Promise restoreTableFromRecoveryPointAsync(array $args = [])
 * @method Result restoreTableFromSnapshot(array $args = [])
 * @method Promise restoreTableFromSnapshotAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateCustomDomainAssociation(array $args = [])
 * @method Promise updateCustomDomainAssociationAsync(array $args = [])
 * @method Result updateEndpointAccess(array $args = [])
 * @method Promise updateEndpointAccessAsync(array $args = [])
 * @method Result updateNamespace(array $args = [])
 * @method Promise updateNamespaceAsync(array $args = [])
 * @method Result updateScheduledAction(array $args = [])
 * @method Promise updateScheduledActionAsync(array $args = [])
 * @method Result updateSnapshot(array $args = [])
 * @method Promise updateSnapshotAsync(array $args = [])
 * @method Result updateSnapshotCopyConfiguration(array $args = [])
 * @method Promise updateSnapshotCopyConfigurationAsync(array $args = [])
 * @method Result updateUsageLimit(array $args = [])
 * @method Promise updateUsageLimitAsync(array $args = [])
 * @method Result updateWorkgroup(array $args = [])
 * @method Promise updateWorkgroupAsync(array $args = [])
 */
class RedshiftServerlessClient extends AwsClient {}
