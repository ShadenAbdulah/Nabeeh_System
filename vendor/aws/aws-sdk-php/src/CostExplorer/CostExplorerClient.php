<?php
namespace Aws\CostExplorer;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **AWS Cost Explorer Service** service.
 * @method Result createAnomalyMonitor(array $args = [])
 * @method Promise createAnomalyMonitorAsync(array $args = [])
 * @method Result createAnomalySubscription(array $args = [])
 * @method Promise createAnomalySubscriptionAsync(array $args = [])
 * @method Result createCostCategoryDefinition(array $args = [])
 * @method Promise createCostCategoryDefinitionAsync(array $args = [])
 * @method Result deleteAnomalyMonitor(array $args = [])
 * @method Promise deleteAnomalyMonitorAsync(array $args = [])
 * @method Result deleteAnomalySubscription(array $args = [])
 * @method Promise deleteAnomalySubscriptionAsync(array $args = [])
 * @method Result deleteCostCategoryDefinition(array $args = [])
 * @method Promise deleteCostCategoryDefinitionAsync(array $args = [])
 * @method Result describeCostCategoryDefinition(array $args = [])
 * @method Promise describeCostCategoryDefinitionAsync(array $args = [])
 * @method Result getAnomalies(array $args = [])
 * @method Promise getAnomaliesAsync(array $args = [])
 * @method Result getAnomalyMonitors(array $args = [])
 * @method Promise getAnomalyMonitorsAsync(array $args = [])
 * @method Result getAnomalySubscriptions(array $args = [])
 * @method Promise getAnomalySubscriptionsAsync(array $args = [])
 * @method Result getApproximateUsageRecords(array $args = [])
 * @method Promise getApproximateUsageRecordsAsync(array $args = [])
 * @method Result getCostAndUsage(array $args = [])
 * @method Promise getCostAndUsageAsync(array $args = [])
 * @method Result getCostAndUsageWithResources(array $args = [])
 * @method Promise getCostAndUsageWithResourcesAsync(array $args = [])
 * @method Result getCostCategories(array $args = [])
 * @method Promise getCostCategoriesAsync(array $args = [])
 * @method Result getCostForecast(array $args = [])
 * @method Promise getCostForecastAsync(array $args = [])
 * @method Result getDimensionValues(array $args = [])
 * @method Promise getDimensionValuesAsync(array $args = [])
 * @method Result getReservationCoverage(array $args = [])
 * @method Promise getReservationCoverageAsync(array $args = [])
 * @method Result getReservationPurchaseRecommendation(array $args = [])
 * @method Promise getReservationPurchaseRecommendationAsync(array $args = [])
 * @method Result getReservationUtilization(array $args = [])
 * @method Promise getReservationUtilizationAsync(array $args = [])
 * @method Result getRightsizingRecommendation(array $args = [])
 * @method Promise getRightsizingRecommendationAsync(array $args = [])
 * @method Result getSavingsPlanPurchaseRecommendationDetails(array $args = [])
 * @method Promise getSavingsPlanPurchaseRecommendationDetailsAsync(array $args = [])
 * @method Result getSavingsPlansCoverage(array $args = [])
 * @method Promise getSavingsPlansCoverageAsync(array $args = [])
 * @method Result getSavingsPlansPurchaseRecommendation(array $args = [])
 * @method Promise getSavingsPlansPurchaseRecommendationAsync(array $args = [])
 * @method Result getSavingsPlansUtilization(array $args = [])
 * @method Promise getSavingsPlansUtilizationAsync(array $args = [])
 * @method Result getSavingsPlansUtilizationDetails(array $args = [])
 * @method Promise getSavingsPlansUtilizationDetailsAsync(array $args = [])
 * @method Result getTags(array $args = [])
 * @method Promise getTagsAsync(array $args = [])
 * @method Result getUsageForecast(array $args = [])
 * @method Promise getUsageForecastAsync(array $args = [])
 * @method Result listCostAllocationTags(array $args = [])
 * @method Promise listCostAllocationTagsAsync(array $args = [])
 * @method Result listCostCategoryDefinitions(array $args = [])
 * @method Promise listCostCategoryDefinitionsAsync(array $args = [])
 * @method Result listSavingsPlansPurchaseRecommendationGeneration(array $args = [])
 * @method Promise listSavingsPlansPurchaseRecommendationGenerationAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result provideAnomalyFeedback(array $args = [])
 * @method Promise provideAnomalyFeedbackAsync(array $args = [])
 * @method Result startSavingsPlansPurchaseRecommendationGeneration(array $args = [])
 * @method Promise startSavingsPlansPurchaseRecommendationGenerationAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateAnomalyMonitor(array $args = [])
 * @method Promise updateAnomalyMonitorAsync(array $args = [])
 * @method Result updateAnomalySubscription(array $args = [])
 * @method Promise updateAnomalySubscriptionAsync(array $args = [])
 * @method Result updateCostAllocationTagsStatus(array $args = [])
 * @method Promise updateCostAllocationTagsStatusAsync(array $args = [])
 * @method Result updateCostCategoryDefinition(array $args = [])
 * @method Promise updateCostCategoryDefinitionAsync(array $args = [])
 */
class CostExplorerClient extends AwsClient {}
