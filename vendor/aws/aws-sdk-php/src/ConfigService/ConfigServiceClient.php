<?php
namespace Aws\ConfigService;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with AWS Config.
 *
 * @method Result batchGetAggregateResourceConfig(array $args = [])
 * @method Promise batchGetAggregateResourceConfigAsync(array $args = [])
 * @method Result batchGetResourceConfig(array $args = [])
 * @method Promise batchGetResourceConfigAsync(array $args = [])
 * @method Result deleteAggregationAuthorization(array $args = [])
 * @method Promise deleteAggregationAuthorizationAsync(array $args = [])
 * @method Result deleteConfigRule(array $args = [])
 * @method Promise deleteConfigRuleAsync(array $args = [])
 * @method Result deleteConfigurationAggregator(array $args = [])
 * @method Promise deleteConfigurationAggregatorAsync(array $args = [])
 * @method Result deleteConfigurationRecorder(array $args = [])
 * @method Promise deleteConfigurationRecorderAsync(array $args = [])
 * @method Result deleteConformancePack(array $args = [])
 * @method Promise deleteConformancePackAsync(array $args = [])
 * @method Result deleteDeliveryChannel(array $args = [])
 * @method Promise deleteDeliveryChannelAsync(array $args = [])
 * @method Result deleteEvaluationResults(array $args = [])
 * @method Promise deleteEvaluationResultsAsync(array $args = [])
 * @method Result deleteOrganizationConfigRule(array $args = [])
 * @method Promise deleteOrganizationConfigRuleAsync(array $args = [])
 * @method Result deleteOrganizationConformancePack(array $args = [])
 * @method Promise deleteOrganizationConformancePackAsync(array $args = [])
 * @method Result deletePendingAggregationRequest(array $args = [])
 * @method Promise deletePendingAggregationRequestAsync(array $args = [])
 * @method Result deleteRemediationConfiguration(array $args = [])
 * @method Promise deleteRemediationConfigurationAsync(array $args = [])
 * @method Result deleteRemediationExceptions(array $args = [])
 * @method Promise deleteRemediationExceptionsAsync(array $args = [])
 * @method Result deleteResourceConfig(array $args = [])
 * @method Promise deleteResourceConfigAsync(array $args = [])
 * @method Result deleteRetentionConfiguration(array $args = [])
 * @method Promise deleteRetentionConfigurationAsync(array $args = [])
 * @method Result deleteStoredQuery(array $args = [])
 * @method Promise deleteStoredQueryAsync(array $args = [])
 * @method Result deliverConfigSnapshot(array $args = [])
 * @method Promise deliverConfigSnapshotAsync(array $args = [])
 * @method Result describeAggregateComplianceByConfigRules(array $args = [])
 * @method Promise describeAggregateComplianceByConfigRulesAsync(array $args = [])
 * @method Result describeAggregateComplianceByConformancePacks(array $args = [])
 * @method Promise describeAggregateComplianceByConformancePacksAsync(array $args = [])
 * @method Result describeAggregationAuthorizations(array $args = [])
 * @method Promise describeAggregationAuthorizationsAsync(array $args = [])
 * @method Result describeComplianceByConfigRule(array $args = [])
 * @method Promise describeComplianceByConfigRuleAsync(array $args = [])
 * @method Result describeComplianceByResource(array $args = [])
 * @method Promise describeComplianceByResourceAsync(array $args = [])
 * @method Result describeConfigRuleEvaluationStatus(array $args = [])
 * @method Promise describeConfigRuleEvaluationStatusAsync(array $args = [])
 * @method Result describeConfigRules(array $args = [])
 * @method Promise describeConfigRulesAsync(array $args = [])
 * @method Result describeConfigurationAggregatorSourcesStatus(array $args = [])
 * @method Promise describeConfigurationAggregatorSourcesStatusAsync(array $args = [])
 * @method Result describeConfigurationAggregators(array $args = [])
 * @method Promise describeConfigurationAggregatorsAsync(array $args = [])
 * @method Result describeConfigurationRecorderStatus(array $args = [])
 * @method Promise describeConfigurationRecorderStatusAsync(array $args = [])
 * @method Result describeConfigurationRecorders(array $args = [])
 * @method Promise describeConfigurationRecordersAsync(array $args = [])
 * @method Result describeConformancePackCompliance(array $args = [])
 * @method Promise describeConformancePackComplianceAsync(array $args = [])
 * @method Result describeConformancePackStatus(array $args = [])
 * @method Promise describeConformancePackStatusAsync(array $args = [])
 * @method Result describeConformancePacks(array $args = [])
 * @method Promise describeConformancePacksAsync(array $args = [])
 * @method Result describeDeliveryChannelStatus(array $args = [])
 * @method Promise describeDeliveryChannelStatusAsync(array $args = [])
 * @method Result describeDeliveryChannels(array $args = [])
 * @method Promise describeDeliveryChannelsAsync(array $args = [])
 * @method Result describeOrganizationConfigRuleStatuses(array $args = [])
 * @method Promise describeOrganizationConfigRuleStatusesAsync(array $args = [])
 * @method Result describeOrganizationConfigRules(array $args = [])
 * @method Promise describeOrganizationConfigRulesAsync(array $args = [])
 * @method Result describeOrganizationConformancePackStatuses(array $args = [])
 * @method Promise describeOrganizationConformancePackStatusesAsync(array $args = [])
 * @method Result describeOrganizationConformancePacks(array $args = [])
 * @method Promise describeOrganizationConformancePacksAsync(array $args = [])
 * @method Result describePendingAggregationRequests(array $args = [])
 * @method Promise describePendingAggregationRequestsAsync(array $args = [])
 * @method Result describeRemediationConfigurations(array $args = [])
 * @method Promise describeRemediationConfigurationsAsync(array $args = [])
 * @method Result describeRemediationExceptions(array $args = [])
 * @method Promise describeRemediationExceptionsAsync(array $args = [])
 * @method Result describeRemediationExecutionStatus(array $args = [])
 * @method Promise describeRemediationExecutionStatusAsync(array $args = [])
 * @method Result describeRetentionConfigurations(array $args = [])
 * @method Promise describeRetentionConfigurationsAsync(array $args = [])
 * @method Result getAggregateComplianceDetailsByConfigRule(array $args = [])
 * @method Promise getAggregateComplianceDetailsByConfigRuleAsync(array $args = [])
 * @method Result getAggregateConfigRuleComplianceSummary(array $args = [])
 * @method Promise getAggregateConfigRuleComplianceSummaryAsync(array $args = [])
 * @method Result getAggregateConformancePackComplianceSummary(array $args = [])
 * @method Promise getAggregateConformancePackComplianceSummaryAsync(array $args = [])
 * @method Result getAggregateDiscoveredResourceCounts(array $args = [])
 * @method Promise getAggregateDiscoveredResourceCountsAsync(array $args = [])
 * @method Result getAggregateResourceConfig(array $args = [])
 * @method Promise getAggregateResourceConfigAsync(array $args = [])
 * @method Result getComplianceDetailsByConfigRule(array $args = [])
 * @method Promise getComplianceDetailsByConfigRuleAsync(array $args = [])
 * @method Result getComplianceDetailsByResource(array $args = [])
 * @method Promise getComplianceDetailsByResourceAsync(array $args = [])
 * @method Result getComplianceSummaryByConfigRule(array $args = [])
 * @method Promise getComplianceSummaryByConfigRuleAsync(array $args = [])
 * @method Result getComplianceSummaryByResourceType(array $args = [])
 * @method Promise getComplianceSummaryByResourceTypeAsync(array $args = [])
 * @method Result getConformancePackComplianceDetails(array $args = [])
 * @method Promise getConformancePackComplianceDetailsAsync(array $args = [])
 * @method Result getConformancePackComplianceSummary(array $args = [])
 * @method Promise getConformancePackComplianceSummaryAsync(array $args = [])
 * @method Result getCustomRulePolicy(array $args = [])
 * @method Promise getCustomRulePolicyAsync(array $args = [])
 * @method Result getDiscoveredResourceCounts(array $args = [])
 * @method Promise getDiscoveredResourceCountsAsync(array $args = [])
 * @method Result getOrganizationConfigRuleDetailedStatus(array $args = [])
 * @method Promise getOrganizationConfigRuleDetailedStatusAsync(array $args = [])
 * @method Result getOrganizationConformancePackDetailedStatus(array $args = [])
 * @method Promise getOrganizationConformancePackDetailedStatusAsync(array $args = [])
 * @method Result getOrganizationCustomRulePolicy(array $args = [])
 * @method Promise getOrganizationCustomRulePolicyAsync(array $args = [])
 * @method Result getResourceConfigHistory(array $args = [])
 * @method Promise getResourceConfigHistoryAsync(array $args = [])
 * @method Result getResourceEvaluationSummary(array $args = [])
 * @method Promise getResourceEvaluationSummaryAsync(array $args = [])
 * @method Result getStoredQuery(array $args = [])
 * @method Promise getStoredQueryAsync(array $args = [])
 * @method Result listAggregateDiscoveredResources(array $args = [])
 * @method Promise listAggregateDiscoveredResourcesAsync(array $args = [])
 * @method Result listConformancePackComplianceScores(array $args = [])
 * @method Promise listConformancePackComplianceScoresAsync(array $args = [])
 * @method Result listDiscoveredResources(array $args = [])
 * @method Promise listDiscoveredResourcesAsync(array $args = [])
 * @method Result listResourceEvaluations(array $args = [])
 * @method Promise listResourceEvaluationsAsync(array $args = [])
 * @method Result listStoredQueries(array $args = [])
 * @method Promise listStoredQueriesAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result putAggregationAuthorization(array $args = [])
 * @method Promise putAggregationAuthorizationAsync(array $args = [])
 * @method Result putConfigRule(array $args = [])
 * @method Promise putConfigRuleAsync(array $args = [])
 * @method Result putConfigurationAggregator(array $args = [])
 * @method Promise putConfigurationAggregatorAsync(array $args = [])
 * @method Result putConfigurationRecorder(array $args = [])
 * @method Promise putConfigurationRecorderAsync(array $args = [])
 * @method Result putConformancePack(array $args = [])
 * @method Promise putConformancePackAsync(array $args = [])
 * @method Result putDeliveryChannel(array $args = [])
 * @method Promise putDeliveryChannelAsync(array $args = [])
 * @method Result putEvaluations(array $args = [])
 * @method Promise putEvaluationsAsync(array $args = [])
 * @method Result putExternalEvaluation(array $args = [])
 * @method Promise putExternalEvaluationAsync(array $args = [])
 * @method Result putOrganizationConfigRule(array $args = [])
 * @method Promise putOrganizationConfigRuleAsync(array $args = [])
 * @method Result putOrganizationConformancePack(array $args = [])
 * @method Promise putOrganizationConformancePackAsync(array $args = [])
 * @method Result putRemediationConfigurations(array $args = [])
 * @method Promise putRemediationConfigurationsAsync(array $args = [])
 * @method Result putRemediationExceptions(array $args = [])
 * @method Promise putRemediationExceptionsAsync(array $args = [])
 * @method Result putResourceConfig(array $args = [])
 * @method Promise putResourceConfigAsync(array $args = [])
 * @method Result putRetentionConfiguration(array $args = [])
 * @method Promise putRetentionConfigurationAsync(array $args = [])
 * @method Result putStoredQuery(array $args = [])
 * @method Promise putStoredQueryAsync(array $args = [])
 * @method Result selectAggregateResourceConfig(array $args = [])
 * @method Promise selectAggregateResourceConfigAsync(array $args = [])
 * @method Result selectResourceConfig(array $args = [])
 * @method Promise selectResourceConfigAsync(array $args = [])
 * @method Result startConfigRulesEvaluation(array $args = [])
 * @method Promise startConfigRulesEvaluationAsync(array $args = [])
 * @method Result startConfigurationRecorder(array $args = [])
 * @method Promise startConfigurationRecorderAsync(array $args = [])
 * @method Result startRemediationExecution(array $args = [])
 * @method Promise startRemediationExecutionAsync(array $args = [])
 * @method Result startResourceEvaluation(array $args = [])
 * @method Promise startResourceEvaluationAsync(array $args = [])
 * @method Result stopConfigurationRecorder(array $args = [])
 * @method Promise stopConfigurationRecorderAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 */
class ConfigServiceClient extends AwsClient {}
