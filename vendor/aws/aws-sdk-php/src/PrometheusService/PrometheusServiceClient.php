<?php
namespace Aws\PrometheusService;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon Prometheus Service** service.
 * @method Result createAlertManagerDefinition(array $args = [])
 * @method Promise createAlertManagerDefinitionAsync(array $args = [])
 * @method Result createLoggingConfiguration(array $args = [])
 * @method Promise createLoggingConfigurationAsync(array $args = [])
 * @method Result createRuleGroupsNamespace(array $args = [])
 * @method Promise createRuleGroupsNamespaceAsync(array $args = [])
 * @method Result createScraper(array $args = [])
 * @method Promise createScraperAsync(array $args = [])
 * @method Result createWorkspace(array $args = [])
 * @method Promise createWorkspaceAsync(array $args = [])
 * @method Result deleteAlertManagerDefinition(array $args = [])
 * @method Promise deleteAlertManagerDefinitionAsync(array $args = [])
 * @method Result deleteLoggingConfiguration(array $args = [])
 * @method Promise deleteLoggingConfigurationAsync(array $args = [])
 * @method Result deleteRuleGroupsNamespace(array $args = [])
 * @method Promise deleteRuleGroupsNamespaceAsync(array $args = [])
 * @method Result deleteScraper(array $args = [])
 * @method Promise deleteScraperAsync(array $args = [])
 * @method Result deleteWorkspace(array $args = [])
 * @method Promise deleteWorkspaceAsync(array $args = [])
 * @method Result describeAlertManagerDefinition(array $args = [])
 * @method Promise describeAlertManagerDefinitionAsync(array $args = [])
 * @method Result describeLoggingConfiguration(array $args = [])
 * @method Promise describeLoggingConfigurationAsync(array $args = [])
 * @method Result describeRuleGroupsNamespace(array $args = [])
 * @method Promise describeRuleGroupsNamespaceAsync(array $args = [])
 * @method Result describeScraper(array $args = [])
 * @method Promise describeScraperAsync(array $args = [])
 * @method Result describeWorkspace(array $args = [])
 * @method Promise describeWorkspaceAsync(array $args = [])
 * @method Result getDefaultScraperConfiguration(array $args = [])
 * @method Promise getDefaultScraperConfigurationAsync(array $args = [])
 * @method Result listRuleGroupsNamespaces(array $args = [])
 * @method Promise listRuleGroupsNamespacesAsync(array $args = [])
 * @method Result listScrapers(array $args = [])
 * @method Promise listScrapersAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result listWorkspaces(array $args = [])
 * @method Promise listWorkspacesAsync(array $args = [])
 * @method Result putAlertManagerDefinition(array $args = [])
 * @method Promise putAlertManagerDefinitionAsync(array $args = [])
 * @method Result putRuleGroupsNamespace(array $args = [])
 * @method Promise putRuleGroupsNamespaceAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateLoggingConfiguration(array $args = [])
 * @method Promise updateLoggingConfigurationAsync(array $args = [])
 * @method Result updateWorkspaceAlias(array $args = [])
 * @method Promise updateWorkspaceAliasAsync(array $args = [])
 */
class PrometheusServiceClient extends AwsClient {}
