<?php
namespace Aws\WorkSpacesWeb;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon WorkSpaces Web** service.
 * @method Result associateBrowserSettings(array $args = [])
 * @method Promise associateBrowserSettingsAsync(array $args = [])
 * @method Result associateIpAccessSettings(array $args = [])
 * @method Promise associateIpAccessSettingsAsync(array $args = [])
 * @method Result associateNetworkSettings(array $args = [])
 * @method Promise associateNetworkSettingsAsync(array $args = [])
 * @method Result associateTrustStore(array $args = [])
 * @method Promise associateTrustStoreAsync(array $args = [])
 * @method Result associateUserAccessLoggingSettings(array $args = [])
 * @method Promise associateUserAccessLoggingSettingsAsync(array $args = [])
 * @method Result associateUserSettings(array $args = [])
 * @method Promise associateUserSettingsAsync(array $args = [])
 * @method Result createBrowserSettings(array $args = [])
 * @method Promise createBrowserSettingsAsync(array $args = [])
 * @method Result createIdentityProvider(array $args = [])
 * @method Promise createIdentityProviderAsync(array $args = [])
 * @method Result createIpAccessSettings(array $args = [])
 * @method Promise createIpAccessSettingsAsync(array $args = [])
 * @method Result createNetworkSettings(array $args = [])
 * @method Promise createNetworkSettingsAsync(array $args = [])
 * @method Result createPortal(array $args = [])
 * @method Promise createPortalAsync(array $args = [])
 * @method Result createTrustStore(array $args = [])
 * @method Promise createTrustStoreAsync(array $args = [])
 * @method Result createUserAccessLoggingSettings(array $args = [])
 * @method Promise createUserAccessLoggingSettingsAsync(array $args = [])
 * @method Result createUserSettings(array $args = [])
 * @method Promise createUserSettingsAsync(array $args = [])
 * @method Result deleteBrowserSettings(array $args = [])
 * @method Promise deleteBrowserSettingsAsync(array $args = [])
 * @method Result deleteIdentityProvider(array $args = [])
 * @method Promise deleteIdentityProviderAsync(array $args = [])
 * @method Result deleteIpAccessSettings(array $args = [])
 * @method Promise deleteIpAccessSettingsAsync(array $args = [])
 * @method Result deleteNetworkSettings(array $args = [])
 * @method Promise deleteNetworkSettingsAsync(array $args = [])
 * @method Result deletePortal(array $args = [])
 * @method Promise deletePortalAsync(array $args = [])
 * @method Result deleteTrustStore(array $args = [])
 * @method Promise deleteTrustStoreAsync(array $args = [])
 * @method Result deleteUserAccessLoggingSettings(array $args = [])
 * @method Promise deleteUserAccessLoggingSettingsAsync(array $args = [])
 * @method Result deleteUserSettings(array $args = [])
 * @method Promise deleteUserSettingsAsync(array $args = [])
 * @method Result disassociateBrowserSettings(array $args = [])
 * @method Promise disassociateBrowserSettingsAsync(array $args = [])
 * @method Result disassociateIpAccessSettings(array $args = [])
 * @method Promise disassociateIpAccessSettingsAsync(array $args = [])
 * @method Result disassociateNetworkSettings(array $args = [])
 * @method Promise disassociateNetworkSettingsAsync(array $args = [])
 * @method Result disassociateTrustStore(array $args = [])
 * @method Promise disassociateTrustStoreAsync(array $args = [])
 * @method Result disassociateUserAccessLoggingSettings(array $args = [])
 * @method Promise disassociateUserAccessLoggingSettingsAsync(array $args = [])
 * @method Result disassociateUserSettings(array $args = [])
 * @method Promise disassociateUserSettingsAsync(array $args = [])
 * @method Result getBrowserSettings(array $args = [])
 * @method Promise getBrowserSettingsAsync(array $args = [])
 * @method Result getIdentityProvider(array $args = [])
 * @method Promise getIdentityProviderAsync(array $args = [])
 * @method Result getIpAccessSettings(array $args = [])
 * @method Promise getIpAccessSettingsAsync(array $args = [])
 * @method Result getNetworkSettings(array $args = [])
 * @method Promise getNetworkSettingsAsync(array $args = [])
 * @method Result getPortal(array $args = [])
 * @method Promise getPortalAsync(array $args = [])
 * @method Result getPortalServiceProviderMetadata(array $args = [])
 * @method Promise getPortalServiceProviderMetadataAsync(array $args = [])
 * @method Result getTrustStore(array $args = [])
 * @method Promise getTrustStoreAsync(array $args = [])
 * @method Result getTrustStoreCertificate(array $args = [])
 * @method Promise getTrustStoreCertificateAsync(array $args = [])
 * @method Result getUserAccessLoggingSettings(array $args = [])
 * @method Promise getUserAccessLoggingSettingsAsync(array $args = [])
 * @method Result getUserSettings(array $args = [])
 * @method Promise getUserSettingsAsync(array $args = [])
 * @method Result listBrowserSettings(array $args = [])
 * @method Promise listBrowserSettingsAsync(array $args = [])
 * @method Result listIdentityProviders(array $args = [])
 * @method Promise listIdentityProvidersAsync(array $args = [])
 * @method Result listIpAccessSettings(array $args = [])
 * @method Promise listIpAccessSettingsAsync(array $args = [])
 * @method Result listNetworkSettings(array $args = [])
 * @method Promise listNetworkSettingsAsync(array $args = [])
 * @method Result listPortals(array $args = [])
 * @method Promise listPortalsAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result listTrustStoreCertificates(array $args = [])
 * @method Promise listTrustStoreCertificatesAsync(array $args = [])
 * @method Result listTrustStores(array $args = [])
 * @method Promise listTrustStoresAsync(array $args = [])
 * @method Result listUserAccessLoggingSettings(array $args = [])
 * @method Promise listUserAccessLoggingSettingsAsync(array $args = [])
 * @method Result listUserSettings(array $args = [])
 * @method Promise listUserSettingsAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateBrowserSettings(array $args = [])
 * @method Promise updateBrowserSettingsAsync(array $args = [])
 * @method Result updateIdentityProvider(array $args = [])
 * @method Promise updateIdentityProviderAsync(array $args = [])
 * @method Result updateIpAccessSettings(array $args = [])
 * @method Promise updateIpAccessSettingsAsync(array $args = [])
 * @method Result updateNetworkSettings(array $args = [])
 * @method Promise updateNetworkSettingsAsync(array $args = [])
 * @method Result updatePortal(array $args = [])
 * @method Promise updatePortalAsync(array $args = [])
 * @method Result updateTrustStore(array $args = [])
 * @method Promise updateTrustStoreAsync(array $args = [])
 * @method Result updateUserAccessLoggingSettings(array $args = [])
 * @method Promise updateUserAccessLoggingSettingsAsync(array $args = [])
 * @method Result updateUserSettings(array $args = [])
 * @method Promise updateUserSettingsAsync(array $args = [])
 */
class WorkSpacesWebClient extends AwsClient {}
