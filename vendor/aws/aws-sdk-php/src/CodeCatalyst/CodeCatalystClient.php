<?php
namespace Aws\CodeCatalyst;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon CodeCatalyst** service.
 * @method Result createAccessToken(array $args = [])
 * @method Promise createAccessTokenAsync(array $args = [])
 * @method Result createDevEnvironment(array $args = [])
 * @method Promise createDevEnvironmentAsync(array $args = [])
 * @method Result createProject(array $args = [])
 * @method Promise createProjectAsync(array $args = [])
 * @method Result createSourceRepository(array $args = [])
 * @method Promise createSourceRepositoryAsync(array $args = [])
 * @method Result createSourceRepositoryBranch(array $args = [])
 * @method Promise createSourceRepositoryBranchAsync(array $args = [])
 * @method Result deleteAccessToken(array $args = [])
 * @method Promise deleteAccessTokenAsync(array $args = [])
 * @method Result deleteDevEnvironment(array $args = [])
 * @method Promise deleteDevEnvironmentAsync(array $args = [])
 * @method Result deleteProject(array $args = [])
 * @method Promise deleteProjectAsync(array $args = [])
 * @method Result deleteSourceRepository(array $args = [])
 * @method Promise deleteSourceRepositoryAsync(array $args = [])
 * @method Result deleteSpace(array $args = [])
 * @method Promise deleteSpaceAsync(array $args = [])
 * @method Result getDevEnvironment(array $args = [])
 * @method Promise getDevEnvironmentAsync(array $args = [])
 * @method Result getProject(array $args = [])
 * @method Promise getProjectAsync(array $args = [])
 * @method Result getSourceRepository(array $args = [])
 * @method Promise getSourceRepositoryAsync(array $args = [])
 * @method Result getSourceRepositoryCloneUrls(array $args = [])
 * @method Promise getSourceRepositoryCloneUrlsAsync(array $args = [])
 * @method Result getSpace(array $args = [])
 * @method Promise getSpaceAsync(array $args = [])
 * @method Result getSubscription(array $args = [])
 * @method Promise getSubscriptionAsync(array $args = [])
 * @method Result getUserDetails(array $args = [])
 * @method Promise getUserDetailsAsync(array $args = [])
 * @method Result getWorkflow(array $args = [])
 * @method Promise getWorkflowAsync(array $args = [])
 * @method Result getWorkflowRun(array $args = [])
 * @method Promise getWorkflowRunAsync(array $args = [])
 * @method Result listAccessTokens(array $args = [])
 * @method Promise listAccessTokensAsync(array $args = [])
 * @method Result listDevEnvironmentSessions(array $args = [])
 * @method Promise listDevEnvironmentSessionsAsync(array $args = [])
 * @method Result listDevEnvironments(array $args = [])
 * @method Promise listDevEnvironmentsAsync(array $args = [])
 * @method Result listEventLogs(array $args = [])
 * @method Promise listEventLogsAsync(array $args = [])
 * @method Result listProjects(array $args = [])
 * @method Promise listProjectsAsync(array $args = [])
 * @method Result listSourceRepositories(array $args = [])
 * @method Promise listSourceRepositoriesAsync(array $args = [])
 * @method Result listSourceRepositoryBranches(array $args = [])
 * @method Promise listSourceRepositoryBranchesAsync(array $args = [])
 * @method Result listSpaces(array $args = [])
 * @method Promise listSpacesAsync(array $args = [])
 * @method Result listWorkflowRuns(array $args = [])
 * @method Promise listWorkflowRunsAsync(array $args = [])
 * @method Result listWorkflows(array $args = [])
 * @method Promise listWorkflowsAsync(array $args = [])
 * @method Result startDevEnvironment(array $args = [])
 * @method Promise startDevEnvironmentAsync(array $args = [])
 * @method Result startDevEnvironmentSession(array $args = [])
 * @method Promise startDevEnvironmentSessionAsync(array $args = [])
 * @method Result startWorkflowRun(array $args = [])
 * @method Promise startWorkflowRunAsync(array $args = [])
 * @method Result stopDevEnvironment(array $args = [])
 * @method Promise stopDevEnvironmentAsync(array $args = [])
 * @method Result stopDevEnvironmentSession(array $args = [])
 * @method Promise stopDevEnvironmentSessionAsync(array $args = [])
 * @method Result updateDevEnvironment(array $args = [])
 * @method Promise updateDevEnvironmentAsync(array $args = [])
 * @method Result updateProject(array $args = [])
 * @method Promise updateProjectAsync(array $args = [])
 * @method Result updateSpace(array $args = [])
 * @method Promise updateSpaceAsync(array $args = [])
 * @method Result verifySession(array $args = [])
 * @method Promise verifySessionAsync(array $args = [])
 */
class CodeCatalystClient extends AwsClient {}
