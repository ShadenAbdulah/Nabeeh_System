<?php
namespace Aws\BedrockAgent;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Agents for Amazon Bedrock** service.
 * @method Result associateAgentKnowledgeBase(array $args = [])
 * @method Promise associateAgentKnowledgeBaseAsync(array $args = [])
 * @method Result createAgent(array $args = [])
 * @method Promise createAgentAsync(array $args = [])
 * @method Result createAgentActionGroup(array $args = [])
 * @method Promise createAgentActionGroupAsync(array $args = [])
 * @method Result createAgentAlias(array $args = [])
 * @method Promise createAgentAliasAsync(array $args = [])
 * @method Result createDataSource(array $args = [])
 * @method Promise createDataSourceAsync(array $args = [])
 * @method Result createKnowledgeBase(array $args = [])
 * @method Promise createKnowledgeBaseAsync(array $args = [])
 * @method Result deleteAgent(array $args = [])
 * @method Promise deleteAgentAsync(array $args = [])
 * @method Result deleteAgentActionGroup(array $args = [])
 * @method Promise deleteAgentActionGroupAsync(array $args = [])
 * @method Result deleteAgentAlias(array $args = [])
 * @method Promise deleteAgentAliasAsync(array $args = [])
 * @method Result deleteAgentVersion(array $args = [])
 * @method Promise deleteAgentVersionAsync(array $args = [])
 * @method Result deleteDataSource(array $args = [])
 * @method Promise deleteDataSourceAsync(array $args = [])
 * @method Result deleteKnowledgeBase(array $args = [])
 * @method Promise deleteKnowledgeBaseAsync(array $args = [])
 * @method Result disassociateAgentKnowledgeBase(array $args = [])
 * @method Promise disassociateAgentKnowledgeBaseAsync(array $args = [])
 * @method Result getAgent(array $args = [])
 * @method Promise getAgentAsync(array $args = [])
 * @method Result getAgentActionGroup(array $args = [])
 * @method Promise getAgentActionGroupAsync(array $args = [])
 * @method Result getAgentAlias(array $args = [])
 * @method Promise getAgentAliasAsync(array $args = [])
 * @method Result getAgentKnowledgeBase(array $args = [])
 * @method Promise getAgentKnowledgeBaseAsync(array $args = [])
 * @method Result getAgentVersion(array $args = [])
 * @method Promise getAgentVersionAsync(array $args = [])
 * @method Result getDataSource(array $args = [])
 * @method Promise getDataSourceAsync(array $args = [])
 * @method Result getIngestionJob(array $args = [])
 * @method Promise getIngestionJobAsync(array $args = [])
 * @method Result getKnowledgeBase(array $args = [])
 * @method Promise getKnowledgeBaseAsync(array $args = [])
 * @method Result listAgentActionGroups(array $args = [])
 * @method Promise listAgentActionGroupsAsync(array $args = [])
 * @method Result listAgentAliases(array $args = [])
 * @method Promise listAgentAliasesAsync(array $args = [])
 * @method Result listAgentKnowledgeBases(array $args = [])
 * @method Promise listAgentKnowledgeBasesAsync(array $args = [])
 * @method Result listAgentVersions(array $args = [])
 * @method Promise listAgentVersionsAsync(array $args = [])
 * @method Result listAgents(array $args = [])
 * @method Promise listAgentsAsync(array $args = [])
 * @method Result listDataSources(array $args = [])
 * @method Promise listDataSourcesAsync(array $args = [])
 * @method Result listIngestionJobs(array $args = [])
 * @method Promise listIngestionJobsAsync(array $args = [])
 * @method Result listKnowledgeBases(array $args = [])
 * @method Promise listKnowledgeBasesAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result prepareAgent(array $args = [])
 * @method Promise prepareAgentAsync(array $args = [])
 * @method Result startIngestionJob(array $args = [])
 * @method Promise startIngestionJobAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateAgent(array $args = [])
 * @method Promise updateAgentAsync(array $args = [])
 * @method Result updateAgentActionGroup(array $args = [])
 * @method Promise updateAgentActionGroupAsync(array $args = [])
 * @method Result updateAgentAlias(array $args = [])
 * @method Promise updateAgentAliasAsync(array $args = [])
 * @method Result updateAgentKnowledgeBase(array $args = [])
 * @method Promise updateAgentKnowledgeBaseAsync(array $args = [])
 * @method Result updateDataSource(array $args = [])
 * @method Promise updateDataSourceAsync(array $args = [])
 * @method Result updateKnowledgeBase(array $args = [])
 * @method Promise updateKnowledgeBaseAsync(array $args = [])
 */
class BedrockAgentClient extends AwsClient {}
