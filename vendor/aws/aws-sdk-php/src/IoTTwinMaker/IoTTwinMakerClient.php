<?php
namespace Aws\IoTTwinMaker;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **AWS IoT TwinMaker** service.
 * @method Result batchPutPropertyValues(array $args = [])
 * @method Promise batchPutPropertyValuesAsync(array $args = [])
 * @method Result cancelMetadataTransferJob(array $args = [])
 * @method Promise cancelMetadataTransferJobAsync(array $args = [])
 * @method Result createComponentType(array $args = [])
 * @method Promise createComponentTypeAsync(array $args = [])
 * @method Result createEntity(array $args = [])
 * @method Promise createEntityAsync(array $args = [])
 * @method Result createMetadataTransferJob(array $args = [])
 * @method Promise createMetadataTransferJobAsync(array $args = [])
 * @method Result createScene(array $args = [])
 * @method Promise createSceneAsync(array $args = [])
 * @method Result createSyncJob(array $args = [])
 * @method Promise createSyncJobAsync(array $args = [])
 * @method Result createWorkspace(array $args = [])
 * @method Promise createWorkspaceAsync(array $args = [])
 * @method Result deleteComponentType(array $args = [])
 * @method Promise deleteComponentTypeAsync(array $args = [])
 * @method Result deleteEntity(array $args = [])
 * @method Promise deleteEntityAsync(array $args = [])
 * @method Result deleteScene(array $args = [])
 * @method Promise deleteSceneAsync(array $args = [])
 * @method Result deleteSyncJob(array $args = [])
 * @method Promise deleteSyncJobAsync(array $args = [])
 * @method Result deleteWorkspace(array $args = [])
 * @method Promise deleteWorkspaceAsync(array $args = [])
 * @method Result executeQuery(array $args = [])
 * @method Promise executeQueryAsync(array $args = [])
 * @method Result getComponentType(array $args = [])
 * @method Promise getComponentTypeAsync(array $args = [])
 * @method Result getEntity(array $args = [])
 * @method Promise getEntityAsync(array $args = [])
 * @method Result getMetadataTransferJob(array $args = [])
 * @method Promise getMetadataTransferJobAsync(array $args = [])
 * @method Result getPricingPlan(array $args = [])
 * @method Promise getPricingPlanAsync(array $args = [])
 * @method Result getPropertyValue(array $args = [])
 * @method Promise getPropertyValueAsync(array $args = [])
 * @method Result getPropertyValueHistory(array $args = [])
 * @method Promise getPropertyValueHistoryAsync(array $args = [])
 * @method Result getScene(array $args = [])
 * @method Promise getSceneAsync(array $args = [])
 * @method Result getSyncJob(array $args = [])
 * @method Promise getSyncJobAsync(array $args = [])
 * @method Result getWorkspace(array $args = [])
 * @method Promise getWorkspaceAsync(array $args = [])
 * @method Result listComponentTypes(array $args = [])
 * @method Promise listComponentTypesAsync(array $args = [])
 * @method Result listComponents(array $args = [])
 * @method Promise listComponentsAsync(array $args = [])
 * @method Result listEntities(array $args = [])
 * @method Promise listEntitiesAsync(array $args = [])
 * @method Result listMetadataTransferJobs(array $args = [])
 * @method Promise listMetadataTransferJobsAsync(array $args = [])
 * @method Result listProperties(array $args = [])
 * @method Promise listPropertiesAsync(array $args = [])
 * @method Result listScenes(array $args = [])
 * @method Promise listScenesAsync(array $args = [])
 * @method Result listSyncJobs(array $args = [])
 * @method Promise listSyncJobsAsync(array $args = [])
 * @method Result listSyncResources(array $args = [])
 * @method Promise listSyncResourcesAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result listWorkspaces(array $args = [])
 * @method Promise listWorkspacesAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateComponentType(array $args = [])
 * @method Promise updateComponentTypeAsync(array $args = [])
 * @method Result updateEntity(array $args = [])
 * @method Promise updateEntityAsync(array $args = [])
 * @method Result updatePricingPlan(array $args = [])
 * @method Promise updatePricingPlanAsync(array $args = [])
 * @method Result updateScene(array $args = [])
 * @method Promise updateSceneAsync(array $args = [])
 * @method Result updateWorkspace(array $args = [])
 * @method Promise updateWorkspaceAsync(array $args = [])
 */
class IoTTwinMakerClient extends AwsClient {}
